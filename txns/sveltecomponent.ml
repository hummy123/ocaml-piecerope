let data =
  [|
    ( 0,
      0,
      "<script>\n\
      \  import {onMount} from 'svelte';\n\
      \  let count = 0;\n\
      \  onMount(() => {\n\
      \    const interval = setInterval(() => count++, 1000);\n\
      \    return () => {\n\
      \      clearInterval(interval);\n\
      \    };\n\
      \  });\n\
       </script>\n\n\
       <style>\n\
      \  :global(body) {\n\
      \    margin: 0;\n\
      \    font-family: Arial, Helvetica, sans-serif;\n\
      \  }\n\
      \  .App {\n\
      \    text-align: center;\n\
      \  }\n\
      \  .App code {\n\
      \    background: #0002;\n\
      \    padding: 4px 8px;\n\
      \    border-radius: 4px;\n\
      \  }\n\
      \  .App p {\n\
      \    margin: 0.4rem;\n\
      \  }\n\n\
      \  .App-header {\n\
      \    background-color: #f9f6f6;\n\
      \    color: #333;\n\
      \    min-height: 100vh;\n\
      \    display: flex;\n\
      \    flex-direction: column;\n\
      \    align-items: center;\n\
      \    justify-content: center;\n\
      \    font-size: calc(10px + 2vmin);\n\
      \  }\n\
      \  .App-link {\n\
      \    color: #ff3e00;\n\
      \  }\n\
      \  .App-logo {\n\
      \    height: 36vmin;\n\
      \    pointer-events: none;\n\
      \    margin-bottom: 3rem;\n\
      \    animation: App-logo-spin infinite 1.6s ease-in-out alternate;\n\
      \  }\n\
      \  @keyframes App-logo-spin {\n\
      \    from {\n\
      \      transform: scale(1);\n\
      \    }\n\
      \    to {\n\
      \      transform: scale(1.06);\n\
      \    }\n\
      \  }\n\
       </style>\n\n\
       <div class=\"App\">\n\
      \  <header class=\"App-header\">\n\
      \    <img src=\"/logo.svg\" class=\"App-logo\" alt=\"logo\" />\n\
      \    <p>Edit <code>src/App.svelte</code> and save to reload.</p>\n\
      \    <p>Page has been open for <code>{count}</code> seconds.</p>\n\
      \    <p>\n\
      \      <a class=\"App-link\" href=\"https://svelte.dev\" \
       target=\"_blank\" rel=\"noopener noreferrer\">\n\
      \        Learn Svelte\n\
      \      </a>\n\
      \    </p>\n\
      \  </header>\n\
       </div>\n" );
    (7, 0, " ");
    (8, 0, "l");
    (9, 0, "a");
    (10, 0, "n");
    (11, 0, "g");
    (12, 0, "=");
    (13, 0, "\"");
    (14, 0, "t");
    (15, 0, "s");
    (16, 0, "\"");
    ( 0,
      1416,
      "<script>\n\
       \timport {onMount} from 'svelte';\n\
       \tlet count: number = 0;\n\
       \tonMount(() => {\n\
       \t  const interval = setInterval(() => count++, 1000);\n\
       \t  return () => {\n\
       \t\tclearInterval(interval);\n\
       \t  };\n\
       \t});\n\
      \  </script>\n\
      \  \n\
      \  <style>\n\
       \t:global(body) {\n\
       \t  margin: 0;\n\
       \t  font-family: Arial, Helvetica, sans-serif;\n\
       \t}\n\
       \t.App {\n\
       \t  text-align: center;\n\
       \t}\n\
       \t.App code {\n\
       \t  background: #0002;\n\
       \t  padding: 4px 8px;\n\
       \t  border-radius: 4px;\n\
       \t}\n\
       \t.App p {\n\
       \t  margin: 0.4rem;\n\
       \t}\n\
      \  \n\
       \t.App-header {\n\
       \t  background-color: #f9f6f6;\n\
       \t  color: #333;\n\
       \t  min-height: 100vh;\n\
       \t  display: flex;\n\
       \t  flex-direction: column;\n\
       \t  align-items: center;\n\
       \t  justify-content: center;\n\
       \t  font-size: calc(10px + 2vmin);\n\
       \t}\n\
       \t.App-link {\n\
       \t  color: #ff3e00;\n\
       \t}\n\
       \t.App-logo {\n\
       \t  height: 36vmin;\n\
       \t  pointer-events: none;\n\
       \t  margin-bottom: 3rem;\n\
       \t  animation: App-logo-spin infinite 1.6s ease-in-out alternate;\n\
       \t}\n\
       \t@keyframes App-logo-spin {\n\
       \t  from {\n\
       \t\ttransform: scale(1);\n\
       \t  }\n\
       \t  to {\n\
       \t\ttransform: scale(1.06);\n\
       \t  }\n\
       \t}\n\
      \  </style>\n\
      \  \n\
      \  <div class=\"App\">\n\
       \t<header class=\"App-header\">\n\
       \t  <img src=\"/logo.svg\" class=\"App-logo\" alt=\"logo\" />\n\
       \t  <p>Edit <code>src/App.svelte</code> and save to reload.</p>\n\
       \t  <p>Page has been open for <code>{count}</code> seconds.</p>\n\
       \t  <p>\n\
       \t\t<a class=\"App-link\" href=\"https://svelte.dev\" target=\"_blank\" \
       rel=\"noopener noreferrer\">\n\
       \t\t  Learn Svelte\n\
       \t\t</a>\n\
       \t  </p>\n\
       \t</header>\n\
      \  </div>\n\
      \  " );
    (7, 0, " ");
    (8, 0, " lang=\"ts\"");
    (8, 1, "");
    ( 0,
      1364,
      "<script>\n\
       \texport let name;\n\
       </script>\n\n\
       <main>\n\
       \t<h1>Hello {name}!</h1>\n\
       \t<p>Visit the <a href=\"https://svelte.dev/tutorial\">Svelte \
       tutorial</a> to learn how to build Svelte apps.</p>\n\
       </main>\n\n\
       <style>\n\
       \tmain {\n\
       \t\ttext-align: center;\n\
       \t\tpadding: 1em;\n\
       \t\tmax-width: 240px;\n\
       \t\tmargin: 0 auto;\n\
       \t}\n\n\
       \th1 {\n\
       \t\tcolor: #ff3e00;\n\
       \t\ttext-transform: uppercase;\n\
       \t\tfont-size: 4em;\n\
       \t\tfont-weight: 100;\n\
       \t}\n\n\
       \t@media (min-width: 640px) {\n\
       \t\tmain {\n\
       \t\t\tmax-width: none;\n\
       \t\t}\n\
       \t}\n\
       </style>" );
    (26, 0, "\n\t");
    (27, 1, "");
    (9, 0, "\texport let name;\n");
    (39, 4, "s");
    (40, 0, "t");
    (41, 0, "a");
    (42, 0, "t");
    (43, 0, "e");
    (90, 109, "");
    (90, 0, "<");
    (91, 0, "p");
    (92, 0, ">");
    (93, 0, "{");
    (94, 0, "J");
    (95, 0, "S");
    (96, 0, "O");
    (97, 0, "N");
    (94, 4, "JSON");
    (98, 0, ".");
    (99, 0, "s");
    (100, 0, "t");
    (101, 0, "r");
    (102, 0, "i");
    (103, 0, "n");
    (104, 0, "g");
    (105, 0, "i");
    (106, 0, "f");
    (107, 0, "y");
    (8, 0, "\nimport { stringify } from \"querystring\";\n");
    (141, 9, "stringify");
    (150, 0, "(");
    (151, 0, "s");
    (152, 0, "t");
    (153, 0, "a");
    (154, 0, "t");
    (155, 0, "e");
    (156, 0, ")");
    (157, 0, "}");
    (158, 0, "<");
    (159, 0, "/");
    (160, 0, "p");
    (161, 0, ">");
    (134, 0, "r");
    (135, 0, "e");
    (163, 0, "r");
    (164, 0, "e");
    (9, 40, "");
    (8, 1, "");
    (10, 17, "");
    (9, 1, "");
    (48, 23, "");
    (47, 1, "");
    (28, 0, "\n\texport let state;");
    (28, 0, "\n\texport let state;");
    (28, 0, "\n\texport let state;");
    (22, 5, "r");
    (23, 0, "o");
    (24, 0, "o");
    (25, 0, "m");
    (40, 5, "c");
    (41, 0, "o");
    (42, 0, "n");
    (43, 0, "n");
    (44, 0, "e");
    (45, 0, "c");
    (46, 0, "t");
    (47, 0, "e");
    (48, 0, "d");
    (63, 5, "v");
    (64, 0, "a");
    (65, 0, "l");
    (66, 0, "u");
    (67, 0, "e");
    (71, 0, "// ");
    (90, 1, "");
    (68, 1, "");
    (49, 1, "");
    (26, 1, "");
    (49, 0, "\texport let value\n");
    (67, 0, "\texport let value\n");
    (85, 0, "\texport let value\n");
    (49, 17, "");
    (48, 1, "");
    (61, 5, "p");
    (62, 0, "l");
    (63, 0, "a");
    (64, 0, "y");
    (65, 0, "e");
    (66, 0, "r");
    (67, 0, "s");
    (81, 5, "r");
    (82, 0, "o");
    (83, 0, "u");
    (84, 0, "n");
    (85, 0, "d");
    (86, 0, "s");
    (100, 5, "s");
    (101, 0, "e");
    (102, 0, "c");
    (103, 0, "s");
    (104, 0, "_");
    (105, 0, "p");
    (106, 0, "e");
    (107, 0, "r");
    (108, 0, "_");
    (109, 0, "r");
    (110, 0, "o");
    (111, 0, "u");
    (112, 0, "n");
    (113, 0, "d");
    (88, 0, "\texport let secs_per_round\n");
    (103, 0, "o");
    (104, 0, "n");
    (105, 0, "d");
    (130, 14, "_active_sessions");
    (186, 0, "\n\t");
    (188, 0, "<");
    (189, 0, "h");
    (190, 0, "1");
    (191, 0, ">");
    (192, 0, "R");
    (193, 0, "o");
    (194, 0, "o");
    (195, 0, "m");
    (196, 0, " ");
    (197, 0, "{");
    (198, 0, "r");
    (199, 0, "o");
    (200, 0, "o");
    (201, 0, "m");
    (202, 0, "}");
    (203, 0, "<");
    (204, 0, "/");
    (205, 0, "h");
    (206, 0, "1");
    (207, 0, ">");
    (203, 0, " ");
    (204, 0, "c");
    (205, 0, "o");
    (206, 0, "n");
    (207, 0, "n");
    (208, 0, "e");
    (209, 0, "c");
    (210, 0, "t");
    (211, 0, "e");
    (212, 0, "d");
    (213, 0, " ");
    (214, 0, "{");
    (215, 0, "c");
    (216, 0, "o");
    (217, 0, "n");
    (218, 0, "n");
    (219, 0, "e");
    (220, 0, "c");
    (221, 0, "t");
    (222, 0, "e");
    (223, 0, "d");
    (224, 0, "}");
    (48, 0, "\n\texport let connected");
    (39, 9, "s");
    (40, 0, "t");
    (41, 0, "a");
    (42, 0, "t");
    (43, 0, "e");
    (44, 22, "");
    (27, 0, "\texport let connected\n");
    (243, 0, " ");
    (244, 0, "s");
    (245, 0, "t");
    (246, 0, "a");
    (247, 0, "t");
    (248, 0, "e");
    (249, 0, " ");
    (250, 0, "{");
    (251, 0, "s");
    (252, 0, "t");
    (253, 0, "a");
    (254, 0, "t");
    (255, 0, "e");
    (256, 0, "}");
    (263, 35, "");
    (262, 1, "");
    (39, 9, "c");
    (40, 0, "o");
    (41, 0, "n");
    (42, 0, "n");
    (43, 0, "e");
    (44, 0, "c");
    (45, 0, "t");
    (46, 0, "i");
    (47, 0, "o");
    (48, 0, "n");
    (234, 9, "c");
    (235, 0, "o");
    (236, 0, "n");
    (237, 0, "n");
    (238, 0, "e");
    (239, 0, "c");
    (240, 0, "t");
    (241, 0, "i");
    (242, 0, "o");
    (243, 0, "n");
    (529, 0, " */");
    (283, 0, "/* ");
    (281, 0, "\n\t");
    (283, 0, "\n\t");
    (282, 1, "");
    (283, 1, "");
    (282, 0, "\t");
    (283, 0, "b");
    (284, 0, "o");
    (285, 0, "d");
    (286, 0, " ");
    (286, 1, "");
    (286, 0, "y");
    (287, 0, " ");
    (288, 0, "{");
    (289, 0, "\n\t\t");
    (292, 0, "\n\t\t");
    (290, 2, "");
    (291, 2, "\t}");
    (290, 0, "\t\t");
    (292, 0, "b");
    (293, 0, "a");
    (294, 0, "c");
    (295, 0, "k");
    (296, 0, "g");
    (297, 0, "r");
    (298, 0, "o");
    (299, 0, "u");
    (300, 0, "n");
    (301, 0, "d");
    (302, 0, "-");
    (303, 0, "c");
    (304, 0, "o");
    (305, 0, "l");
    (306, 0, "o");
    (307, 0, "r");
    (308, 0, ":");
    (309, 0, " ");
    (310, 0, "b");
    (311, 0, "l");
    (312, 0, "a");
    (313, 0, "c");
    (314, 0, "k");
    (315, 0, ";");
    (282, 37, "");
    (205, 0, "\n\t");
    (207, 0, "<");
    (208, 0, "h");
    (209, 0, "1");
    (210, 0, ">");
    (211, 0, "G");
    (212, 0, "l");
    (213, 0, "a");
    (214, 0, "s");
    (215, 0, "s");
    (216, 0, " ");
    (217, 0, "B");
    (218, 0, "e");
    (219, 0, "a");
    (220, 0, "d");
    (221, 0, " ");
    (222, 0, "G");
    (223, 0, "a");
    (224, 0, "m");
    (225, 0, "e");
    (226, 0, "s");
    (227, 0, "<");
    (228, 0, "/");
    (229, 0, "h");
    (230, 0, "1");
    (231, 0, ">");
    (226, 1, "");
    (226, 0, " ");
    (227, 0, "T");
    (228, 0, "i");
    (229, 0, "m");
    (230, 0, "e");
    (231, 0, "r");
    (293, 2, "4");
    (240, 2, "4");
    (292, 0, "h");
    (240, 0, "h");
    (254, 37, "");
    (247, 0, ":");
    (249, 0, "<");
    (250, 0, "e");
    (251, 0, "m");
    (252, 0, ">");
    (259, 0, "<");
    (260, 0, "/");
    (261, 0, "e");
    (262, 0, "m");
    (263, 0, ">");
    (269, 0, "\n\t");
    (271, 0, "<");
    (272, 0, "s");
    (273, 0, "p");
    (274, 0, "a");
    (274, 1, "");
    (273, 1, "");
    (272, 1, "");
    (272, 0, "d");
    (273, 0, "i");
    (274, 0, "v");
    (275, 0, ">");
    (276, 0, " connected {connection} state {state}");
    (276, 1, "");
    (312, 0, "<");
    (313, 0, "/");
    (314, 0, "d");
    (315, 0, "i");
    (316, 0, ">");
    (316, 1, "");
    (316, 0, "v");
    (317, 0, ">");
    (276, 10, "");
    (289, 5, "");
    (289, 0, "/");
    (304, 0, "\n\t");
    (306, 0, "\n\t");
    (305, 1, "");
    (307, 0, "<");
    (308, 0, "d");
    (309, 0, "i");
    (310, 0, "v");
    (311, 0, " ");
    (312, 0, "i");
    (313, 0, "d");
    (314, 0, "=");
    (315, 0, "b");
    (316, 0, "a");
    (317, 0, "r");
    (307, 11, "");
    (307, 0, "<");
    (308, 0, "d");
    (309, 0, "i");
    (310, 0, "v");
    (311, 0, " ");
    (312, 0, "i");
    (313, 0, "d");
    (314, 0, "=");
    (315, 0, "c");
    (316, 0, "o");
    (317, 0, "n");
    (318, 0, "f");
    (319, 0, "i");
    (320, 0, "g");
    (321, 0, "'");
    (315, 0, "'");
    (323, 0, ">");
    (324, 0, "<");
    (325, 0, "/");
    (326, 0, "d");
    (327, 0, "i");
    (328, 0, "v");
    (329, 0, ">");
    (324, 0, "\n\t\t\n\t");
    (327, 0, "<");
    (328, 0, "h");
    (329, 0, "2");
    (330, 0, ">");
    (331, 0, "C");
    (332, 0, "o");
    (333, 0, "n");
    (334, 0, "f");
    (335, 0, "i");
    (336, 0, "g");
    (337, 0, "<");
    (338, 0, "/");
    (339, 0, "h");
    (340, 0, "2");
    (341, 0, ">");
    (368, 0, "\n");
    (369, 0, "#");
    (370, 0, "c");
    (371, 0, "o");
    (372, 0, "n");
    (373, 0, "f");
    (374, 0, "i");
    (375, 0, "g");
    (376, 0, " ");
    (377, 0, "{");
    (378, 0, "\n\t");
    (380, 0, "\n\t");
    (379, 1, "");
    (380, 1, "}");
    (379, 0, "\t");
    (380, 0, "m");
    (380, 1, "");
    (380, 0, "m");
    (381, 0, "a");
    (382, 0, "r");
    (383, 0, "g");
    (384, 0, "i");
    (385, 0, "n");
    (386, 0, "-");
    (387, 0, "t");
    (388, 0, "o");
    (389, 0, "p");
    (390, 0, ":");
    (391, 0, " ");
    (392, 0, "1");
    (392, 1, "");
    (392, 0, "2");
    (393, 0, "e");
    (394, 0, "m");
    (395, 0, ";");
    (342, 0, "\n\t\t");
    (345, 0, "<");
    (346, 0, "u");
    (346, 1, "");
    (346, 0, "b");
    (347, 0, "u");
    (348, 0, "t");
    (349, 0, "t");
    (350, 0, "o");
    (351, 0, "n");
    (352, 0, " ");
    (353, 0, "o");
    (354, 0, "n");
    (355, 0, ":");
    (356, 0, "c");
    (357, 0, "l");
    (358, 0, "i");
    (353, 6, "on:click=\"\"");
    (363, 1, "");
    (362, 1, "");
    (362, 0, "{");
    (363, 0, "}");
    (363, 0, "s");
    (364, 0, "t");
    (365, 0, "a");
    (366, 0, "r");
    (367, 0, "t");
    (369, 0, ">");
    (370, 0, "S");
    (371, 0, "t");
    (372, 0, "a");
    (373, 0, "r");
    (374, 0, "t");
    (375, 0, "<");
    (376, 0, "/");
    (376, 1, "/button>");
    (187, 0, "\n");
    (188, 0, "\n");
    (188, 0, "c");
    (189, 0, "o");
    (190, 0, "n");
    (191, 0, "s");
    (192, 0, "t");
    (193, 0, " ");
    (194, 0, "s");
    (195, 0, "t");
    (196, 0, "a");
    (197, 0, "r");
    (198, 0, "t");
    (199, 0, " ");
    (200, 0, "=");
    (201, 0, " ");
    (202, 0, "(");
    (203, 0, ")");
    (204, 0, " ");
    (205, 0, "=");
    (206, 0, ">");
    (207, 0, " ");
    (208, 0, "{");
    (209, 0, "\n\t");
    (211, 0, "\n\t");
    (210, 1, "");
    (211, 1, "}");
    (210, 0, "\t");
    (211, 0, "c");
    (212, 0, "o");
    (213, 0, "n");
    (214, 0, "s");
    (215, 0, "o");
    (216, 0, "l");
    (217, 0, "e");
    (211, 7, "console");
    (218, 0, ".");
    (219, 0, "l");
    (220, 0, "o");
    (221, 0, "g");
    (219, 3, "log");
    (222, 0, "(");
    (223, 0, "'");
    (224, 0, "s");
    (225, 0, "t");
    (226, 0, "a");
    (227, 0, "r");
    (228, 0, "t");
    (229, 0, "!");
    (230, 0, "'");
    (231, 0, ")");
    (187, 0, "\n\t");
    (189, 0, "\n\t");
    (188, 1, "");
    (189, 1, "");
    (188, 0, "c");
    (189, 0, "o");
    (190, 0, "n");
    (191, 0, "s");
    (192, 0, "t");
    (193, 0, " ");
    (194, 0, "u");
    (195, 0, "p");
    (196, 0, "d");
    (197, 0, "a");
    (198, 0, "t");
    (199, 0, "e");
    (200, 0, "_");
    (201, 0, "s");
    (202, 0, "t");
    (203, 0, "a");
    (204, 0, "t");
    (205, 0, "e");
    (206, 0, "=");
    (207, 0, " ");
    (207, 1, "");
    (206, 1, "");
    (206, 0, " ");
    (207, 0, "=");
    (208, 0, " ");
    (209, 0, "(");
    (210, 0, "p");
    (211, 0, "a");
    (212, 0, "t");
    (213, 0, "c");
    (214, 0, "h");
    (215, 0, ")");
    (216, 0, " ");
    (209, 8, "p");
    (210, 0, "a");
    (211, 0, "t");
    (212, 0, "c");
    (213, 0, "h");
    (214, 0, " ");
    (215, 0, "=");
    (216, 0, ">");
    (217, 0, " ");
    (218, 0, "{");
    (219, 0, "\n\t");
    (221, 0, "\n\t");
    (220, 1, "");
    (221, 1, "}");
    (220, 0, "\t");
    (221, 0, "f");
    (222, 0, "e");
    (223, 0, "t");
    (224, 0, "c");
    (225, 0, "h");
    (226, 0, "(");
    (209, 0, "a");
    (210, 0, "s");
    (211, 0, "y");
    (212, 0, "n");
    (213, 0, "c");
    (214, 0, " ");
    (227, 0, "a");
    (228, 0, "w");
    (229, 0, "a");
    (230, 0, "i");
    (231, 0, "t");
    (232, 0, " ");
    (232, 1, "");
    (227, 5, "");
    (227, 0, "await");
    (232, 0, " ");
    (239, 0, "{");
    (240, 0, "\n\t\t");
    (243, 0, "m");
    (244, 0, "e");
    (245, 0, "t");
    (246, 0, "h");
    (247, 0, "d");
    (248, 0, ":");
    (249, 0, " ");
    (243, 7, "m");
    (244, 0, "e");
    (245, 0, "t");
    (246, 0, "h");
    (247, 0, "o");
    (248, 0, "d");
    (249, 0, ":");
    (250, 0, " ");
    (251, 0, "'");
    (252, 0, "P");
    (253, 0, "O");
    (254, 0, "S");
    (255, 0, "T");
    (256, 0, "'");
    (257, 0, ",");
    (258, 0, "\n\t\t");
    (261, 0, "m");
    (262, 0, "d");
    (263, 0, "e");
    (263, 1, "");
    (262, 1, "");
    (262, 0, "o");
    (263, 0, "d");
    (264, 0, "e");
    (265, 0, ":");
    (266, 0, " ");
    (267, 0, "'");
    (268, 0, "s");
    (269, 0, "a");
    (268, 2, "same-origin");
    (279, 0, "'");
    (280, 0, ",");
    (281, 0, "\n\t\t");
    (284, 0, "h");
    (285, 0, "e");
    (286, 0, "a");
    (287, 0, "d");
    (288, 0, "e");
    (289, 0, "r");
    (290, 0, "s");
    (291, 0, ":");
    (292, 0, " ");
    (293, 0, "{");
    (294, 0, "\n\t\t\t");
    (298, 0, "'");
    (299, 0, "c");
    (300, 0, "o");
    (301, 0, "n");
    (302, 0, "t");
    (303, 0, "e");
    (304, 0, "n");
    (305, 0, "t");
    (306, 0, "-");
    (307, 0, "t");
    (308, 0, "y");
    (309, 0, "p");
    (310, 0, "e");
    (311, 0, "'");
    (312, 0, ",");
    (312, 1, "");
    (312, 0, ":");
    (313, 0, " ");
    (314, 0, "'");
    (315, 0, "a");
    (316, 0, "p");
    (317, 0, "p");
    (318, 0, "l");
    (319, 0, "i");
    (320, 0, "c");
    (321, 0, "a");
    (322, 0, "t");
    (323, 0, "i");
    (324, 0, "o");
    (325, 0, "n");
    (326, 0, "/");
    (327, 0, "j");
    (328, 0, "s");
    (329, 0, "o");
    (330, 0, "n");
    (331, 0, "'");
    (332, 0, ",");
    (333, 0, "\n\t\t\t");
    (334, 3, "\t\t}");
    (337, 0, ",");
    (338, 0, "\n\t\t");
    (341, 0, "b");
    (342, 0, "d");
    (342, 1, "");
    (342, 0, "o");
    (343, 0, "d");
    (344, 0, "y");
    (345, 0, ":");
    (346, 0, " ");
    (347, 0, "J");
    (348, 0, "S");
    (349, 0, "O");
    (350, 0, "N");
    (347, 4, "JSON");
    (351, 0, ".");
    (352, 0, "s");
    (353, 0, "t");
    (354, 0, "r");
    (355, 0, "i");
    (356, 0, "n");
    (357, 0, "g");
    (358, 0, "i");
    (359, 0, "f");
    (360, 0, "h");
    (360, 1, "");
    (360, 0, "y");
    (352, 9, "stringify");
    (361, 0, "(");
    (362, 0, "p");
    (363, 0, "a");
    (364, 0, "t");
    (365, 0, "c");
    (366, 0, "h");
    (367, 0, ")");
    (368, 0, "\n\t\t");
    (369, 2, "\t}");
    (239, 0, "'");
    (240, 0, "/");
    (240, 1, "");
    (239, 1, "");
    (239, 0, "`");
    (240, 0, "$");
    (241, 0, "{");
    (242, 0, "r");
    (243, 0, "o");
    (244, 0, "o");
    (245, 0, "m");
    (246, 0, "}");
    (247, 0, "/");
    (248, 0, "c");
    (249, 0, "o");
    (250, 0, "n");
    (251, 0, "f");
    (252, 0, "i");
    (253, 0, "g");
    (254, 0, "u");
    (255, 0, "r");
    (256, 0, "e");
    (257, 0, "`");
    (258, 0, ",");
    (259, 0, " ");
    (392, 0, ")");
    (441, 0, "\n\t");
    (443, 0, "u");
    (444, 0, "p");
    (445, 0, "d");
    (446, 0, "a");
    (443, 4, "update_state");
    (455, 0, "(");
    (456, 0, "{");
    (457, 0, "s");
    (458, 0, "t");
    (459, 0, "a");
    (460, 0, "t");
    (461, 0, "e");
    (462, 0, ":");
    (463, 0, " ");
    (464, 0, "'");
    (465, 0, "p");
    (466, 0, "l");
    (467, 0, "a");
    (468, 0, "y");
    (469, 0, "i");
    (470, 0, "n");
    (471, 0, "g");
    (472, 0, "'");
    (473, 0, "}");
    (474, 0, ")");
    (165, 0, " ");
    (166, 0, "=");
    (167, 0, " ");
    (168, 0, "n");
    (169, 0, "u");
    (170, 0, "l");
    (171, 0, "l");
    (165, 7, "");
    (595, 0, "\n\t");
    (596, 1, "");
    (595, 1, "");
    (633, 0, "\n\t\t");
    (636, 0, "{");
    (637, 0, "#");
    (638, 0, "i");
    (639, 0, "f");
    (639, 1, "");
    (638, 1, "");
    (637, 1, "");
    (637, 0, "i");
    (638, 0, "f");
    (637, 2, "if");
    (638, 1, "");
    (637, 1, "");
    (637, 0, "#");
    (638, 0, "i");
    (638, 1, "if }\n\t\t\t\n\t\t{/if");
    (641, 0, "s");
    (642, 0, "t");
    (643, 0, "a");
    (644, 0, "t");
    (645, 0, "e");
    (646, 0, " ");
    (647, 0, "=");
    (648, 0, "=");
    (649, 0, " ");
    (650, 0, "'");
    (651, 0, "w");
    (652, 0, "a");
    (653, 0, "i");
    (654, 0, "t");
    (655, 0, "i");
    (656, 0, "n");
    (657, 0, "g");
    (658, 0, "'");
    (713, 0, "\n\t\t{/if");
    (665, 7, "");
    (667, 0, "\t");
    (714, 0, "}");
    (663, 1, "");
    (661, 2, "");
    (660, 1, "");
    (703, 0, "\n\t\t\t");
    (707, 0, "{");
    (708, 0, "#");
    (708, 1, "");
    (708, 0, "e");
    (709, 0, "l");
    (709, 1, "");
    (708, 1, "");
    (708, 0, "e");
    (709, 0, "l");
    (708, 2, "else");
    (712, 0, "}");
    (704, 3, "\t\t");
    (707, 4, "");
    (707, 0, "#");
    (708, 0, "e");
    (709, 0, "l");
    (710, 0, "i");
    (711, 0, "f");
    (707, 1, "");
    (707, 0, ":");
    (708, 4, "e");
    (709, 0, "l");
    (710, 0, "s");
    (711, 0, "e");
    (712, 0, " ");
    (713, 0, "i");
    (714, 0, "f");
    (715, 0, " ");
    (716, 0, "s");
    (717, 0, "t");
    (718, 0, "a");
    (719, 0, "t");
    (720, 0, "e");
    (721, 0, " ");
    (722, 0, "=");
    (723, 0, "=");
    (724, 0, " ");
    (725, 0, "'");
    (726, 0, "p");
    (727, 0, "l");
    (728, 0, "a");
    (729, 0, "y");
    (730, 0, "i");
    (731, 0, "n");
    (732, 0, "g");
    (733, 0, "'");
    (661, 0, "\t\t\t<button on:click={start}>Start</button>\n");
    (746, 32, "");
    (704, 0, "\t\t\t{:else if state == 'playing'}\n");
    (704, 3, "\t\t");
    (682, 5, "");
    (682, 0, "(");
    (683, 0, ")");
    (684, 0, " ");
    (685, 0, "=");
    (686, 0, ">");
    (687, 0, " ");
    (688, 0, "update_state({state: 'playing'})");
    (476, 0, "// ");
    (442, 0, "// ");
    (419, 0, "// ");
    (397, 0, "// ");
    (802, 5, "update_state({state: 'playing'})");
    (802, 0, "(");
    (803, 0, ")");
    (804, 0, " ");
    (805, 0, "=");
    (806, 0, ">");
    (807, 0, " ");
    (830, 7, "p");
    (831, 0, "a");
    (832, 0, "u");
    (833, 0, "s");
    (834, 0, "e");
    (835, 0, "d");
    (841, 5, "P");
    (842, 0, "a");
    (843, 0, "u");
    (844, 0, "s");
    (845, 0, "e");
    (749, 0, "\t\t{:else if state == 'playing'}\n");
    (749, 32, "");
    ( 749,
      0,
      "\t\t{:else if state == 'playing'}\n\
       \t\t\t<button on:click={() => update_state({state: \
       'paused'})}>Pause</button>\n" );
    (878, 7, "p");
    (879, 0, "a");
    (880, 0, "u");
    (881, 0, "s");
    (882, 0, "e");
    (883, 0, "d");
    (936, 6, "r");
    (937, 0, "e");
    (938, 0, "s");
    (939, 0, "u");
    (940, 0, "m");
    (941, 0, "e");
    (936, 6, "p");
    (937, 0, "l");
    (938, 0, "a");
    (939, 0, "y");
    (940, 0, "i");
    (941, 0, "n");
    (942, 0, "g");
    (948, 5, "R");
    (949, 0, "e");
    (950, 0, "s");
    (951, 0, "u");
    (952, 0, "m");
    (953, 0, "e");
    (971, 0, "\n\t\t");
    (974, 0, "\n\t\t");
    (972, 2, "");
    (975, 0, "<");
    (976, 0, "l");
    (977, 0, "a");
    (978, 0, "b");
    (979, 0, "e");
    (980, 0, "l");
    (981, 0, ">");
    (982, 0, "N");
    (983, 0, "u");
    (984, 0, "m");
    (985, 0, "b");
    (986, 0, "e");
    (987, 0, "r");
    (988, 0, " ");
    (989, 0, "o");
    (990, 0, "f");
    (991, 0, " ");
    (992, 0, "p");
    (993, 0, "l");
    (994, 0, "a");
    (995, 0, "y");
    (996, 0, "e");
    (997, 0, "r");
    (998, 0, "s");
    (999, 0, "<");
    (1000, 0, "i");
    (1001, 0, "n");
    (1002, 0, "p");
    (1003, 0, "u");
    (1004, 0, "t");
    (1005, 0, " ");
    (1006, 0, "t");
    (1007, 0, "y");
    (1008, 0, "p");
    (1009, 0, "e");
    (1010, 0, "=");
    (1011, 0, "n");
    (1012, 0, "u");
    (1013, 0, "m");
    (1014, 0, "b");
    (1011, 0, "'");
    (1016, 0, "e");
    (1017, 0, "r");
    (1018, 0, "'");
    (1019, 0, ">");
    (1020, 0, "<");
    (1021, 0, "/");
    (1022, 0, "l");
    (1021, 2, "/label>");
    (1028, 0, ">");
    (1028, 1, "");
    (975, 0, "<");
    (976, 0, "d");
    (977, 0, "i");
    (978, 0, "v");
    (979, 0, ">");
    (980, 0, "</div>");
    (980, 6, "");
    (980, 0, "\n\t\t\t");
    (1037, 0, "\n\t\t\t");
    (1041, 0, "</div>");
    (1038, 3, "\t\t");
    (1028, 0, " ");
    (1029, 0, "v");
    (1030, 0, "a");
    (1031, 0, "l");
    (1032, 0, "u");
    (1029, 4, "");
    (1029, 0, "b");
    (1030, 0, "i");
    (1031, 0, "n");
    (1032, 0, "d");
    (1033, 0, ":");
    (1029, 5, "");
    (1029, 0, "o");
    (1030, 0, "n");
    (1031, 0, ":");
    (1032, 0, "i");
    (1033, 0, "n");
    (1034, 0, "p");
    (1029, 6, "on:input=\"\"");
    (1039, 1, "");
    (1038, 1, "");
    (395, 0, "\n");
    (396, 0, "\n");
    (397, 0, "c");
    (398, 0, "o");
    (399, 0, "n");
    (400, 0, "s");
    (401, 0, "t");
    (402, 0, " ");
    (403, 0, "p");
    (404, 0, "a");
    (405, 0, "t");
    (406, 0, "c");
    (407, 0, "h");
    (408, 0, " ");
    (409, 0, "=");
    (410, 0, " ");
    (403, 8, "u");
    (404, 0, "p");
    (405, 0, "d");
    (406, 0, " ");
    (407, 0, "=");
    (408, 0, " ");
    (409, 0, "(");
    (410, 0, "p");
    (411, 0, "a");
    (412, 0, "t");
    (413, 0, "c");
    (414, 0, "h");
    (409, 1, "");
    (414, 0, " ");
    (414, 1, "");
    (414, 0, ">");
    (415, 0, " ");
    (415, 1, "");
    (414, 1, "");
    (414, 0, " ");
    (415, 0, "=");
    (416, 0, ">");
    (417, 0, " ");
    (418, 0, "(");
    (419, 0, ")");
    (420, 0, " ");
    (421, 0, "=");
    (422, 0, ">");
    (423, 0, " ");
    (424, 0, "u");
    (425, 0, "p");
    (426, 0, "d");
    (427, 0, "a");
    (428, 0, "t");
    (429, 0, "e");
    (424, 6, "update_state");
    (436, 0, "(");
    (437, 0, "p");
    (438, 0, "a");
    (439, 0, "t");
    (440, 0, "c");
    (441, 0, "h");
    (442, 0, ")");
    (956, 18, "u");
    (850, 18, "u");
    (742, 18, "u");
    (923, 0, "p");
    (834, 0, "p");
    (743, 0, "p");
    (926, 0, "d");
    (836, 0, "d");
    (744, 0, "d");
    (1041, 0, "{");
    (1042, 0, "u");
    (1043, 0, "p");
    (1044, 0, "d");
    (1042, 3, "upd");
    (1045, 0, "(");
    (409, 5, "");
    (409, 0, "(");
    (410, 0, "k");
    (8, 0, "\nimport { kMaxLength } from \"buffer\"\n");
    (447, 1, "kMaxLength");
    (457, 0, ",");
    (458, 0, " ");
    (459, 0, "v");
    (460, 0, ")");
    (458, 3, "");
    (457, 1, "");
    (447, 10, "k");
    (8, 37, "");
    (411, 0, ",");
    (412, 0, " ");
    (413, 0, "v");
    (414, 0, ")");
    (438, 5, "");
    (438, 0, "{");
    (439, 0, "[");
    (440, 0, "k");
    (441, 0, "]");
    (442, 0, ":");
    (443, 0, " ");
    (444, 0, "v");
    (445, 0, "}");
    (934, 1, "");
    (843, 1, "");
    (750, 1, "");
    (932, 0, "'");
    (842, 0, "'");
    (750, 0, "'");
    (940, 0, "'");
    (849, 0, "'");
    (756, 0, "'");
    (943, 1, "");
    (851, 1, "");
    (757, 1, "");
    (941, 0, ",");
    (850, 0, ",");
    (757, 0, ",");
    (768, 1, "");
    (860, 1, "");
    (952, 1, "");
    (1046, 4, "");
    (1036, 10, "");
    (1035, 1, "");
    (1035, 0, " on:input={");
    (1046, 0, "}");
    (1046, 0, "(");
    (1047, 0, ")");
    (448, 0, "\n");
    (449, 0, "c");
    (450, 0, "o");
    (451, 0, "n");
    (452, 0, "s");
    (453, 0, "t");
    (454, 0, " ");
    (455, 0, "c");
    (456, 0, "o");
    (457, 0, "n");
    (458, 0, "f");
    (459, 0, "i");
    (460, 0, "g");
    (461, 0, " ");
    (462, 0, "=");
    (463, 0, " ");
    (464, 0, "k");
    (465, 0, " ");
    (466, 0, "=");
    (467, 0, ">");
    (468, 0, " ");
    (469, 0, "(");
    (470, 0, "e");
    (471, 0, ")");
    (471, 1, "");
    (470, 1, "");
    (469, 1, "");
    (469, 0, "e");
    (470, 0, " ");
    (471, 0, "=");
    (472, 0, ">");
    (473, 0, " ");
    (474, 0, "{");
    (475, 0, "\n\t");
    (477, 0, "\n\t");
    (476, 1, "");
    (477, 1, "}");
    (476, 0, "\t");
    (477, 0, "c");
    (478, 0, "o");
    (479, 0, "n");
    (480, 0, "s");
    (481, 0, "o");
    (482, 0, "l");
    (483, 0, "e");
    (477, 7, "console");
    (484, 0, ".");
    (485, 0, "l");
    (486, 0, "o");
    (487, 0, "g");
    (485, 3, "log");
    (488, 0, "(");
    (489, 0, "'");
    (490, 0, "k");
    (491, 0, "'");
    (492, 0, ",");
    (493, 0, " ");
    (494, 0, "k");
    (495, 0, ",");
    (496, 0, " ");
    (497, 0, "e");
    (498, 0, ")");
    (1100, 1, "");
    (1099, 1, "");
    (1099, 0, "c");
    (1100, 0, "o");
    (1101, 0, "n");
    (1102, 0, "f");
    (1103, 0, "i");
    (1104, 0, "g");
    (1099, 6, "config");
    (1105, 0, "(");
    (1106, 0, "'");
    (1107, 0, "p");
    (1108, 0, "l");
    (1109, 0, "a");
    (1110, 0, "y");
    (1111, 0, "i");
    (1112, 0, "n");
    (1112, 1, "");
    (1111, 1, "");
    (1111, 0, "e");
    (1112, 0, "r");
    (1113, 0, "s");
    (1114, 0, "'");
    (1115, 0, ")");
    (1068, 0, "\n\t\t\t\t");
    (1123, 0, "\n\t\t\t");
    (498, 0, ".");
    (499, 0, "v");
    (500, 0, "a");
    (501, 0, "l");
    (502, 0, "u");
    (503, 0, "e");
    (499, 5, "d");
    (500, 0, "a");
    (501, 0, "t");
    (502, 0, "a");
    (504, 0, "\n\t");
    (506, 0, "u");
    (507, 0, "p");
    (508, 0, "d");
    (509, 0, "a");
    (506, 4, "update_state");
    (518, 0, "(");
    (519, 0, "k");
    (520, 0, ",");
    (521, 0, " ");
    (521, 1, "");
    (520, 1, "");
    (519, 1, "");
    (519, 0, "{");
    (520, 0, "[");
    (521, 0, "k");
    (522, 0, "]");
    (523, 0, ":");
    (524, 0, " ");
    (525, 0, "e");
    (526, 0, ".");
    (527, 0, "d");
    (528, 0, "a");
    (529, 0, "t");
    (530, 0, "a");
    (531, 0, "}");
    (532, 0, ")");
    (1127, 0, " ");
    (1128, 0, "v");
    (1129, 0, "a");
    (1130, 0, "l");
    (1131, 0, "u");
    (1132, 0, "e");
    (1133, 0, "=");
    (1134, 0, "{");
    (1135, 0, "p");
    (1136, 0, "l");
    (1137, 0, "a");
    (1138, 0, "y");
    (1139, 0, "e");
    (1140, 0, "r");
    (1141, 0, "s");
    (1142, 0, "}");
    (1173, 0, " -->");
    (1107, 0, "<!-- ");
    ( 1103,
      0,
      "\t\t\t\t<!-- <input type='number' value={players} \
       on:input={config('players')}> -->\n" );
    (1258, 4, "");
    (1187, 5, "");
    (1200, 6, "r");
    (1201, 0, "a");
    (1202, 0, "n");
    (1203, 0, "g");
    (1204, 0, "e");
    (1251, 0, " ");
    (1252, 0, "m");
    (1253, 0, "o");
    (1254, 0, "i");
    (1255, 0, "n");
    (1255, 1, "");
    (1254, 1, "");
    (1253, 1, "");
    (1253, 0, "i");
    (1254, 0, "n");
    (1255, 0, "=");
    (1256, 0, "1");
    (1257, 0, " ");
    (1258, 0, "m");
    (1259, 0, "a");
    (1260, 0, "x");
    (1261, 0, "=");
    (1262, 0, "1");
    (1263, 0, "2");
    (497, 0, "e");
    (498, 0, ",");
    (499, 0, " ");
    (506, 0, ",");
    (507, 0, " ");
    (508, 0, "e");
    (509, 0, ".");
    (510, 0, "d");
    (510, 1, "");
    (510, 0, "v");
    (511, 0, "a");
    (512, 0, "l");
    (513, 0, "u");
    (514, 0, "e");
    (1238, 5, "s");
    (1239, 0, "u");
    (1240, 0, "b");
    (1241, 0, "m");
    (1242, 0, "i");
    (1243, 0, "t");
    (1278, 0, " -->");
    (1199, 0, "<!-- ");
    (1190, 4, "");
    (1119, 5, "");
    (1184, 0, " ");
    (1185, 0, "m");
    (1186, 0, "i");
    (1187, 0, "n");
    (1188, 0, "=");
    (1189, 0, "1");
    (1190, 0, " ");
    (1191, 0, "m");
    (1192, 0, "a");
    (1193, 0, "x");
    (1194, 0, "=");
    (1195, 0, "1");
    (1196, 0, "2");
    (518, 0, "// ");
    (1162, 5, "s");
    (1163, 0, "u");
    (1164, 0, "b");
    (1165, 0, "m");
    (1166, 0, "i");
    (1167, 0, "t");
    (518, 3, "");
    (1159, 6, "b");
    (1160, 0, "l");
    (1161, 0, "u");
    (1162, 0, "r");
    ( 1079,
      0,
      "\t\t<div>\n\
       \t\t\t<label>Number of players\n\
       \t\t\t\t<input type='number' value={players} \
       on:blur={config('players')} min=1 max=12>\n\
       \t\t\t\t<!-- <input type='range' value={players} \
       on:submit={config('players')} min=1 max=12> -->\n\
       \t\t\t</label>\n\
       \t\t</div>\n" );
    (1311, 0, "\n\t\t");
    (1343, 7, "r");
    (1312, 2, "");
    (1341, 1, "");
    (1341, 0, "r");
    (1342, 0, "o");
    (1343, 0, "u");
    (1344, 0, "n");
    (1345, 0, "d");
    (1346, 0, "s");
    (1406, 7, "r");
    (1380, 7, "r");
    (1401, 0, "o");
    (1381, 0, "o");
    (1403, 0, "u");
    (1382, 0, "u");
    (1405, 0, "n");
    (1383, 0, "n");
    (1407, 0, "d");
    (1384, 0, "d");
    (1409, 0, "s");
    (1385, 0, "s");
    (1391, 4, "i");
    (1159, 4, "i");
    (1389, 0, "n");
    (1160, 0, "n");
    (1391, 0, "p");
    (1161, 0, "p");
    (1393, 0, "u");
    (1162, 0, "u");
    (1395, 0, "t");
    (1163, 0, "t");
    (499, 1, "");
    (498, 1, "");
    (497, 1, "");
    (1182, 12, "");
    (512, 0, ",");
    (513, 0, " ");
    (514, 0, "e");
    (515, 0, ".");
    (516, 0, "t");
    (517, 0, "a");
    (518, 0, "r");
    (519, 0, "g");
    (520, 0, "e");
    (521, 0, "t");
    (522, 0, ".");
    (523, 0, "v");
    (524, 0, "a");
    (525, 0, "l");
    (526, 0, "u");
    (527, 0, "e");
    (552, 4, "t");
    (553, 0, "a");
    (554, 0, "r");
    (555, 0, "g");
    (556, 0, "e");
    (557, 0, "t");
    (558, 0, ".");
    (559, 0, "v");
    (560, 0, "a");
    (561, 0, "l");
    (562, 0, "u");
    (563, 0, "e");
    (1205, 0, " ");
    (1206, 0, "min=1 max=12");
    (528, 0, ",");
    (529, 0, " ");
    (530, 0, "e");
    (531, 0, ".");
    (532, 0, "t");
    (533, 0, "a");
    (534, 0, "r");
    (535, 0, "g");
    (536, 0, "e");
    (537, 0, "t");
    (538, 0, ".");
    (539, 0, "t");
    (540, 0, "y");
    (541, 0, "p");
    (542, 0, "e");
    (544, 0, "\n\t");
    (546, 0, "c");
    (547, 0, "o");
    (548, 0, "n");
    (549, 0, "s");
    (550, 0, "t");
    (551, 0, " ");
    (552, 0, "v");
    (553, 0, "a");
    (554, 0, "l");
    (555, 0, "u");
    (556, 0, "e");
    (557, 0, " ");
    (558, 0, "=");
    (559, 0, " ");
    (560, 0, "e.target.type");
    (573, 0, " ");
    (574, 0, "=");
    (575, 0, "=");
    (576, 0, "=");
    (577, 0, " ");
    (578, 0, "'");
    (579, 0, "n");
    (580, 0, "u");
    (581, 0, "m");
    (582, 0, "b");
    (583, 0, "e");
    (584, 0, "r");
    (585, 0, "'");
    (586, 0, " ");
    (587, 0, "?");
    (588, 0, " ");
    (589, 0, "e.target.value");
    (603, 0, "|");
    (604, 0, "0");
    (605, 0, " ");
    (606, 0, ":");
    (607, 0, " ");
    (608, 0, "e.target.value");
    (544, 0, "\n\t");
    (546, 0, "c");
    (547, 0, "o");
    (548, 0, "n");
    (549, 0, "s");
    (550, 0, "t");
    (551, 0, " ");
    (552, 0, "r");
    (553, 0, "a");
    (554, 0, "w");
    (555, 0, "+");
    (555, 1, "");
    (555, 0, "_");
    (556, 0, "v");
    (557, 0, "a");
    (558, 0, "l");
    (559, 0, "u");
    (560, 0, "e");
    (561, 0, " ");
    (562, 0, "=");
    (563, 0, " ");
    (564, 0, "e.target.value");
    (642, 14, "r");
    (623, 14, "r");
    (630, 0, "a");
    (624, 0, "a");
    (632, 0, "w");
    (625, 0, "w");
    (634, 0, "_");
    (626, 0, "_");
    (636, 0, "v");
    (627, 0, "v");
    (638, 0, "a");
    (628, 0, "a");
    (640, 0, "l");
    (629, 0, "l");
    (642, 0, "u");
    (630, 0, "u");
    (644, 0, "e");
    (631, 0, "e");
    (667, 14, "v");
    (668, 0, "a");
    (669, 0, "l");
    (670, 0, "u");
    (671, 0, "e");
    (887, 0, "\n\t");
    (889, 0, "\n\t");
    (888, 1, "");
    (890, 0, "<");
    (891, 0, "d");
    (892, 0, "i");
    (893, 0, "v");
    (894, 0, " ");
    (895, 0, "i");
    (896, 0, "d");
    (897, 0, "=");
    (898, 0, "r");
    (899, 0, "o");
    (900, 0, "u");
    (901, 0, "n");
    (902, 0, "d");
    (903, 0, "s");
    (904, 0, ">");
    (904, 0, "'");
    (898, 0, "'");
    (907, 0, "\n\t\t");
    (910, 0, "<");
    (911, 0, "/");
    (912, 0, "d");
    (913, 0, "i");
    (914, 0, "v");
    (908, 7, "\t</div>");
    (907, 0, "\n\t\t");
    (910, 0, "{");
    (911, 0, "#");
    (912, 0, "f");
    (770, 0, "\n");
    (771, 0, "\n");
    (771, 0, "c");
    (772, 0, "o");
    (773, 0, "n");
    (774, 0, "t");
    (774, 1, "");
    (774, 0, "s");
    (775, 0, "t");
    (776, 0, " ");
    (777, 0, "r");
    (778, 0, "o");
    (779, 0, "u");
    (780, 0, "n");
    (781, 0, "d");
    (782, 0, "s");
    (783, 0, " ");
    (784, 0, "=");
    (785, 0, " ");
    (786, 0, "n");
    (787, 0, "e");
    (788, 0, "w");
    (789, 0, " ");
    (790, 0, "A");
    (791, 0, "r");
    (792, 0, "r");
    (793, 0, "a");
    (794, 0, "y");
    (790, 5, "Array");
    (795, 0, "(");
    (771, 5, "l");
    (772, 0, "e");
    (773, 0, "t");
    (780, 1, "");
    (780, 0, "_");
    (781, 0, "a");
    (782, 0, "r");
    (783, 0, "r");
    (797, 0, "r");
    (798, 0, "o");
    (799, 0, "u");
    (800, 0, "n");
    (801, 0, "d");
    (802, 0, "s");
    (803, 0, ")");
    (804, 0, ".");
    (805, 0, "f");
    (806, 0, "i");
    (807, 0, "l");
    (808, 0, "l");
    (805, 4, "fill");
    (809, 0, "(");
    (810, 0, ")");
    (811, 0, ".");
    (812, 0, "m");
    (813, 0, "a");
    (814, 0, "p");
    (804, 11, "");
    (804, 0, ".");
    (805, 0, "f");
    (806, 0, "i");
    (807, 0, "l");
    (808, 0, "l");
    (805, 4, "fill");
    (809, 0, "(");
    (810, 0, ")");
    (954, 1, "");
    (954, 0, "e");
    (955, 0, "a");
    (956, 0, "c");
    (957, 0, "h");
    (958, 0, " ");
    (959, 0, "r");
    (960, 0, "o");
    (961, 0, "u");
    (962, 0, "n");
    (963, 0, "d");
    (964, 0, "_");
    (965, 0, "a");
    (966, 0, "r");
    (967, 0, "r");
    (968, 0, " ");
    (969, 0, "a");
    (970, 0, "s");
    (971, 0, " ");
    (972, 0, "_");
    (973, 0, ",");
    (974, 0, " ");
    (975, 0, "i");
    (976, 0, "}");
    (977, 0, "\n\t\t");
    (980, 0, "\n\t\t");
    (978, 2, "");
    (981, 0, "{");
    (982, 0, "/");
    (983, 0, "e");
    (984, 0, "a");
    (983, 2, "each");
    (987, 0, "}");
    (978, 0, "\t\t");
    (980, 0, "\t");
    (981, 0, "<");
    (982, 0, "d");
    (983, 0, "i");
    (984, 0, "v");
    (985, 0, ">");
    (986, 0, "R");
    (987, 0, "o");
    (988, 0, "u");
    (989, 0, "n");
    (990, 0, "d");
    (991, 0, " ");
    (992, 0, "{");
    (993, 0, "i");
    (994, 0, "}");
    (995, 0, "<");
    (996, 0, "/");
    (997, 0, "d");
    (998, 0, "i");
    (999, 0, "v");
    (1000, 0, ">");
    (797, 0, "M");
    (798, 0, "a");
    (799, 0, "t");
    (800, 0, "h");
    (801, 0, ".");
    (802, 0, "m");
    (803, 0, "i");
    (804, 0, "n");
    (804, 1, "");
    (803, 1, "");
    (803, 0, "a");
    (804, 0, "x");
    (802, 3, "max");
    (805, 0, "(");
    (812, 0, ",");
    (813, 0, " ");
    (814, 0, "0");
    (815, 0, ")");
    (784, 0, "\n");
    (785, 0, "$");
    (786, 0, ":");
    (786, 1, "");
    (785, 1, "");
    (785, 0, ":");
    (786, 0, "$");
    (786, 1, "");
    (785, 1, "");
    (785, 0, "$");
    (786, 0, ":");
    (787, 0, " ");
    (788, 0, "r");
    (789, 0, "o");
    (790, 0, "u");
    (791, 0, "n");
    (792, 0, "d");
    (793, 0, "_");
    (788, 6, "round_arr");
    (1020, 0, "+");
    (1021, 0, "1");
    (1023, 0, ":");
    (1024, 0, "\n\t\t\t\t\n\t\t\t");
    (1025, 4, "");
    (985, 9, "A");
    (986, 0, "r");
    (987, 0, "r");
    (988, 0, "a");
    (989, 0, "y");
    (985, 5, "Array");
    (990, 0, "(");
    (991, 0, "r");
    (992, 0, "o");
    (993, 0, "u");
    (994, 0, "n");
    (995, 0, "d");
    (996, 0, "s");
    (997, 0, ")");
    (785, 0, "// ");
    (771, 0, "// ");
    (997, 0, "M");
    (998, 0, "a");
    (999, 0, "t");
    (1000, 0, "h");
    (1001, 0, ".");
    (1002, 0, "m");
    (1003, 0, "a");
    (1004, 0, "x");
    (1002, 3, "max");
    (1005, 0, "(");
    (1012, 0, ",");
    (1013, 0, " ");
    (1014, 0, "0");
    (1015, 0, ")");
    (1048, 0, "\t\t\t\t");
    (1052, 0, "{#each Array(Math.max(rounds, 0)) as _, i}");
    (1074, 6, "p");
    (1075, 0, "l");
    (1076, 0, "a");
    (1077, 0, "y");
    (1078, 0, "e");
    (1079, 0, "r");
    (1080, 0, "s");
    (1095, 0, "\n\t\t\t\t");
    (1100, 0, "<");
    (1100, 1, "");
    (1100, 0, "{");
    (1101, 0, "/");
    (1102, 0, "e");
    (1103, 0, "a");
    (1104, 0, "c");
    (1105, 0, "h");
    (1106, 0, ">");
    (1106, 1, "");
    (1106, 0, "}");
    (1095, 0, "\n\t\t\t\t");
    (1100, 0, "\t");
    (1101, 0, "<");
    (1102, 0, "s");
    (1103, 0, "p");
    (1104, 0, "a");
    (1105, 0, "n");
    (1106, 0, ">");
    (1107, 0, "</span>");
    (1107, 0, "{");
    (1093, 1, "");
    (1024, 1, "");
    (1024, 0, "r");
    (1042, 1, "");
    (1042, 0, "r");
    (1093, 0, "p");
    (1108, 0, "p");
    (1109, 0, "+");
    (1110, 0, "1");
    (1111, 0, "}");
    (1119, 0, " ");
    (1119, 1, "");
    (1112, 0, " ");
    (2004, 0, "\n");
    (2005, 0, "l");
    (2006, 0, "a");
    (2007, 0, "b");
    (2008, 0, "e");
    (2009, 0, "l");
    (2010, 0, " ");
    (2011, 0, "{");
    (2012, 0, "\n\t");
    (2014, 0, "\n\t");
    (2013, 1, "");
    (2014, 1, "}");
    (2013, 0, "\t");
    (2014, 0, "d");
    (2015, 0, "i");
    (2016, 0, "s");
    (2017, 0, "p");
    (2018, 0, "l");
    (2019, 0, "a");
    (2020, 0, "y");
    (2021, 0, ":");
    (2022, 0, " ");
    (2023, 0, "b");
    (2024, 0, "l");
    (2025, 0, "o");
    (2026, 0, "c");
    (2027, 0, "k");
    (2028, 0, ";");
    (1719, 5, "");
    (1483, 5, "");
    (1917, 3, "\t\t");
    (1824, 4, "\t\t\t");
    (1742, 4, "\t\t\t");
    (1715, 3, "\t\t");
    (1712, 2, "\t");
    (1690, 3, "\t\t");
    (1597, 4, "\t\t\t");
    (1512, 4, "\t\t\t");
    (1484, 3, "\t\t");
    (1481, 2, "\t");
    (1919, 8, "");
    (1697, 8, "");
    (1910, 1, "");
    (1696, 1, "");
    (1698, 1, "");
    (1697, 1, "");
    (1480, 1, "");
    (1480, 1, "\n\t\t");
    (1480, 0, "\n\t\t");
    ( 1700,
      0,
      "\n\
       \t\t<label>Number of players\n\
       \t\t\t<input type='number' value={players} on:input={config('players')} \
       min=1 max=12 >\n\
       \t\t\t<!-- <input type='range' value={players} \
       on:submit={config('players')} min=1 max=12> -->\n\
       \t\t</label>" );
    (1481, 2, "");
    (1481, 1, "");
    (1697, 0, "\n\t\t");
    (1698, 2, "");
    (1482, 1, "");
    (1481, 1, "");
    (1480, 1, "");
    (1490, 17, "M");
    (1491, 0, "e");
    (1492, 0, "d");
    (1493, 0, "i");
    (1494, 0, "t");
    (1495, 0, "a");
    (1496, 0, "t");
    (1497, 0, "e");
    (1498, 0, " ");
    (1499, 0, "b");
    (1500, 0, "e");
    (1501, 0, "f");
    (1502, 0, "o");
    (1503, 0, "r");
    (1504, 0, "e");
    (1505, 0, " ");
    (1506, 0, "g");
    (1507, 0, "a");
    (1508, 0, "m");
    (1509, 0, "e");
    (1510, 0, " ");
    (1511, 0, "s");
    (1512, 0, "t");
    (1513, 0, "a");
    (1514, 0, "r");
    (1515, 0, "t");
    (1490, 0, "1");
    (1491, 0, " ");
    (1492, 0, "m");
    (1493, 0, "i");
    (1494, 0, "n");
    (1495, 0, "u");
    (1496, 0, "t");
    (1497, 0, "e");
    (1498, 0, " ");
    (1499, 1, "");
    (1499, 0, "m");
    (1506, 1, "");
    (1506, 0, "a");
    (1506, 1, "");
    (1506, 0, "i");
    (1507, 0, "o");
    (1508, 0, "n");
    (1527, 0, "s");
    (1544, 8, "c");
    (1545, 0, "h");
    (1546, 0, "e");
    (1547, 0, "c");
    (1548, 0, "k");
    (1549, 0, "b");
    (1550, 0, "o");
    (1551, 0, "x");
    (1552, 0, "'");
    (1544, 0, "'");
    (87, 0, "\n\texport let players");
    (80, 7, "m");
    (81, 0, "e");
    (82, 0, "d");
    (83, 0, "i");
    (84, 0, "t");
    (85, 0, "a");
    (86, 0, "t");
    (87, 0, "e");
    (1583, 7, "");
    (1583, 0, "m");
    (1584, 0, "e");
    (1585, 0, "d");
    (1586, 0, "i");
    (1587, 0, "t");
    (1588, 0, "a");
    (1589, 0, "t");
    (1590, 0, "e");
    (1611, 7, "m");
    (1612, 0, "e");
    (1613, 0, "d");
    (1614, 0, "i");
    (1615, 0, "t");
    (1616, 0, "a");
    (1617, 0, "t");
    (1618, 0, "e");
    (1623, 13, "");
    (641, 1, "");
    (641, 0, " ");
    (655, 1, "");
    (655, 0, "\n\t");
    (657, 0, "\t");
    (660, 0, "\n\t\t");
    (663, 0, ":");
    (664, 0, " ");
    (660, 0, "e");
    (661, 0, ".");
    (662, 0, "t");
    (663, 0, "a");
    (664, 0, "r");
    (665, 0, "g");
    (666, 0, "e");
    (667, 0, "t");
    (668, 0, ".");
    (669, 0, "t");
    (670, 0, "y");
    (671, 0, "p");
    (672, 0, "e");
    (673, 0, " ");
    (674, 0, "=");
    (675, 0, "=");
    (676, 0, "=");
    (677, 0, " ");
    (678, 0, "'");
    (679, 0, "c");
    (680, 0, "h");
    (681, 0, "e");
    (682, 0, "c");
    (683, 0, "k");
    (684, 0, "b");
    (685, 0, "o");
    (686, 0, "x");
    (687, 0, "'");
    (688, 0, " ");
    (689, 0, "?");
    (690, 0, " ");
    (691, 0, "e");
    (692, 0, ".");
    (693, 0, "t");
    (694, 0, "a");
    (695, 0, "r");
    (696, 0, "g");
    (697, 0, "e");
    (698, 0, "t");
    (699, 0, ".");
    (700, 0, "c");
    (701, 0, "h");
    (702, 0, "e");
    (703, 0, "c");
    (704, 0, "k");
    (705, 0, "e");
    (706, 0, "d");
    (1056, 0, "\n\t\t");
    (1059, 0, "<");
    (1060, 0, "h");
    (1061, 0, "2");
    (1062, 0, ">");
    (1063, 0, "G");
    (1064, 0, "a");
    (1065, 0, "m");
    (1066, 0, "e");
    (1067, 0, " ");
    (1068, 0, "s");
    (1069, 0, "t");
    (1070, 0, "r");
    (1071, 0, "u");
    (1072, 0, "c");
    (1073, 0, "t");
    (1074, 0, "u");
    (1075, 0, "r");
    (1076, 0, "e");
    (1077, 0, "<");
    (1078, 0, "/");
    (1079, 0, "h");
    (1080, 0, "2");
    (1081, 0, ">");
    (1082, 0, "\n\t\t");
    (1085, 0, "{");
    (1086, 0, "i");
    (1087, 0, "f");
    (1088, 0, " ");
    (1089, 0, "m");
    (1090, 0, "e");
    (1091, 0, "d");
    (1092, 0, "i");
    (1089, 4, "meditate");
    (1097, 0, "}");
    (1098, 0, "\n\t\t");
    (1101, 0, "\t");
    (1102, 0, "<");
    (1103, 0, "d");
    (1104, 0, "i");
    (1105, 0, "v");
    (1106, 0, ">");
    (1107, 0, "M");
    (1108, 0, "e");
    (1109, 0, "d");
    (1110, 0, "i");
    (1111, 0, "t");
    (1112, 0, "a");
    (1113, 0, "t");
    (1114, 0, "i");
    (1115, 0, "o");
    (1116, 0, "n");
    (1117, 0, "<");
    (1118, 0, "/");
    (1119, 0, "d");
    (1120, 0, "i");
    (1121, 0, "v");
    (1122, 0, ">");
    (1123, 0, "\n\t\t\t");
    (1127, 0, "<");
    (1127, 1, "");
    (1127, 0, "[");
    (1127, 1, "");
    (1127, 0, "{");
    (1128, 0, "/");
    (1129, 0, "i");
    (1130, 0, "f");
    (1131, 0, "}");
    (1124, 3, "\t\t");
    (1086, 0, "#");
    (1036, 0, "\n\t");
    (1038, 0, "\n\t");
    (1037, 1, "");
    (1039, 0, "<");
    (1040, 0, "d");
    (1041, 0, "i");
    (1042, 0, "v");
    (1043, 0, ">");
    (1043, 0, " ");
    (1044, 0, "i");
    (1045, 0, "d");
    (1046, 0, "=");
    (1047, 0, "p");
    (1048, 0, "r");
    (1049, 0, "o");
    (1050, 0, "g");
    (1051, 0, "r");
    (1052, 0, "e");
    (1053, 0, "s");
    (1054, 0, "s");
    (1055, 0, "'");
    (1047, 0, "'");
    (1058, 0, "<");
    (1059, 0, "/");
    (1060, 0, "d");
    (1061, 0, "i");
    (1062, 0, "c");
    (1063, 0, ">");
    (1063, 1, "");
    (1062, 1, "");
    (1062, 0, "v");
    (1063, 0, ">");
    (2395, 0, "\n");
    (2396, 0, "\n");
    (2397, 0, "#");
    (2398, 0, "p");
    (2399, 0, "r");
    (2400, 0, "o");
    (2401, 0, "g");
    (2402, 0, "r");
    (2403, 0, "e");
    (2404, 0, "s");
    (2405, 0, "s");
    (2406, 0, " ");
    (2407, 0, "{");
    (2408, 0, "\n\t");
    (2410, 0, "\n\t");
    (2409, 1, "");
    (2410, 1, "}");
    (2409, 0, "\t");
    (2410, 0, "w");
    (2411, 0, "i");
    (2412, 0, "d");
    (2413, 0, "t");
    (2414, 0, "h");
    (2415, 0, ":");
    (2416, 0, " ");
    (2417, 0, "1");
    (2418, 0, "0");
    (2419, 0, "0");
    (2420, 0, "%");
    (2421, 0, ";");
    (2422, 0, "\n\t");
    (2424, 0, "h");
    (2425, 0, "e");
    (2426, 0, "i");
    (2427, 0, "g");
    (2428, 0, "h");
    (2429, 0, "t");
    (2430, 0, ":");
    (2431, 0, " ");
    (2432, 0, "3");
    (2433, 0, "e");
    (2434, 0, "m");
    (2435, 0, ":");
    (2435, 1, "");
    (2435, 0, ";");
    (2436, 0, "\n\t");
    (2438, 0, "b");
    (2439, 0, "o");
    (2440, 0, "r");
    (2441, 0, "d");
    (2442, 0, "e");
    (2443, 0, "r");
    (2444, 0, ":");
    (2445, 0, " ");
    (2446, 0, "1");
    (2447, 0, "p");
    (2448, 0, "x");
    (2449, 0, " ");
    (2450, 0, "s");
    (2451, 0, "o");
    (2452, 0, "l");
    (2453, 0, "i");
    (2454, 0, "d");
    (2455, 0, " ");
    (2456, 0, "w");
    (2457, 0, "h");
    (2458, 0, "i");
    (2459, 0, "t");
    (2460, 0, "e");
    (2461, 0, ";");
    (2462, 0, "\n\t");
    (2464, 0, "m");
    (2465, 0, "a");
    (2466, 0, "r");
    (2467, 0, "g");
    (2468, 0, "i");
    (2469, 0, "n");
    (2470, 0, ":");
    (2471, 0, " ");
    (2472, 0, "1");
    (2473, 0, "0");
    (2474, 0, "p");
    (2475, 0, "x");
    (2476, 0, ";");
    (2464, 6, "p");
    (2465, 0, "a");
    (2466, 0, "d");
    (2467, 0, "d");
    (2468, 0, "i");
    (2469, 0, "n");
    (2470, 0, "g");
    (2417, 0, "c");
    (2418, 0, "a");
    (2419, 0, "l");
    (2420, 0, "c");
    (2421, 0, "(");
    (2426, 0, " ");
    (2427, 0, "-");
    (2428, 0, " ");
    (2429, 0, "2");
    (2430, 0, "0");
    (2431, 0, "p");
    (2432, 0, "x");
    (2433, 0, ")");
    (2477, 7, "m");
    (2478, 0, "a");
    (2479, 0, "r");
    (2480, 0, "g");
    (2481, 0, "i");
    (2482, 0, "n");
    (2490, 0, "\n\tborder: 1px solid white;");
    (2450, 26, "");
    (2464, 0, "\n\theight: 3em;");
    (2436, 14, "");
    (2429, 1, "");
    (2429, 0, "5");
    (2445, 1, "");
    (2445, 1, "");
    (2445, 0, "2");
    (2446, 0, "5");
    (2462, 1, "");
    (2461, 1, "");
    (2460, 1, "");
    (2460, 0, "4");
    (2461, 0, "e");
    (2462, 0, "m");
    (2460, 1, "");
    (2460, 0, "5");
    (2474, 1, "");
    (2474, 0, "2");
    (2406, 0, "c");
    (2407, 0, "o");
    (2408, 0, "n");
    (2409, 0, "t");
    (2410, 0, "a");
    (2411, 0, "i");
    (2412, 0, "n");
    (2413, 0, "e");
    (2414, 0, "r");
    (1048, 8, "progresscontainer");
    (1067, 0, "\n\t\t\n\t");
    (1070, 0, "<");
    (1071, 0, "d");
    (1072, 0, "i");
    (1073, 0, "v");
    (1074, 0, " ");
    (1075, 0, "i");
    (1076, 0, "d");
    (1077, 0, "=");
    (1078, 0, "'");
    (1079, 0, "p");
    (1080, 0, "r");
    (1081, 0, "o");
    (1082, 0, "g");
    (1083, 0, "r");
    (1084, 0, "e");
    (1085, 0, "s");
    (1086, 0, "s");
    (1087, 0, "'");
    (1088, 0, "<");
    (1089, 0, "/");
    (1090, 0, "d");
    (1091, 0, "i");
    (1092, 0, "v");
    (1093, 0, ">");
    (1088, 0, ">");
    (1088, 0, " ");
    (1089, 0, "s");
    (1090, 0, "t");
    (1091, 0, "y");
    (1092, 0, "l");
    (1093, 0, "e");
    (1094, 0, "=");
    (1095, 0, "\"");
    (1095, 1, "");
    (1095, 0, "{");
    (1096, 0, "}");
    (1096, 0, "{");
    (1097, 0, "}");
    (1097, 0, "w");
    (1098, 0, "i");
    (1099, 0, "d");
    (1100, 0, "t");
    (1101, 0, "h");
    (1102, 0, ":");
    (1103, 0, " ");
    (1104, 0, "5");
    (1105, 0, "0");
    (1106, 0, "%");
    (1107, 0, "'");
    (1104, 0, "'");
    (2563, 0, "\n");
    (2564, 0, "\n");
    (2565, 0, "#");
    (2566, 0, "p");
    (2567, 0, "r");
    (2568, 0, "o");
    (2569, 0, "g");
    (2570, 0, "r");
    (2571, 0, "e");
    (2572, 0, "s");
    (2573, 0, "s");
    (2574, 0, " ");
    (2575, 0, "{");
    (2576, 0, "\n\t");
    (2578, 0, "\n\t");
    (2577, 1, "");
    (2578, 1, "}");
    (2506, 0, " */");
    (2481, 0, "/* ");
    (2583, 0, "\t");
    (2584, 0, "w");
    (2585, 0, "i");
    (2586, 0, "d");
    (2587, 0, "t");
    (2588, 0, "h");
    (2589, 0, ":");
    (2590, 0, " ");
    (2584, 7, "b");
    (2585, 0, "o");
    (2586, 0, "r");
    (2587, 0, "d");
    (2588, 0, "e");
    (2589, 0, "r");
    (2584, 6, "b");
    (2585, 0, "a");
    (2586, 0, "c");
    (2587, 0, "k");
    (2588, 0, "g");
    (2589, 0, "r");
    (2590, 0, "o");
    (2591, 0, "u");
    (2592, 0, "n");
    (2593, 0, "d");
    (2594, 0, "-");
    (2595, 0, "c");
    (2596, 0, "o");
    (2597, 0, "l");
    (2598, 0, "o");
    (2599, 0, "r");
    (2600, 0, ":");
    (2601, 0, " ");
    (2602, 0, "w");
    (2603, 0, "h");
    (2604, 0, "i");
    (2605, 0, "t");
    (2606, 0, "e");
    (2607, 0, ";");
    (2608, 0, "\n\t");
    (2610, 0, "w");
    (2611, 0, "i");
    (2612, 0, "d");
    (2613, 0, "t");
    (2614, 0, "h");
    (2615, 0, ":");
    (2616, 0, " ");
    (2617, 0, "5");
    (2618, 0, "0");
    (2619, 0, "%");
    (2620, 0, ";");
    (2608, 0, "\n\tbackground-color: white;");
    (2584, 11, "");
    (2636, 0, "\n\t");
    (2638, 0, "h");
    (2639, 0, "e");
    (2640, 0, "i");
    (2641, 0, "g");
    (2642, 0, "h");
    (2643, 0, "t");
    (2644, 0, ":");
    (2645, 0, " ");
    (2646, 0, "1");
    (2647, 0, "0");
    (2648, 0, "0");
    (2649, 0, "%");
    (2650, 0, ";");
    (2583, 14, "");
    (2582, 1, "");
    (2621, 0, " */");
    (2610, 0, "/* ");
    (1096, 1, "");
    (1108, 1, "");
    (1095, 1, "");
    (1094, 1, "");
    (1094, 0, ":");
    (1107, 1, "");
    (1101, 1, "");
    (1100, 1, "");
    (1100, 0, "=");
    (1094, 0, "=");
    (1095, 0, "'");
    (1096, 1, "");
    (1102, 1, "");
    (1101, 1, "");
    (1101, 0, ":");
    (1102, 0, " ");
    (919, 0, "\n");
    (920, 0, "c");
    (921, 0, "o");
    (922, 0, "n");
    (923, 0, "s");
    (924, 0, "t");
    (925, 0, " ");
    (926, 0, "w");
    (927, 0, "i");
    (928, 0, "d");
    (929, 0, "t");
    (930, 0, "h");
    (931, 0, " ");
    (932, 0, "=");
    (933, 0, " ");
    (934, 0, "5");
    (935, 0, "0");
    (1120, 2, "");
    (1120, 0, "{");
    (1121, 0, "w");
    (1122, 0, "i");
    (1123, 0, "d");
    (1124, 0, "t");
    (1125, 0, "h");
    (1126, 0, "}");
    (920, 5, "l");
    (921, 0, "e");
    (922, 0, "t");
    (934, 0, "\n");
    (935, 0, "s");
    (936, 0, "e");
    (937, 0, "t");
    (938, 0, "I");
    (939, 0, "n");
    (935, 5, "setInterval");
    (946, 0, "(");
    (947, 0, "(");
    (948, 0, ")");
    (949, 0, " ");
    (950, 0, "=");
    (951, 0, ">");
    (952, 0, " ");
    (953, 0, "w");
    (954, 0, "i");
    (955, 0, "d");
    (956, 0, "t");
    (957, 0, "h");
    (958, 0, "+");
    (959, 0, "+");
    (960, 0, ",");
    (961, 0, " ");
    (962, 0, "1");
    (963, 0, "0");
    (964, 0, "0");
    (965, 0, "0");
    (966, 0, ")");
    (919, 48, "");
    (919, 0, "\nlet width = 50\nsetInterval(() => width++, 1000)");
    (935, 0, "// ");
    (109, 0, "\texport let rounds\n");
    (140, 6, "r");
    (141, 0, "o");
    (142, 0, "u");
    (143, 0, "n");
    (140, 4, "");
    (140, 0, "b");
    (141, 0, "e");
    (142, 0, "a");
    (143, 0, "d");
    (144, 0, "_");
    (128, 17, "");
    (127, 1, "");
    (156, 1, "");
    (155, 1, "");
    (154, 1, "");
    (153, 1, "");
    (152, 1, "");
    (152, 0, "b");
    (153, 0, "e");
    (154, 0, "a");
    (155, 0, "d");
    ( 2215,
      0,
      "\t\t<label>Number of rounds\n\
       \t\t\t<input type='number' value={rounds} on:input={config('rounds')} \
       min=1 max=12>\n\
       \t\t\t<!-- <input type='range' value={players} \
       on:submit={config('players')} min=1 max=12> -->\n\
       \t\t</label>\n" );
    (2424, 0, "\n\t\t");
    (2437, 16, "S");
    (2425, 2, "");
    (2436, 0, "e");
    (2437, 0, "c");
    (2438, 0, "o");
    (2439, 0, "n");
    (2440, 0, "s");
    (2440, 1, "");
    (2440, 0, "d");
    (2441, 0, "s");
    (2442, 0, " ");
    (2443, 0, "p");
    (2444, 0, "e");
    (2445, 0, "r");
    (2446, 0, " ");
    (2447, 0, "b");
    (2448, 0, "e");
    (2449, 0, "a");
    (2450, 0, "d");
    (2319, 1, "");
    (2318, 1, "");
    (2318, 0, "2");
    (2319, 0, "0");
    (2530, 1, "");
    (2529, 1, "");
    (2518, 11, "");
    (2483, 6, "s");
    (2484, 0, "e");
    (2485, 0, "c");
    (2486, 0, "o");
    (2487, 0, "n");
    (2483, 5, "seconds_per_bead");
    (2519, 6, "s");
    (2520, 0, "e");
    (2521, 0, "c");
    (2522, 0, "o");
    (2523, 0, "n");
    (2524, 0, "d");
    (2525, 0, "s");
    (2526, 0, "_");
    (2527, 0, "p");
    (2528, 0, "e");
    (2529, 0, "r");
    (2530, 0, "_");
    (2531, 0, "b");
    (2532, 0, "e");
    (2533, 0, "a");
    (2534, 0, "d");
    (1259, 0, " ");
    (1260, 0, "(");
    (1261, 0, "1");
    (1262, 0, " ");
    (1263, 0, "m");
    (1264, 0, "i");
    (1265, 0, "n");
    (1266, 0, ")");
    (1052, 0, "\t<div>{connection} / {state}</div>\n");
    (1094, 20, "");
    (1094, 0, "_");
    (1094, 1, "_");
    (1095, 0, "a");
    (1096, 0, "c");
    (1097, 0, "t");
    (1098, 0, "i");
    (1094, 5, "_active_sessions");
    (1111, 0, " ");
    (1112, 0, "s");
    (1113, 0, "e");
    (1114, 0, "s");
    (1112, 3, "p");
    (1113, 0, "l");
    (1114, 0, "a");
    (1115, 0, "y");
    (1116, 0, "e");
    (1117, 0, "r");
    (1118, 0, "s");
    (1119, 0, " ");
    (1120, 0, "i");
    (1121, 0, "n");
    (1122, 0, " ");
    (1123, 0, "r");
    (1124, 0, "o");
    (1125, 0, "o");
    (1126, 0, "m");
    (1118, 0, "(");
    (1120, 0, ")");
    (88, 0, "\n\texport let meditate");
    (80, 8, "a");
    (81, 0, "r");
    (82, 0, "c");
    (83, 0, "h");
    (84, 0, "e");
    (85, 0, "t");
    (86, 0, "o");
    (87, 0, "p");
    (88, 0, "i");
    (89, 0, "c");
    (1074, 0, "\n\t<h4>Room: <em>{room}</em></h4>");
    (1080, 4, "T");
    (1081, 0, "o");
    (1082, 0, "p");
    (1083, 0, "i");
    (1084, 0, "c");
    (1092, 4, "a");
    (1093, 0, "r");
    (1094, 0, "c");
    (1095, 0, "h");
    (1096, 0, "i");
    (1092, 5, "archetopic");
    ( 2117,
      0,
      "\n\
       \t\t<label>1 minute meditation before game starts\n\
       \t\t\t<input type='checkbox' value={meditate} \
       on:input={config('meditate')} >\n\
       \t\t\t<!-- <input type='range' value={players} \
       on:submit={config('players')} min=1 max=12> -->\n\
       \t\t</label>" );
    (2117, 0, "\n\t\t");
    (2118, 2, "");
    (1956, 8, "t");
    (1957, 0, "e");
    (1958, 0, "x");
    (1959, 0, "t");
    (1969, 8, "a");
    (1970, 0, "r");
    (1971, 0, "c");
    (1972, 0, "h");
    (8, 0, "\nimport { arch } from \"os\";\n\n");
    (1998, 4, "arch");
    (2002, 0, "e");
    (2003, 0, "t");
    (1998, 6, "archetopic");
    (2028, 8, "a");
    (2029, 0, "r");
    (2030, 0, "c");
    (2031, 0, "h");
    (2032, 0, "e");
    (2033, 0, "t");
    (2034, 0, "p");
    (2034, 1, "");
    (2034, 0, "o");
    (2035, 0, "p");
    (2036, 0, "i");
    (2037, 0, "c");
    (2044, 92, "");
    (1930, 38, "A");
    (1931, 0, "r");
    (1932, 0, "c");
    (1933, 0, "h");
    (1934, 0, "e");
    (1935, 0, "t");
    (1936, 0, "o");
    (1937, 0, "p");
    (1938, 0, "i");
    (1939, 0, "c");
    (9, 29, "");
    (230, 0, "\n\t");
    (232, 0, "\n\t");
    (231, 1, "");
    (232, 1, "");
    ( 231,
      0,
      "const ARCHETOPICS = [\n\
      \  'Truth', 'Human', 'Energy', 'Beauty', 'Beginning', 'End', 'Birth', \
       'Death',\n\
      \  'Ego', 'Attention', 'Art', 'Empathy', 'Eutopia', 'Future', 'Game', \
       'Gift',\n\
      \  'History', 'Cosmos', 'Time', 'Life', 'Addiction', 'Paradox', \
       'Shadow', 'Society'\n\
       ]\n" );
    (231, 0, "\t");
    (231, 1, "");
    (2250, 0, "\n\t\t\t");
    (2254, 0, "<");
    (2255, 0, "d");
    (2256, 0, "a");
    (2257, 0, "t");
    (2258, 0, "a");
    (2259, 0, "l");
    (2260, 0, "i");
    (2261, 0, "s");
    (2262, 0, "t");
    (2263, 0, " ");
    (2264, 0, "i");
    (2265, 0, "d");
    (2266, 0, "=");
    (2267, 0, "a");
    (2268, 0, "r");
    (2269, 0, "c");
    (2270, 0, "h");
    (2271, 0, "e");
    (2272, 0, "t");
    (2273, 0, "o");
    (2274, 0, "p");
    (2275, 0, "c");
    (2276, 0, "i");
    (2277, 0, "s");
    (2277, 1, "");
    (2276, 1, "");
    (2275, 1, "");
    (2275, 0, "i");
    (2276, 0, "c");
    (2277, 0, "s");
    (2278, 0, "'");
    (2267, 0, "'");
    (2280, 0, ">");
    (2281, 0, "</datalist>");
    (2281, 0, "\n\t\t\t\t\n\t\t\t");
    (2286, 0, "<");
    (2287, 0, "o");
    (2288, 0, "p");
    (2288, 1, "");
    (2287, 1, "");
    (2286, 1, "");
    (2286, 0, "{");
    (2287, 0, "#");
    (2288, 0, "e");
    (2289, 0, "a");
    (2290, 0, "c");
    (2291, 0, "h");
    (2292, 0, " ");
    (2293, 0, "A");
    (2294, 0, "R");
    (2295, 0, "C");
    (2296, 0, "H");
    (2293, 4, "ARCHETOPICS");
    (2304, 0, " ");
    (2305, 0, "a");
    (2306, 0, "s");
    (2307, 0, " ");
    (2308, 0, "t");
    (2309, 0, "o");
    (2310, 0, "p");
    (2311, 0, "i");
    (2312, 0, "c");
    (2313, 0, "}");
    (2314, 0, "\n\t\t\t\t");
    (2319, 0, "\t");
    (2320, 0, "<");
    (2321, 0, "o");
    (2322, 0, "p");
    (2323, 0, "t");
    (2324, 0, "i");
    (2325, 0, "o");
    (2326, 0, "n");
    (2327, 0, " ");
    (2328, 0, "v");
    (2329, 0, "a");
    (2330, 0, "l");
    (2331, 0, "u");
    (2332, 0, "e");
    (2333, 0, "=");
    (2334, 0, "{");
    (2335, 0, "t");
    (2336, 0, "o");
    (2337, 0, "p");
    (2338, 0, "i");
    (2339, 0, "c");
    (2340, 0, "}");
    (2341, 0, "/");
    (2342, 0, "?");
    (2342, 1, "");
    (2341, 1, "");
    (2341, 0, ">");
    (2342, 0, "\n\t\t\t\t\t\t");
    (2349, 0, "{");
    (2350, 0, "/");
    (2351, 0, "e");
    (2352, 0, "a");
    (2353, 0, "c");
    (2354, 0, "h");
    (2355, 0, ">");
    (2355, 1, "");
    (2355, 0, "}");
    (2343, 6, "\t\t\t\t\t");
    (2343, 5, "\t\t\t\t");
    (2248, 0, " ");
    (2249, 0, "l");
    (2250, 0, "i");
    (2251, 0, "s");
    (2252, 0, "t");
    (2253, 0, "=");
    (2254, 0, "a");
    (2255, 0, "r");
    (2256, 0, "c");
    (2257, 0, "h");
    (2254, 4, "archetopic");
    (2264, 0, "s");
    (2265, 0, "'");
    (2254, 0, "'");
    (1827, 0, "\n\t\t");
    (1830, 0, "<");
    (1831, 0, "d");
    (1832, 0, "i");
    (1833, 0, "v");
    (1834, 0, ">");
    (1835, 0, "</div>");
    (1835, 0, "\n\t\t\t\n\t\t");
    (1839, 0, "T");
    (1840, 0, "o");
    (1841, 0, "t");
    (1842, 0, "a");
    (1843, 0, "l");
    (1844, 0, " ");
    (1845, 0, "g");
    (1846, 0, "a");
    (1847, 0, "m");
    (1848, 0, "e");
    (1849, 0, " ");
    (1850, 0, "l");
    (1851, 0, "e");
    (1852, 0, "n");
    (1853, 0, "g");
    (1854, 0, "t");
    (1855, 0, "h");
    (1856, 0, " ");
    (1857, 0, "(");
    (1858, 0, "i");
    (1859, 0, "n");
    (1860, 0, "c");
    (1861, 0, "l");
    (1862, 0, "u");
    (1863, 0, "d");
    (1864, 0, "i");
    (1865, 0, "n");
    (1857, 9, "");
    (1856, 1, "");
    (1856, 0, ":");
    (1857, 0, " ");
    (1858, 0, "$");
    (1859, 0, "{");
    (1859, 1, "");
    (1858, 1, "");
    (1858, 0, "{");
    (1859, 0, "r");
    (1860, 0, "o");
    (1861, 0, "u");
    (1862, 0, "n");
    (1863, 0, "d");
    (1864, 0, "s");
    (1865, 0, " ");
    (1866, 0, "*");
    (1867, 0, " ");
    (1868, 0, "p");
    (1869, 0, "l");
    (1870, 0, "a");
    (1871, 0, "y");
    (1872, 0, "e");
    (1873, 0, "r");
    (1874, 0, "s");
    (1875, 0, " ");
    (1876, 0, "*");
    (1877, 0, " ");
    (1877, 1, "");
    (1876, 1, "");
    (1875, 1, "");
    (1875, 0, " ");
    (1876, 0, "+");
    (1877, 0, " ");
    (1859, 0, "(");
    (1859, 1, "");
    (1878, 0, "(");
    (1879, 0, "m");
    (1880, 0, "e");
    (1881, 0, "d");
    (1882, 0, "i");
    (1883, 0, "t");
    (1879, 5, "meditate");
    (1887, 0, " ");
    (1888, 0, "?");
    (1889, 0, " ");
    (1890, 0, "1");
    (1891, 0, " ");
    (1892, 0, ":");
    (1893, 0, " ");
    (1894, 0, "0");
    (1895, 0, ")");
    (1896, 0, ")");
    (1859, 0, "(");
    (1898, 0, " ");
    (1899, 0, "*");
    (1900, 0, " ");
    (1901, 0, "s");
    (1902, 0, "e");
    (1903, 0, "c");
    (1904, 0, "o");
    (1905, 0, "n");
    (1906, 0, "d");
    (1901, 6, "seconds_per_bead");
    (1917, 0, " ");
    (1918, 0, "/");
    (1919, 0, " ");
    (1920, 0, "6");
    (1921, 0, "0");
    (1922, 0, "}");
    (1923, 0, " ");
    (1924, 0, "m");
    (1925, 0, "i");
    (1926, 0, "n");
    (1927, 0, "u");
    (1928, 0, "t");
    (1929, 0, "e");
    (1930, 0, "s");
    (1037, 0, "\n");
    (1038, 0, "\n");
    (1039, 0, "c");
    (1040, 0, "o");
    (1041, 0, "n");
    (1042, 0, "s");
    (1043, 0, "t");
    (1044, 0, " ");
    (1045, 0, "r");
    (1046, 0, "o");
    (1047, 0, "u");
    (1048, 0, "n");
    (1049, 0, "d");
    (1050, 0, "_");
    (1051, 0, "t");
    (1052, 0, "o");
    (1053, 0, " ");
    (1054, 0, " ");
    (1054, 1, "");
    (1054, 0, "=");
    (1055, 0, " ");
    (1056, 0, "(");
    (1052, 1, "");
    (1051, 1, "");
    (1050, 1, "");
    (1050, 0, "i");
    (1051, 0, "s");
    (1052, 0, "h");
    (1056, 1, "");
    (1056, 0, "x");
    (1057, 0, " ");
    (1058, 0, "=");
    (1059, 0, ">");
    (1060, 0, " ");
    (1061, 0, "x");
    (1062, 0, " ");
    (1063, 0, "*");
    (1064, 0, " ");
    (1065, 0, "1");
    (1066, 0, "0");
    (1067, 0, "0");
    (1061, 0, "M");
    (1062, 0, "a");
    (1063, 0, "t");
    (1064, 0, "h");
    (1065, 0, ".");
    (1066, 0, "r");
    (1067, 0, "o");
    (1068, 0, "u");
    (1069, 0, "n");
    (1070, 0, "d");
    (1066, 5, "round");
    (1071, 0, "(");
    (1079, 0, "(");
    (1079, 1, "");
    (1079, 0, ")");
    (1080, 0, " ");
    (1081, 0, "/");
    (1082, 0, " ");
    (1083, 0, "2");
    (1084, 0, "0");
    (1084, 1, "");
    (1083, 1, "");
    (1083, 0, "1");
    (1084, 0, "0");
    (1085, 0, "0");
    (1086, 0, "\n");
    (1909, 0, "r");
    (1910, 0, "o");
    (1911, 0, "u");
    (1912, 0, "n");
    (1913, 0, "d");
    (1914, 0, "i");
    (1915, 0, "s");
    (1916, 0, "h");
    (1909, 8, "roundish");
    (1917, 0, "(");
    (1981, 0, ")");
    (1878, 123, "");
    (3328, 0, "\n\t");
    (3328, 2, "");
    (3320, 0, "\n\t\t");
    (3323, 0, "\n\t\t");
    (3321, 2, "");
    ( 3324,
      0,
      "\t\t<div>\n\
       \t\t\tTotal game length: {roundish((rounds * players + (meditate ? 1 : \
       0)) * seconds_per_bead / 60)} minutes\n\
       \t\t</div>\n" );
    (3322, 4, "\t\t");
    (3444, 1, "");
    (3333, 0, "(");
    (3436, 0, ")");
    (2541, 0, " ");
    (2541, 1, "");
    (2525, 5, "c");
    (2526, 0, "h");
    (2527, 0, "e");
    (2528, 0, "c");
    (2529, 0, "k");
    (2530, 0, "e");
    (2531, 0, "d");
    (2255, 5, "");
    (1406, 5, "");
    (80, 5, "");
    (2205, 1, "");
    (2205, 1, "");
    (2205, 1, "");
    (2205, 1, "");
    (2205, 1, "");
    (2205, 1, "");
    (2205, 0, "T");
    (2265, 1, "");
    (2265, 1, "");
    (2265, 1, "");
    (2265, 1, "");
    (2265, 1, "");
    (225, 263, "");
    ( 225,
      0,
      "\n\
       const ARCHETOPICS = [\n\
      \  'Truth', 'Human', 'Energy', 'Beauty', 'Beginning', 'End', 'Birth', \
       'Death',\n\
      \  'Ego', 'Attention', 'Art', 'Empathy', 'Eutopia', 'Future', 'Game', \
       'Gift',\n\
      \  'History', 'Cosmos', 'Time', 'Life', 'Addiction', 'Paradox', \
       'Shadow', 'Society'\n\
       ]\n" );
    (488, 0, "\n");
    (489, 0, "c");
    (490, 0, "o");
    (491, 0, "n");
    (492, 0, "s");
    (493, 0, "t");
    (494, 0, " ");
    (495, 0, "g");
    (496, 0, "e");
    (497, 0, "t");
    (498, 0, "_");
    (489, 10, "");
    (489, 0, "$");
    (490, 0, ":");
    (491, 0, " ");
    (492, 0, "{");
    (493, 0, "\n\t");
    (495, 0, "\n\t");
    (494, 1, "");
    (495, 1, "}");
    (494, 0, "\t");
    (494, 1, "");
    (488, 0, "\n");
    (489, 0, "l");
    (490, 0, "e");
    (491, 0, "t");
    (492, 0, " ");
    (493, 0, "g");
    (494, 0, "a");
    (495, 0, "m");
    (496, 0, "e");
    (497, 0, "_");
    (498, 0, "s");
    (499, 0, "a");
    (500, 0, "t");
    (501, 0, "a");
    (501, 1, "");
    (500, 1, "");
    (499, 1, "");
    (498, 1, "");
    (498, 0, "s");
    (499, 0, "t");
    (500, 0, "a");
    (501, 0, "g");
    (502, 0, "e");
    (503, 0, "s");
    (510, 0, "\t");
    (511, 0, "g");
    (512, 0, "a");
    (513, 0, "m");
    (514, 0, "e");
    (515, 0, "_");
    (511, 5, "game_stages");
    (522, 0, " ");
    (523, 0, "=");
    (524, 0, " ");
    (525, 0, "[");
    (526, 0, "]");
    (527, 0, "\n\t");
    (529, 0, "i");
    (530, 0, "f");
    (531, 0, " ");
    (532, 0, "(");
    (533, 0, "m");
    (534, 0, "e");
    (535, 0, "d");
    (536, 0, "i");
    (533, 4, "meditate");
    (541, 0, ")");
    (542, 0, " ");
    (543, 0, "g");
    (544, 0, "a");
    (545, 0, "m");
    (546, 0, "e");
    (543, 4, "game_stages");
    (554, 0, ".");
    (555, 0, "p");
    (556, 0, "u");
    (557, 0, "s");
    (558, 0, "h");
    (555, 4, "push");
    (559, 0, "(");
    (487, 0, "\n");
    (488, 0, "\n");
    (489, 0, "c");
    (490, 0, "o");
    (491, 0, "n");
    (492, 0, "s");
    (493, 0, "t");
    (494, 0, " ");
    (495, 0, "M");
    (496, 0, "E");
    (497, 0, "D");
    (498, 0, "I");
    (499, 0, "T");
    (500, 0, "A");
    (501, 0, "T");
    (502, 0, "I");
    (503, 0, "O");
    (504, 0, "N");
    (505, 0, "_");
    (506, 0, "S");
    (507, 0, "E");
    (508, 0, "C");
    (509, 0, "O");
    (510, 0, "N");
    (511, 0, "D");
    (512, 0, "S");
    (513, 0, " ");
    (514, 0, "=");
    (515, 0, " ");
    (516, 0, "6");
    (517, 0, "0");
    (488, 0, "\n");
    (489, 0, "/");
    (490, 0, "/");
    (491, 0, " ");
    (492, 0, "C");
    (493, 0, "o");
    (494, 0, "u");
    (495, 0, "l");
    (496, 0, "d");
    (497, 0, " ");
    (498, 0, "m");
    (499, 0, "a");
    (500, 0, "k");
    (501, 0, "e");
    (502, 0, " ");
    (503, 0, "c");
    (504, 0, "o");
    (505, 0, "n");
    (506, 0, "f");
    (507, 0, "i");
    (508, 0, "g");
    (509, 0, "u");
    (510, 0, "r");
    (511, 0, "a");
    (512, 0, "b");
    (513, 0, "l");
    (514, 0, "e");
    (515, 0, "?");
    (515, 1, "");
    (515, 0, ".");
    (516, 0, " ");
    (517, 0, "E");
    (518, 0, "h");
    (519, 0, ".");
    (3494, 22, "");
    (3513, 0, " ");
    (3514, 0, "+");
    (3515, 0, " ");
    (3516, 0, "M");
    (3517, 0, "E");
    (3518, 0, "D");
    (3519, 0, "I");
    (3515, 5, "");
    (3513, 2, "");
    (3494, 0, " + (meditate ? 1 : 0))");
    (3494, 22, "");
    (3513, 0, " ");
    (3514, 0, "+");
    (3515, 0, " ");
    (3516, 0, " + (meditate ? 1 : 0))");
    (3518, 1, "");
    (3517, 1, "");
    (3516, 1, "");
    (3528, 1, "");
    (3528, 0, "M");
    (3529, 0, "E");
    (3530, 0, "D");
    (3531, 0, "I");
    (3528, 4, "MEDITATION_SECONDS");
    (3477, 0, "\n\t\t\t\t");
    (3562, 0, "\n\t\t\t\t");
    (3563, 4, "\t\t\t");
    (623, 0, "{");
    (624, 0, "\n\t\t");
    (627, 0, "l");
    (628, 0, "e");
    (629, 0, "b");
    (630, 0, "l");
    (630, 1, "");
    (629, 1, "");
    (628, 1, "");
    (628, 0, "a");
    (629, 0, "b");
    (630, 0, "e");
    (631, 0, "l");
    (632, 0, ":");
    (633, 0, " ");
    (634, 0, "'");
    (635, 0, "M");
    (636, 0, "e");
    (637, 0, "d");
    (638, 0, "i");
    (639, 0, "t");
    (640, 0, "a");
    (641, 0, "t");
    (642, 0, "e");
    (643, 0, "'");
    (644, 0, ",");
    (645, 0, "\n\t\t");
    (648, 0, "d");
    (649, 0, "u");
    (650, 0, "r");
    (651, 0, "a");
    (652, 0, "t");
    (653, 0, "i");
    (654, 0, "o");
    (655, 0, "n");
    (656, 0, ":");
    (657, 0, " ");
    (658, 0, "M");
    (659, 0, "E");
    (660, 0, "D");
    (661, 0, "I");
    (658, 4, "MEDITATION_SECONDS");
    (676, 0, ",");
    (677, 0, "\n\t\t");
    (678, 2, "\t}");
    (680, 0, ")");
    (681, 0, "\n\t");
    (683, 0, "f");
    (684, 0, "o");
    (685, 0, "r");
    (686, 0, " ");
    (687, 0, "(");
    (688, 0, "l");
    (689, 0, "e");
    (690, 0, "t");
    (691, 0, " ");
    (692, 0, "i");
    (693, 0, " ");
    (694, 0, "=");
    (695, 0, " ");
    (696, 0, "0");
    (697, 0, ";");
    (698, 0, " ");
    (699, 0, "i");
    (700, 0, " ");
    (701, 0, "<");
    (702, 0, " ");
    (703, 0, "r");
    (704, 0, "o");
    (705, 0, "u");
    (703, 3, "rounds");
    (709, 0, ";");
    (710, 0, " ");
    (711, 0, "i");
    (712, 0, "+");
    (713, 0, "+");
    (714, 0, ")");
    (715, 0, " ");
    (716, 0, "{");
    (717, 0, "\n\t\t");
    (718, 2, "\t}");
    (720, 0, "}");
    (720, 1, "");
    (720, 0, "\n\t");
    (722, 0, "f");
    (723, 0, "o");
    (724, 0, "r");
    (725, 0, " ");
    (726, 0, "(");
    (727, 0, "l");
    (728, 0, "e");
    (729, 0, "t");
    (730, 0, " ");
    (731, 0, "i");
    (732, 0, " ");
    (733, 0, "=");
    (734, 0, " ");
    (735, 0, "0");
    (722, 14, "");
    (721, 1, "");
    (711, 1, "r");
    (699, 1, "r");
    (692, 1, "r");
    (682, 0, "\tfor (let r = 0; r < rounds; r++) {\n");
    (719, 0, "\t");
    (729, 1, "");
    (729, 0, "r");
    (748, 1, "p");
    (736, 1, "p");
    (729, 1, "p");
    (740, 6, "p");
    (741, 0, "l");
    (742, 0, "a");
    (743, 0, "y");
    (744, 0, "e");
    (745, 0, "r");
    (746, 0, "s");
    (755, 0, "\n\t\t\t");
    (756, 3, "\t\t}");
    (755, 0, "\n\t\t\t");
    (759, 0, "g");
    (760, 0, "a");
    (761, 0, "m");
    (762, 0, "e");
    (763, 0, "_");
    (759, 5, "game_stages");
    (770, 0, ".");
    (771, 0, "p");
    (772, 0, "i");
    (773, 0, "s");
    (773, 1, "");
    (772, 1, "");
    (772, 0, "u");
    (773, 0, "s");
    (774, 0, "h");
    (771, 4, "push");
    (775, 0, "(");
    (776, 0, "{");
    (777, 0, "\n\t\t\t\t");
    (782, 0, "\n\t\t\t\t");
    (778, 4, "");
    (779, 4, "\t\t\t}");
    (783, 0, ")");
    (778, 0, "\t\t\t\t");
    (782, 0, "d");
    (783, 0, "u");
    (784, 0, "r");
    (785, 0, "a");
    (786, 0, "t");
    (787, 0, "i");
    (788, 0, "o");
    (789, 0, "n");
    (790, 0, ":");
    (791, 0, " ");
    (792, 0, "s");
    (793, 0, "e");
    (794, 0, "c");
    (795, 0, "o");
    (796, 0, "n");
    (797, 0, "d");
    (792, 6, "seconds_per_bead");
    (808, 0, ",");
    (777, 0, "\n\t\t\t\t");
    (782, 0, "l");
    (783, 0, "a");
    (784, 0, "b");
    (785, 0, "e");
    (786, 0, "l");
    (787, 0, ":");
    (788, 0, " ");
    (789, 0, "'");
    (789, 1, "");
    (789, 0, "`");
    (790, 0, "R");
    (791, 0, "o");
    (792, 0, "u");
    (793, 0, "n");
    (794, 0, "d");
    (795, 0, " ");
    (796, 0, "#");
    (797, 0, "{");
    (798, 0, "r");
    (799, 0, "}");
    (800, 0, " ");
    (801, 0, "p");
    (802, 0, "l");
    (803, 0, "a");
    (804, 0, "y");
    (805, 0, "e");
    (806, 0, "r");
    (807, 0, " ");
    (808, 0, "#");
    (809, 0, "{");
    (796, 1, "");
    (796, 0, "$");
    (808, 1, "");
    (808, 0, "$");
    (810, 0, "p");
    (811, 0, "}");
    (812, 0, "`");
    (813, 0, ",");
    (859, 1, "");
    ( 3680,
      0,
      "\t\t\t(Total game length: {roundish(\n\
       \t\t\t\t(rounds * players * seconds_per_bead + (meditate ? \
       MEDITATION_SECONDS : 0)) / 60\n\
       \t\t\t)} minutes)\n" );
    (3680, 134, "");
    ( 3672,
      0,
      "\t\t<div>\n\
       \t\t\t(Total game length: {roundish(\n\
       \t\t\t\t(rounds * players * seconds_per_bead + (meditate ? \
       MEDITATION_SECONDS : 0)) / 60\n\
       \t\t\t)} minutes)\n\
       \t\t</div>\n" );
    (3869, 75, "");
    (3869, 0, "g");
    (3870, 0, "a");
    (3871, 0, "m");
    (3872, 0, "e");
    (3869, 4, "game_stages");
    (3880, 0, ".");
    (3881, 0, "r");
    (3882, 0, "e");
    (3883, 0, "d");
    (3884, 0, "u");
    (3885, 0, "c");
    (3886, 0, "e");
    (3887, 0, "(");
    (3888, 0, "s");
    (3889, 0, " ");
    (3890, 0, "=");
    (3891, 0, ">");
    (3892, 0, " ");
    (3893, 0, "s");
    (3894, 0, ".");
    (3895, 0, "d");
    (3896, 0, "u");
    (3897, 0, "r");
    (3898, 0, "a");
    (3899, 0, "t");
    (3900, 0, "i");
    (3901, 0, "o");
    (3902, 0, "n");
    (3888, 0, "x");
    (3889, 0, ",");
    (3890, 0, " ");
    (3896, 0, "x");
    (3897, 0, " ");
    (3898, 0, "+");
    (3899, 0, " ");
    (3910, 0, ",");
    (3911, 0, " ");
    (3912, 0, "0");
    (3913, 0, ")");
    (3892, 0, ")");
    (3888, 0, "(");
    (861, 0, "\n");
    (862, 0, "\n");
    (863, 0, "c");
    (864, 0, "o");
    (865, 0, "n");
    (866, 0, "s");
    (867, 0, "t");
    (868, 0, " ");
    (869, 0, "g");
    (870, 0, "e");
    (871, 0, "t");
    (872, 0, "_");
    (873, 0, "c");
    (874, 0, "u");
    (875, 0, "r");
    (876, 0, "r");
    (877, 0, "e");
    (878, 0, "n");
    (879, 0, "t");
    (880, 0, "_");
    (881, 0, "s");
    (882, 0, "t");
    (883, 0, "a");
    (884, 0, "t");
    (885, 0, "e");
    (886, 0, " ");
    (887, 0, "=");
    (888, 0, " ");
    (889, 0, "(");
    (890, 0, ")");
    (891, 0, " ");
    (892, 0, "=");
    (893, 0, ">");
    (894, 0, " ");
    (895, 0, "{");
    (896, 0, "\n\t");
    (898, 0, "\n\t");
    (897, 1, "");
    (898, 1, "}");
    (50, 0, "\texport let state\n");
    (80, 5, "s");
    (81, 0, "t");
    (82, 0, "a");
    (83, 0, "r");
    (84, 0, "t");
    (85, 0, "_");
    (86, 0, "t");
    (87, 0, "i");
    (88, 0, "m");
    (89, 0, "e");
    (920, 0, "\t");
    (921, 0, "f");
    (922, 0, "o");
    (923, 0, "r");
    (924, 0, " ");
    (925, 0, "(");
    (926, 0, "l");
    (927, 0, "e");
    (928, 0, "t");
    (929, 0, " ");
    (930, 0, "s");
    (931, 0, " ");
    (932, 0, "=");
    (933, 0, " ");
    (934, 0, "0");
    (935, 0, ";");
    (936, 0, " ");
    (937, 0, "i");
    (937, 1, "");
    (937, 0, "s");
    (938, 0, " ");
    (939, 0, "<");
    (940, 0, " ");
    (941, 0, "g");
    (942, 0, "a");
    (943, 0, "m");
    (944, 0, "e");
    (941, 4, "game_stages");
    (952, 0, ".");
    (953, 0, "l");
    (954, 0, "e");
    (955, 0, "n");
    (956, 0, "g");
    (957, 0, "t");
    (958, 0, "h");
    (959, 0, ";");
    (960, 0, " ");
    (961, 0, "i");
    (961, 1, "");
    (961, 0, "s");
    (962, 0, "+");
    (963, 0, "+");
    (964, 0, ")");
    (965, 0, " ");
    (966, 0, "{");
    (967, 0, "\n\t\t");
    (970, 0, "\n\t\t");
    (968, 2, "");
    (969, 2, "\t}");
    (968, 0, "\t\t");
    (968, 2, "");
    (919, 0, "\n\t");
    (921, 0, "l");
    (922, 0, "e");
    (923, 0, "t");
    (921, 3, "");
    (913, 0, "o");
    (914, 0, "f");
    (915, 0, "f");
    (916, 0, "s");
    (917, 0, "e");
    (918, 0, "t");
    (913, 0, "t");
    (914, 0, "i");
    (915, 0, "m");
    (916, 0, "e");
    (917, 0, "_");
    (913, 4, "s");
    (914, 0, "t");
    (915, 0, "a");
    (916, 0, "r");
    (917, 0, "t");
    (925, 0, "_");
    (926, 0, "m");
    (927, 0, "s");
    (936, 0, "l");
    (937, 0, "e");
    (938, 0, "t");
    (939, 0, " ");
    (940, 0, "s");
    (941, 0, " ");
    (942, 0, "=");
    (943, 0, " ");
    (944, 0, "0");
    (945, 0, ";");
    (945, 1, "");
    (945, 0, "\n\t");
    (947, 0, "w");
    (948, 0, "h");
    (949, 0, "i");
    (950, 0, "l");
    (951, 0, "e");
    (952, 0, " ");
    (953, 0, "s");
    (954, 0, "t");
    (955, 0, "a");
    (956, 0, "r");
    (957, 0, "t");
    (8, 0, "\nimport { start } from \"repl\";\n\n");
    (985, 5, "start");
    (990, 0, "_");
    (991, 0, "o");
    (992, 0, "f");
    (985, 8, "start_offset_ms");
    (978, 22, "");
    (977, 1, "");
    (972, 1, "");
    (972, 0, "g");
    (973, 0, "a");
    (974, 0, "m");
    (975, 0, "e");
    (976, 0, "_");
    (977, 0, "d");
    (978, 0, "u");
    (979, 0, "r");
    (980, 0, "a");
    (981, 0, "t");
    (982, 0, "i");
    (983, 0, "o");
    (984, 0, "n");
    (1038, 0, "\t\t");
    (1040, 0, "l");
    (1041, 0, "e");
    (1042, 0, "t");
    (1043, 0, " ");
    (1044, 0, "s");
    (1045, 0, "t");
    (1046, 0, "a");
    (1047, 0, "t");
    (1048, 0, "e");
    (1049, 0, " ");
    (1050, 0, "=");
    (1051, 0, " ");
    (1052, 0, "g");
    (1053, 0, "a");
    (1054, 0, "m");
    (1055, 0, "e");
    (1056, 0, "_");
    (1057, 0, "s");
    (1058, 0, "t");
    (1052, 7, "game_stages");
    (1063, 0, "[");
    (1064, 0, "s");
    (1065, 0, "]");
    (1066, 0, "\n\t\t");
    (1069, 0, "i");
    (1070, 0, "f");
    (1071, 0, " ");
    (1072, 0, "(");
    (945, 1, "");
    (945, 1, "");
    (945, 1, "");
    (945, 1, "");
    (945, 1, "");
    (945, 1, "");
    (961, 22, "");
    (960, 1, "");
    (1044, 0, "s");
    (1045, 0, "t");
    (1046, 0, "a");
    (1047, 0, "t");
    (1048, 0, "e");
    (1044, 5, "state");
    (1049, 0, ".");
    (1050, 0, "d");
    (1051, 0, "u");
    (1052, 0, "r");
    (1053, 0, "a");
    (1054, 0, "t");
    (1055, 0, "i");
    (1056, 0, "o");
    (1057, 0, "n");
    (1058, 0, " ");
    (1059, 0, "*");
    (1060, 0, " ");
    (1061, 0, "1");
    (1062, 0, "0");
    (1063, 0, "0");
    (1064, 0, "0");
    (1065, 0, " ");
    (1066, 0, ">");
    (1067, 0, " ");
    (1068, 0, "o");
    (1069, 0, "f");
    (1070, 0, "f");
    (1071, 0, "s");
    (1072, 0, "e");
    (1068, 5, "offset_ms");
    (1077, 0, ")");
    (1078, 0, " ");
    (1079, 0, "{");
    (1080, 0, "\n\t\t\t");
    (1081, 3, "\t\t}");
    (1080, 0, "\n\t\t\t");
    (1084, 0, "r");
    (1085, 0, "e");
    (1086, 0, "t");
    (1087, 0, "u");
    (1088, 0, "r");
    (1089, 0, "n");
    (1090, 0, " ");
    (1091, 0, "{");
    (1092, 0, "s");
    (1093, 0, "t");
    (1094, 0, "a");
    (1095, 0, "t");
    (1096, 0, "e");
    (1097, 0, ",");
    (1098, 0, " ");
    (1099, 0, "o");
    (1100, 0, "f");
    (1101, 0, "f");
    (1102, 0, "s");
    (1103, 0, "e");
    (1104, 0, "t");
    (1099, 6, "offset_ms");
    (1108, 0, "}");
    (1113, 0, "\n\t\t");
    (1116, 0, "o");
    (1117, 0, "f");
    (1118, 0, "f");
    (1116, 3, "offset_ms");
    (1125, 0, " ");
    (1126, 0, "-");
    (1127, 0, "=");
    (1128, 0, " ");
    (1129, 0, "state.duration * 1000");
    (1153, 0, "\n\t");
    (1155, 0, "r");
    (1156, 0, "e");
    (1157, 0, "t");
    (1158, 0, "u");
    (1159, 0, "r");
    (1160, 0, "n");
    (1161, 0, " ");
    (1162, 0, "{");
    (1163, 0, "\n\t\t");
    (1166, 0, "s");
    (1167, 0, "t");
    (1168, 0, "a");
    (1169, 0, "t");
    (1170, 0, "e");
    (1171, 0, ":");
    (1172, 0, " ");
    (1173, 0, "{");
    (1174, 0, "\n\t\t\t");
    (1178, 0, "l");
    (1179, 0, "a");
    (1180, 0, "b");
    (1181, 0, "e");
    (1182, 0, "l");
    (1183, 0, ":");
    (1184, 0, " ");
    (1185, 0, "'");
    (1186, 0, "G");
    (1187, 0, "a");
    (1188, 0, "m");
    (1189, 0, "e");
    (1190, 0, " ");
    (1191, 0, "c");
    (1192, 0, "o");
    (1193, 0, "m");
    (1194, 0, "p");
    (1195, 0, "l");
    (1196, 0, "e");
    (1197, 0, "t");
    (1198, 0, "e");
    (1199, 0, "'");
    (1200, 0, ",");
    (1200, 1, "");
    (1164, 36, "\t\tstate: { label: 'Game complete'");
    (1197, 0, " ");
    (1198, 0, "}");
    (1199, 0, ",");
    (1200, 0, " ");
    (1201, 0, "o");
    (1202, 0, "f");
    (1203, 0, "f");
    (1201, 3, "offset_ms");
    (1210, 0, "\n\t\t");
    (1211, 2, "\t}");
    (101, 0, "// ");
    (101, 3, "");
    (9, 30, "");
    (10, 1, "");
    (9, 1, "");
    (8, 1, "");
    (1959, 0, "\n");
    (1960, 0, "\n");
    (1961, 0, "4");
    (1962, 0, ":");
    (1962, 1, "");
    (1961, 1, "");
    (1961, 0, "l");
    (1962, 0, "e");
    (1963, 0, "t");
    (1964, 0, " ");
    (1965, 0, "t");
    (1966, 0, "i");
    (1967, 0, "m");
    (1968, 0, "e");
    (1969, 0, "r");
    (1970, 0, "\n");
    (1971, 0, "$");
    (1972, 0, ":");
    (1973, 0, " ");
    (1974, 0, "{");
    (1975, 0, "\n\t");
    (1977, 0, "\n\t");
    (1976, 1, "");
    (1977, 1, "}");
    (1978, 0, "\n");
    (1976, 0, "\t");
    (1977, 0, "i");
    (1978, 0, "f");
    (1979, 0, " ");
    (1980, 0, "(");
    (1981, 0, "s");
    (1982, 0, "t");
    (1983, 0, "a");
    (1984, 0, "t");
    (1985, 0, "e");
    (1986, 0, " ");
    (1987, 0, "=");
    (1988, 0, "=");
    (1989, 0, "=");
    (1990, 0, " ");
    (1991, 0, "'");
    (1992, 0, "p");
    (1993, 0, "l");
    (1994, 0, "a");
    (1995, 0, "y");
    (1996, 0, "i");
    (1997, 0, "n");
    (1998, 0, "g");
    (1999, 0, "'");
    (2000, 0, ")");
    (2001, 0, " ");
    (2002, 0, "{");
    (2003, 0, "\n\t\t");
    (2006, 0, "\n\t\t");
    (2004, 2, "");
    (2005, 2, "\t}");
    (2004, 0, "\t\t");
    (2004, 2, "");
    (2000, 0, " ");
    (2001, 0, "&");
    (2002, 0, "&");
    (2003, 0, " ");
    (2004, 0, "t");
    (2005, 0, "i");
    (2006, 0, "m");
    (2007, 0, "e");
    (2008, 0, "r");
    (2009, 0, " ");
    (2010, 0, "=");
    (2011, 0, "=");
    (2012, 0, " ");
    (2013, 0, "n");
    (2014, 0, "u");
    (2015, 0, "l");
    (2016, 0, "l");
    (2021, 0, "\t\t");
    (2023, 0, "/");
    (2024, 0, "/");
    (2023, 2, "");
    (2023, 0, "t");
    (2024, 0, "i");
    (2025, 0, "m");
    (2026, 0, "e");
    (2027, 0, "r");
    (2028, 0, " ");
    (2029, 0, "=");
    (2030, 0, " ");
    (2031, 0, "s");
    (2032, 0, "e");
    (2033, 0, "t");
    (2034, 0, "I");
    (2035, 0, "n");
    (2036, 0, "t");
    (2031, 6, "setInterval");
    (2042, 0, "(");
    (2043, 0, "(");
    (2044, 0, ")");
    (2045, 0, " ");
    (2046, 0, "=");
    (2047, 0, ">");
    (2048, 0, " ");
    (2049, 0, "{");
    (2050, 0, "\n\t\t\t");
    (2054, 0, "\n\t\t\t");
    (2051, 3, "");
    (2052, 3, "\t\t}");
    (2055, 0, ",");
    (2056, 0, " ");
    (2057, 0, "0");
    (2058, 0, "0");
    (2058, 1, "");
    (2057, 1, "");
    (2057, 0, "1");
    (2058, 0, "0");
    (2059, 0, "0");
    (2060, 0, "0");
    (2061, 0, ")");
    (2051, 0, "\t\t\t");
    (2054, 0, "/");
    (2055, 0, "/");
    (2055, 1, "");
    (2054, 1, "");
    (2054, 0, "c");
    (2055, 0, "o");
    (2056, 0, "n");
    (2057, 0, "s");
    (2058, 0, "o");
    (2059, 0, "l");
    (2060, 0, "e");
    (2054, 7, "console");
    (2061, 0, ".");
    (2062, 0, "l");
    (2063, 0, "o");
    (2064, 0, "g");
    (2062, 3, "log");
    (2065, 0, "(");
    (2066, 0, "'");
    (2067, 0, "t");
    (2068, 0, "i");
    (2069, 0, "c");
    (2070, 0, "k");
    (2071, 0, "'");
    (2072, 0, ")");
    (2087, 0, " ");
    (2088, 0, "e");
    (2089, 0, "l");
    (2090, 0, "s");
    (2091, 0, "e");
    (2092, 0, " ");
    (2093, 0, "i");
    (2094, 0, "f");
    (2095, 0, " ");
    (2096, 0, "(");
    (2097, 0, "s");
    (2098, 0, "t");
    (2099, 0, "a");
    (2100, 0, "t");
    (2101, 0, "e");
    (2102, 0, " ");
    (2103, 0, "!");
    (2104, 0, "=");
    (2105, 0, "=");
    (2106, 0, " ");
    (2107, 0, "'");
    (2108, 0, "p");
    (2109, 0, "l");
    (2110, 0, "a");
    (2111, 0, "y");
    (2112, 0, "i");
    (2113, 0, "n");
    (2114, 0, "g");
    (2115, 0, "'");
    (2116, 0, " ");
    (2117, 0, "&");
    (2118, 0, "&");
    (2119, 0, " ");
    (2120, 0, "t");
    (2121, 0, "i");
    (2122, 0, "m");
    (2123, 0, "e");
    (2124, 0, "r");
    (2125, 0, " ");
    (2126, 0, "!");
    (2127, 0, "=");
    (2128, 0, " ");
    (2129, 0, "n");
    (2130, 0, "u");
    (2131, 0, "l");
    (2132, 0, "l");
    (2133, 0, ")");
    (2134, 0, " ");
    (2135, 0, "{");
    (2136, 0, "\n\t\t");
    (2139, 0, "\n\t\t");
    (2137, 2, "");
    (2138, 2, "\t}");
    (2137, 0, "\t\t");
    (2139, 0, "c");
    (2140, 0, "l");
    (2141, 0, "e");
    (2142, 0, "a");
    (2143, 0, "r");
    (2144, 0, "I");
    (2145, 0, "n");
    (2146, 0, "t");
    (2139, 8, "clearInterval");
    (2152, 0, "(");
    (2153, 0, "t");
    (2154, 0, "i");
    (2155, 0, "m");
    (2156, 0, "e");
    (2157, 0, "r");
    (2158, 0, ")");
    (2159, 0, "\n\t\t");
    (2162, 0, "t");
    (2163, 0, "i");
    (2164, 0, "m");
    (2165, 0, "e");
    (2166, 0, "r");
    (2167, 0, " ");
    (2168, 0, "=");
    (2169, 0, " ");
    (2170, 0, "n");
    (2171, 0, "u");
    (2172, 0, "l");
    (2173, 0, "l");
    (1975, 0, "\n\t");
    (1977, 0, "c");
    (1978, 0, "o");
    (1979, 0, "n");
    (1980, 0, "s");
    (1981, 0, "o");
    (1982, 0, "l");
    (1983, 0, "e");
    (1977, 7, "console");
    (1984, 0, ".");
    (1985, 0, "l");
    (1986, 0, "o");
    (1987, 0, "g");
    (1985, 3, "log");
    (1988, 0, "(");
    (1989, 0, "s");
    (1990, 0, "t");
    (1991, 0, "a");
    (1992, 0, "t");
    (1993, 0, "e");
    (1989, 5, "state");
    (1994, 0, ",");
    (1995, 0, " ");
    (1996, 0, "t");
    (1997, 0, "i");
    (1998, 0, "m");
    (1999, 0, "e");
    (2000, 0, "r");
    (2001, 0, ")");
    (2081, 19, "");
    (2081, 0, "console.log('tick')");
    (2100, 0, "\n\t\t\t");
    (2104, 0, "\n\t\t\t");
    (2101, 3, "");
    (2102, 3, "");
    (2101, 0, "\n\t\t\t");
    (2105, 0, "l");
    (2106, 0, "e");
    (2107, 0, "t");
    (2108, 0, " ");
    (884, 298, "");
    (1646, 0, "\n");
    (1647, 0, "\n");
    ( 1647,
      0,
      "\n\
       const get_current_state = (offset_ms) => {\n\
       \tfor (let s = 0; s < game_stages.length; s++) {\n\
       \t\tlet state = game_stages[s]\n\
       \t\tif (state.duration * 1000 > offset_ms) {\n\
       \t\t\treturn {state, offset_ms}\n\
       \t\t}\n\
       \t\toffset_ms -= state.duration * 1000\n\
       \t}\n\
       \treturn {\n\
       \t\tstate: { label: 'Game complete' }, offset_ms\n\
       \t}\n\
       }" );
    (2111, 0, "{");
    (2112, 0, "s");
    (2113, 0, "t");
    (2114, 0, "a");
    (2115, 0, "t");
    (2116, 0, "e");
    (2117, 0, ",");
    (2118, 0, " ");
    (2119, 0, "o");
    (2120, 0, "f");
    (2121, 0, "f");
    (2122, 0, "s");
    (2123, 0, "e");
    (2124, 0, "t");
    (2125, 0, "_");
    (2126, 0, "m");
    (2127, 0, "s");
    (2128, 0, "}");
    (2129, 0, " ");
    (2130, 0, "=");
    (2131, 0, " ");
    (2132, 0, "g");
    (2133, 0, "e");
    (2134, 0, "t");
    (2135, 0, "_");
    (2136, 0, "c");
    (2137, 0, "u");
    (2138, 0, "r");
    (2132, 7, "get_current_state");
    (2149, 0, "(");
    (2150, 0, "D");
    (2151, 0, "a");
    (2152, 0, "t");
    (2153, 0, "e");
    (2150, 4, "Date");
    (2154, 0, ".");
    (2155, 0, "n");
    (2156, 0, "o");
    (2157, 0, "w");
    (2155, 3, "now");
    (2158, 0, "(");
    (2159, 0, ")");
    (2160, 0, " ");
    (2161, 0, "-");
    (2162, 0, " ");
    (2163, 0, "s");
    (2164, 0, "t");
    (2165, 0, "a");
    (2166, 0, "r");
    (2167, 0, "t");
    (2168, 0, "_");
    (2169, 0, "t");
    (2163, 7, "start_time");
    (2173, 0, ")");
    (2174, 0, "\n\t\t\t");
    (2175, 3, "");
    (1972, 0, "\n");
    (1973, 0, "l");
    (1974, 0, "e");
    (1975, 0, "t");
    (1976, 0, " ");
    (1977, 0, "l");
    (1978, 0, "a");
    (1979, 0, "b");
    (1980, 0, "e");
    (1981, 0, "l");
    (1977, 5, "");
    (1977, 0, "g");
    (1978, 0, "a");
    (1979, 0, "m");
    (1980, 0, "e");
    (1981, 0, "_");
    (1982, 0, "s");
    (1983, 0, "t");
    (1984, 0, "a");
    (1985, 0, "t");
    (1986, 0, "e");
    (1987, 0, ",");
    (1988, 0, " ");
    (1989, 0, "l");
    (1990, 0, "a");
    (1991, 0, "b");
    (1992, 0, "e");
    (1987, 6, "");
    (1987, 0, ",");
    (1988, 0, " ");
    (1989, 0, "g");
    (1990, 0, "a");
    (1991, 0, "m");
    (1992, 0, "e");
    (1993, 0, "_");
    (1989, 5, "s");
    (1990, 0, "t");
    (1991, 0, "a");
    (1992, 0, "t");
    (1993, 0, "e");
    (1994, 0, "_");
    (1995, 0, "o");
    (1996, 0, "f");
    (1997, 0, "f");
    (1998, 0, "s");
    (1999, 0, "e");
    (2000, 0, "t");
    (2001, 0, "_");
    (2002, 0, "m");
    (2003, 0, "s");
    (2207, 0, "\t\t\t");
    (2207, 3, "");
    (2149, 0, ":");
    (2150, 0, " ");
    (2151, 0, "g");
    (2152, 0, "a");
    (2153, 0, "m");
    (2154, 0, "e");
    (2155, 0, "_");
    (2151, 5, "game_stages");
    (2161, 1, "");
    (2160, 1, "");
    (2159, 1, "");
    (2159, 0, "t");
    (2160, 0, "e");
    (2172, 0, ":");
    (2173, 0, " ");
    (2174, 0, "s");
    (2175, 0, "t");
    (2176, 0, "a");
    (2177, 0, "t");
    (2178, 0, "e");
    (2179, 0, "_");
    (2180, 0, "o");
    (2181, 0, "f");
    (2182, 0, "f");
    (2174, 9, "state_offset_ms");
    (2139, 4, "");
    (2232, 1, "");
    (2231, 1, "");
    (2139, 0, ";");
    (2139, 1, "");
    (2139, 0, "l");
    (2140, 0, "e");
    (2141, 0, "t");
    (2142, 0, " ");
    (2149, 12, "");
    (2160, 17, "");
    (2206, 0, "\n\t\t\t");
    (2210, 0, "g");
    (2211, 0, "a");
    (2212, 0, "m");
    (2213, 0, "e");
    (2214, 0, "_");
    (2215, 0, "s");
    (2216, 0, "t");
    (2217, 0, "a");
    (2218, 0, "t");
    (2219, 0, "e");
    (2220, 0, " ");
    (2221, 0, "=");
    (2222, 0, " ");
    (2223, 0, "s");
    (2224, 0, "t");
    (2225, 0, "a");
    (2226, 0, "t");
    (2227, 0, "t");
    (2227, 1, "");
    (2227, 0, "e");
    (2228, 0, ";");
    (2229, 0, " ");
    (2230, 0, "s");
    (2231, 0, "t");
    (2232, 0, "a");
    (2233, 0, "t");
    (2234, 0, "e");
    (2235, 0, "_");
    (2236, 0, "o");
    (2237, 0, "f");
    (2230, 8, "state_offset_ms");
    (2245, 0, " ");
    (2246, 0, "=");
    (2247, 0, " ");
    (2248, 0, "o");
    (2249, 0, "f");
    (2250, 0, "f");
    (2248, 3, "offset_ms");
    (2257, 0, "\n\t\t\t");
    (2258, 3, "");
    (2210, 10, "s");
    (1977, 10, "s");
    (2202, 0, "t");
    (1978, 0, "t");
    (2204, 0, "a");
    (1979, 0, "a");
    (2206, 0, "t");
    (1980, 0, "t");
    (2208, 0, "e");
    (1981, 0, "e");
    (2210, 0, "_");
    (1982, 0, "_");
    (2212, 0, "l");
    (1983, 0, "l");
    (2214, 0, "a");
    (1984, 0, "a");
    (2216, 0, "b");
    (1985, 0, "b");
    (2218, 0, "e");
    (1986, 0, "e");
    (2220, 0, "l");
    (1987, 0, "l");
    (1990, 15, "s");
    (1991, 0, "t");
    (1992, 0, "a");
    (1993, 0, "t");
    (1994, 0, "e");
    (1995, 0, "_");
    (1996, 0, "p");
    (1997, 0, "r");
    (1998, 0, "o");
    (1999, 0, "g");
    (2000, 0, "r");
    (2001, 0, "e");
    (2002, 0, "s");
    (2003, 0, "s");
    (2004, 0, " ");
    (2005, 0, "/");
    (2006, 0, "/");
    (2007, 0, " ");
    (2008, 0, "0");
    (2009, 0, " ");
    (2010, 0, "t");
    (2011, 0, "o");
    (2012, 0, " ");
    (2013, 0, "1");
    (1988, 0, " ");
    (1989, 0, "/");
    (1990, 0, "/");
    (2242, 29, "");
    (2237, 5, "state");
    (2242, 0, ".");
    (2243, 0, "l");
    (2244, 0, "a");
    (2245, 0, "b");
    (2246, 0, "e");
    (2247, 0, "l");
    (2248, 0, "\n\t\t\t");
    (2252, 0, "w");
    (2253, 0, "i");
    (2254, 0, "d");
    (2255, 0, "t");
    (2256, 0, "h");
    (2257, 0, " ");
    (2258, 0, "=");
    (2259, 0, " ");
    (2260, 0, "o");
    (2261, 0, "f");
    (2262, 0, "f");
    (2260, 3, "offset_ms");
    (2260, 0, "s");
    (2261, 0, "t");
    (2262, 0, "a");
    (2263, 0, "t");
    (2264, 0, "e");
    (2265, 0, ".");
    (2266, 0, "d");
    (2267, 0, "u");
    (2268, 0, "r");
    (2269, 0, "a");
    (2270, 0, "t");
    (2271, 0, "i");
    (2272, 0, "o");
    (2273, 0, "n");
    (2274, 0, " ");
    (2275, 0, "*");
    (2276, 0, " ");
    (2277, 0, "1");
    (2278, 0, "0");
    (2279, 0, "0");
    (2280, 0, "0");
    (2281, 0, " ");
    (2282, 9, "");
    (2281, 1, "");
    (2260, 0, "offset_ms");
    (2269, 0, " ");
    (2270, 0, "/");
    (2271, 0, " ");
    (2272, 0, "(");
    (2294, 0, ")");
    (2259, 0, " ");
    (2260, 0, "1");
    (2261, 0, "0");
    (2262, 0, "0");
    (2263, 0, " ");
    (2264, 0, "*");
    (2646, 0, "\n\t");
    (2648, 0, "<");
    (2649, 0, "h");
    (2650, 0, "4");
    (2651, 0, ">");
    (2652, 0, "g");
    (2652, 1, "");
    (2652, 0, "s");
    (2653, 0, "t");
    (2654, 0, "a");
    (2655, 0, "t");
    (2656, 0, "e");
    (2657, 0, "_");
    (2652, 6, "state_label");
    (2652, 0, "{");
    (2664, 0, "}");
    (2665, 0, "<");
    (2666, 0, "/");
    (2667, 0, "h");
    (2668, 0, "2");
    (2668, 1, "");
    (2668, 0, "4");
    (2669, 0, ">");
    (2308, 4, "3");
    (2309, 0, "5");
    (2309, 1, "");
    (2308, 1, "");
    (2308, 0, "2");
    (2309, 0, "5");
    (2310, 0, "0");
    (821, 0, "+");
    (822, 0, "1");
    (835, 0, "+");
    (836, 0, "1");
    (1931, 0, ",");
    (1932, 0, " ");
    (1933, 0, "c");
    (1934, 0, "o");
    (1935, 0, "m");
    (1936, 0, "p");
    (1937, 0, "l");
    (1938, 0, "e");
    (1939, 0, "t");
    (1940, 0, "e");
    (1941, 0, ":");
    (1942, 0, " ");
    (1943, 0, "t");
    (1944, 0, "r");
    (1945, 0, "u");
    (1946, 0, "e");
    (2268, 0, "\n\t\t\t");
    (2272, 0, "i");
    (2273, 0, "f");
    (2274, 0, " ");
    (2275, 0, "(");
    (2276, 0, "s");
    (2277, 0, "t");
    (2278, 0, "a");
    (2279, 0, "t");
    (2280, 0, "e");
    (2276, 5, "state");
    (2281, 0, ".");
    (2282, 0, "c");
    (2283, 0, "o");
    (2284, 0, "m");
    (2285, 0, "p");
    (2286, 0, "l");
    (2287, 0, "e");
    (2288, 0, "t");
    (2289, 0, "e");
    (2290, 0, ")");
    (2291, 0, " ");
    (2272, 20, "");
    (2283, 0, " ");
    (2284, 0, "s");
    (2285, 0, "t");
    (2286, 0, "a");
    (2287, 0, "t");
    (2288, 0, "e");
    (2284, 5, "state");
    (2289, 0, ".");
    (2290, 0, "c");
    (2291, 0, "o");
    (2292, 0, "m");
    (2293, 0, "p");
    (2294, 0, "l");
    (2295, 0, "e");
    (2296, 0, "t");
    (2297, 0, "e");
    (2298, 0, " ");
    (2299, 0, "?");
    (2300, 0, " ");
    (2301, 0, "1");
    (2302, 0, "0");
    (2303, 0, "0");
    (2304, 0, "\n\t\t\t");
    (2308, 0, ":");
    (2037, 0, "\n");
    (2038, 0, "l");
    (2039, 0, "e");
    (2040, 0, "t");
    (2041, 0, " ");
    (2042, 0, "x");
    (2043, 0, "x");
    (2044, 0, "x");
    (2045, 0, " ");
    (2046, 0, "=");
    (2047, 0, " ");
    (2048, 0, "a");
    (2049, 0, "l");
    (2049, 1, "");
    (2048, 1, "");
    (2048, 0, "f");
    (2049, 0, "a");
    (2050, 0, "l");
    (2051, 0, "s");
    (2052, 0, "e");
    (2367, 0, "\n\t\t\t");
    (2371, 0, "\n\t\t\t");
    (2368, 3, "");
    (2372, 0, "i");
    (2373, 0, "f");
    (2374, 0, " ");
    (2375, 0, "(");
    (2376, 0, "s");
    (2377, 0, "t");
    (2378, 0, "a");
    (2379, 0, "t");
    (2380, 0, "e");
    (2376, 5, "state");
    (2381, 0, ".");
    (2382, 0, "c");
    (2383, 0, "o");
    (2384, 0, "m");
    (2385, 0, "p");
    (2386, 0, "l");
    (2387, 0, "e");
    (2388, 0, "t");
    (2389, 0, "e");
    (2390, 0, ")");
    (2391, 0, " ");
    (2392, 0, "x");
    (2393, 0, "x");
    (2394, 0, "x");
    (2395, 0, " ");
    (2396, 0, "=");
    (2397, 0, " ");
    (2398, 0, "t");
    (2399, 0, "r");
    (2400, 0, "u");
    (2401, 0, "e");
    (2127, 0, " ");
    (2128, 0, "&");
    (2129, 0, "&");
    (2130, 0, "&");
    (2131, 0, " ");
    (2131, 1, "");
    (2130, 1, "");
    (2130, 0, " ");
    (2131, 0, "x");
    (2132, 0, "x");
    (2133, 0, "x");
    (2134, 0, " ");
    (2135, 0, "=");
    (2136, 0, "=");
    (2137, 0, "=");
    (2138, 0, " ");
    (2139, 0, "f");
    (2140, 0, "a");
    (2141, 0, "l");
    (2142, 0, "s");
    (2143, 0, "e");
    (2462, 0, ")");
    (2443, 0, "(");
    (2463, 0, " ");
    (2464, 0, "|");
    (2465, 0, "|");
    (2466, 0, " ");
    (2467, 0, "x");
    (2468, 0, "x");
    (2469, 0, "x");
    (2470, 0, " ");
    (2470, 1, "");
    (3480, 8, "");
    (3419, 3, "\t\t\t\t");
    (3388, 2, "\t\t\t");
    (3388, 0, "\t\t\t{/if}\n");
    (3491, 0, "\n\t\t{/if}");
    (3429, 4, "\t\t\t");
    (3397, 3, "\t\t");
    (3388, 9, "");
    ( 3388,
      0,
      "\t\t{:else if state == 'paused'}\n\
       \t\t\t<button on:click={upd('state', 'playing')}>Resume</button>\n" );
    (2038, 15, "");
    (225, 0, "\n\t");
    (227, 0, "let xxx = false");
    (242, 0, "\n\t");
    (243, 1, "");
    (231, 3, "g");
    (232, 0, "a");
    (233, 0, "m");
    (234, 0, "e");
    (235, 0, "_");
    (236, 0, "c");
    (237, 0, "o");
    (238, 0, "m");
    (239, 0, "p");
    (240, 0, "l");
    (241, 0, "e");
    (242, 0, "t");
    (243, 0, "e");
    (244, 0, "d");
    (253, 0, " ");
    (254, 0, "/");
    (255, 0, "/");
    (225, 0, "\n\t");
    (258, 0, " ");
    (226, 1, "");
    (258, 0, "D");
    (259, 0, "e");
    (260, 0, "r");
    (261, 0, "i");
    (262, 0, "v");
    (263, 0, "e");
    (264, 0, "d");
    (265, 0, " ");
    (266, 0, "f");
    (267, 0, "r");
    (268, 0, "o");
    (269, 0, "m");
    (270, 0, " ");
    (271, 0, "o");
    (272, 0, "t");
    (273, 0, "h");
    (274, 0, "e");
    (275, 0, "r");
    (276, 0, " ");
    (277, 0, "p");
    (278, 0, "o");
    (279, 0, "r");
    (279, 1, "");
    (278, 1, "");
    (278, 0, "r");
    (279, 0, "o");
    (280, 0, "p");
    (281, 0, "e");
    (282, 0, "r");
    (283, 0, "t");
    (284, 0, "i");
    (285, 0, "e");
    (286, 0, "s");
    (2515, 3, "g");
    (2457, 3, "g");
    (2179, 3, "g");
    (2512, 0, "a");
    (2456, 0, "a");
    (2180, 0, "a");
    (2515, 0, "m");
    (2458, 0, "m");
    (2181, 0, "m");
    (2518, 0, "e");
    (2460, 0, "e");
    (2182, 0, "e");
    (2521, 0, "_");
    (2462, 0, "_");
    (2183, 0, "_");
    (2524, 0, "c");
    (2464, 0, "c");
    (2184, 0, "c");
    (2527, 0, "o");
    (2466, 0, "o");
    (2185, 0, "o");
    (2530, 0, "m");
    (2468, 0, "m");
    (2186, 0, "m");
    (2533, 0, "p");
    (2470, 0, "p");
    (2187, 0, "p");
    (2536, 0, "l");
    (2472, 0, "l");
    (2188, 0, "l");
    (2529, 10, "game_completed");
    (2464, 10, "game_completed");
    (2179, 10, "game_completed");
    (2179, 0, "!");
    (2194, 10, "");
    (287, 0, "\n\t");
    (289, 0, "l");
    (290, 0, "e");
    (291, 0, "t");
    (292, 0, " ");
    (293, 0, "i");
    (294, 0, "n");
    (295, 0, "t");
    (296, 0, "e");
    (297, 0, "r");
    (298, 0, "n");
    (299, 0, "a");
    (300, 0, "l");
    (301, 0, "_");
    (302, 0, "s");
    (303, 0, "t");
    (304, 0, "a");
    (305, 0, "t");
    (306, 0, "e");
    (307, 0, " ");
    (308, 0, "=");
    (309, 0, " ");
    (310, 0, "g");
    (311, 0, "a");
    (312, 0, "m");
    (313, 0, "e");
    (314, 0, "_");
    (310, 5, "game_completed");
    (324, 0, " ");
    (325, 0, "?");
    (326, 0, " ");
    (327, 0, "'");
    (328, 0, "c");
    (329, 0, "o");
    (330, 0, "m");
    (331, 0, "p");
    (332, 0, "l");
    (333, 0, "e");
    (334, 0, "t");
    (335, 0, "e");
    (336, 0, "d");
    (337, 0, "'");
    (338, 0, " ");
    (339, 0, ":");
    (340, 0, " ");
    (341, 0, "s");
    (342, 0, "t");
    (343, 0, "a");
    (344, 0, "t");
    (345, 0, "e");
    (2234, 19, "");
    (2198, 5, "i");
    (2199, 0, "n");
    (2200, 0, "t");
    (2201, 0, "e");
    (2202, 0, "r");
    (2203, 0, "n");
    (2198, 6, "internal_state");
    (2554, 5, "i");
    (2555, 0, "n");
    (2556, 0, "t");
    (2557, 0, "e");
    (2558, 0, "r");
    (2559, 0, "n");
    (2560, 0, "a");
    (2561, 0, "l");
    (2554, 8, "internal_state");
    (2553, 1, "");
    (2581, 19, "");
    (2644, 0, "\n");
    (2645, 0, "\n");
    (2646, 0, "$");
    (2647, 0, ":");
    (2648, 0, " ");
    (2649, 0, "{");
    (2650, 0, "\n\t");
    (2651, 1, "}");
    (2650, 0, "\n\t");
    (2652, 0, "c");
    (2653, 0, "o");
    (2654, 0, "n");
    (2655, 0, "s");
    (2656, 0, "o");
    (2657, 0, "l");
    (2658, 0, "e");
    (2652, 7, "console");
    (2659, 0, ".");
    (2660, 0, "l");
    (2661, 0, "o");
    (2662, 0, "g");
    (2660, 3, "log");
    (2663, 0, "(");
    (2664, 0, "'");
    (2665, 0, "i");
    (2666, 0, "n");
    (2667, 0, "t");
    (2668, 0, "e");
    (2669, 0, "r");
    (2670, 0, "n");
    (2671, 0, "a");
    (2672, 0, "l");
    (2673, 0, " ");
    (2674, 0, "s");
    (2675, 0, "t");
    (2676, 0, "a");
    (2677, 0, "t");
    (2678, 0, "e");
    (2679, 0, "'");
    (2680, 0, ",");
    (2681, 0, " ");
    (2682, 0, "i");
    (2683, 0, "n");
    (2684, 0, "t");
    (2685, 0, "e");
    (2686, 0, "r");
    (2687, 0, "n");
    (2682, 6, "internal_state");
    (2696, 0, ")");
    (288, 1, "");
    (227, 1, "");
    (197, 1, "");
    (168, 1, "");
    (149, 1, "");
    (129, 1, "");
    (108, 1, "");
    (90, 1, "");
    (67, 1, "");
    (49, 1, "");
    (26, 1, "");
    (9, 1, "");
    (277, 3, "$");
    (278, 0, ":");
    (276, 0, "\n");
    (277, 0, "l");
    (278, 0, "e");
    (279, 0, "t");
    (280, 0, " ");
    (281, 0, "i");
    (282, 0, "n");
    (283, 0, "t");
    (284, 0, "e");
    (285, 0, "r");
    (286, 0, "n");
    (281, 6, "internal_state");
    (2494, 0, "// ");
    (277, 0, "// ");
    (277, 3, "");
    (2494, 3, "");
    (296, 0, "// ");
    (277, 0, "// ");
    (299, 3, "");
    (277, 3, "");
    (2559, 9, "");
    (2204, 9, "");
    (2240, 0, " ");
    (2241, 0, "&");
    (2242, 0, "&");
    (2243, 0, " ");
    (2244, 0, "!");
    (2245, 0, "g");
    (2246, 0, "a");
    (2247, 0, "m");
    (2248, 0, "e");
    (2249, 0, "_");
    (2245, 5, "game_completed");
    (2569, 0, "(");
    (2589, 0, " ");
    (2590, 0, "&");
    (2591, 0, "&");
    (2592, 0, " ");
    (2592, 1, "");
    (2591, 1, "");
    (2590, 1, "");
    (2590, 0, "|");
    (2591, 0, "|");
    (2592, 0, " ");
    (2593, 0, "g");
    (2594, 0, "a");
    (2595, 0, "m");
    (2596, 0, "e");
    (2597, 0, "_");
    (2593, 5, "game_completed");
    (2607, 0, ")");
    (2593, 14, "");
    (2592, 1, "");
    (2591, 1, "");
    (2590, 1, "");
    (2589, 1, "");
    (2570, 0, "game_completed");
    (2584, 0, " ");
    (2585, 0, "|");
    (2586, 0, "|");
    (2587, 0, " ");
    (2198, 0, "\n\t");
    (2200, 0, "/");
    (2201, 0, "/");
    (2202, 0, " ");
    (2203, 0, "S");
    (2204, 0, "a");
    (2205, 0, "d");
    (2206, 0, "l");
    (2207, 0, "y");
    (2208, 0, " ");
    (2209, 0, "w");
    (2210, 0, "e");
    (2211, 0, " ");
    (2212, 0, "c");
    (2213, 0, "a");
    (2214, 0, "n");
    (2215, 0, "'");
    (2216, 0, "t");
    (2217, 0, " ");
    (2218, 0, "u");
    (2219, 0, "s");
    (2220, 0, "e");
    (2221, 0, " ");
    (2222, 0, "i");
    (2223, 0, "n");
    (2224, 0, "t");
    (2225, 0, "e");
    (2226, 0, "r");
    (2227, 0, "n");
    (2228, 0, "a");
    (2229, 0, "l");
    (2230, 0, "_");
    (2231, 0, "s");
    (2232, 0, "t");
    (2233, 0, "a");
    (2234, 0, "t");
    (2235, 0, "e");
    (2236, 0, " ");
    (2237, 0, "h");
    (2238, 0, "e");
    (2239, 0, "r");
    (2240, 0, "e");
    (2241, 0, " ");
    (2242, 0, "b");
    (2243, 0, "e");
    (2244, 0, "c");
    (2245, 0, "a");
    (2246, 0, "u");
    (2247, 0, "s");
    (2248, 0, "e");
    (2249, 0, " ");
    (2250, 0, "i");
    (2251, 0, "t");
    (2252, 0, " ");
    (2253, 0, "g");
    (2254, 0, "e");
    (2255, 0, "n");
    (2256, 0, "e");
    (2257, 0, "r");
    (2258, 0, "a");
    (2259, 0, "t");
    (2260, 0, "e");
    (2261, 0, "s");
    (2262, 0, " ");
    (2263, 0, "a");
    (2264, 0, " ");
    (2265, 0, "c");
    (2266, 0, "y");
    (2267, 0, "c");
    (2268, 0, "l");
    (2269, 0, "i");
    (2270, 0, "g");
    (2270, 1, "");
    (2270, 0, "c");
    (2271, 0, " ");
    (2272, 0, "d");
    (2273, 0, "e");
    (2274, 0, "p");
    (2275, 0, "e");
    (2276, 0, "n");
    (2277, 0, "d");
    (2278, 0, "a");
    (2279, 0, "n");
    (2280, 0, "c");
    (2281, 0, "y");
    (2282, 0, ".");
    (3770, 0, "i");
    (3677, 0, "i");
    (3585, 0, "i");
    (3492, 0, "i");
    (3774, 0, "n");
    (3680, 0, "n");
    (3587, 0, "n");
    (3493, 0, "n");
    (3778, 0, "t");
    (3683, 0, "t");
    (3589, 0, "t");
    (3494, 0, "t");
    (3782, 0, "e");
    (3686, 0, "e");
    (3591, 0, "e");
    (3495, 0, "e");
    (3786, 0, "r");
    (3689, 0, "r");
    (3593, 0, "r");
    (3496, 0, "r");
    (3790, 0, "n");
    (3692, 0, "n");
    (3595, 0, "n");
    (3497, 0, "n");
    (3794, 0, "a");
    (3695, 0, "a");
    (3597, 0, "a");
    (3498, 0, "a");
    (3798, 0, "l");
    (3698, 0, "l");
    (3599, 0, "l");
    (3499, 0, "l");
    (3802, 0, "_");
    (3701, 0, "_");
    (3601, 0, "_");
    (3500, 0, "_");
    (3816, 6, "g");
    (3817, 0, "a");
    (3818, 0, "m");
    (3819, 0, "e");
    (3820, 0, "_");
    (3821, 0, "c");
    (3822, 0, "o");
    (3823, 0, "m");
    (3824, 0, "p");
    (3825, 0, "l");
    (3826, 0, "e");
    (3827, 0, "t");
    (3828, 0, "e");
    (3829, 0, "d");
    (3879, 6, "R");
    (3880, 0, "e");
    (3881, 0, "s");
    (3882, 0, "e");
    (3883, 0, "t");
    (3868, 7, "w");
    (3869, 0, "a");
    (3870, 0, "i");
    (3871, 0, "t");
    (3872, 0, "i");
    (3873, 0, "n");
    (3874, 0, "g");
    (3816, 5, "");
    (353, 0, "\n");
    (353, 0, "$");
    (354, 0, ":");
    (355, 0, " ");
    (356, 0, "{");
    (357, 0, "\n\t");
    (359, 0, "\n\t");
    (358, 1, "");
    (359, 1, "}");
    (358, 0, "\t");
    (359, 0, "i");
    (360, 0, "f");
    (361, 0, " ");
    (362, 0, "(");
    (363, 0, "s");
    (364, 0, "t");
    (365, 0, "a");
    (366, 0, "t");
    (367, 0, "e");
    (368, 0, " ");
    (369, 0, "!");
    (370, 0, "=");
    (371, 0, "=");
    (372, 0, " ");
    (373, 0, "'");
    (374, 0, "p");
    (375, 0, "l");
    (376, 0, "a");
    (377, 0, "y");
    (378, 0, "i");
    (379, 0, "n");
    (380, 0, "g");
    (381, 0, "'");
    (382, 0, ")");
    (383, 0, " ");
    (384, 0, "g");
    (385, 0, "a");
    (386, 0, "m");
    (387, 0, "e");
    (388, 0, "_");
    (384, 5, "game_completed");
    (398, 0, " ");
    (399, 0, "=");
    (400, 0, " ");
    (401, 0, "f");
    (402, 0, "a");
    (403, 0, "l");
    (404, 0, "s");
    (405, 0, "e");
    (5599, 0, "\n\t");
    (5601, 0, "t");
    (5602, 0, "r");
    (5603, 0, "a");
    (5604, 0, "n");
    (5605, 0, "s");
    (5606, 0, "i");
    (5607, 0, "t");
    (5608, 0, "i");
    (5609, 0, "o");
    (5610, 0, "n");
    (5611, 0, ":");
    (5612, 0, " ");
    (5613, 0, "w");
    (5614, 0, "i");
    (5615, 0, "d");
    (5616, 0, "t");
    (5617, 0, "h");
    (5618, 0, " ");
    (5619, 0, "1");
    (5620, 0, "s");
    (5621, 0, " ");
    (5621, 1, "");
    (5621, 0, " ");
    (5622, 0, "l");
    (5623, 0, "i");
    (5624, 0, "n");
    (5625, 0, "e");
    (5626, 0, "a");
    (5627, 0, "r");
    (5628, 0, ";");
    (5619, 1, "");
    (5619, 0, "0");
    (5620, 0, ".");
    (5621, 0, "2");
    (5621, 1, "");
    (5620, 1, "");
    (5619, 1, "");
    (5619, 0, "1");
    (5629, 0, " */");
    (5601, 0, "/* ");
    (2693, 3, "1");
    (2694, 0, "0");
    (2695, 0, "0");
    (2696, 0, "0");
    (357, 0, "\n\t");
    (358, 1, "");
    (357, 1, "");
    (384, 0, "[");
    (385, 0, "\n\t\t");
    (385, 3, "");
    (384, 1, "");
    (384, 0, "\n\t");
    (384, 0, "{");
    (387, 0, "\t");
    (410, 0, "\n\t\t");
    (411, 2, "\t}");
    (385, 0, "\n\t\t");
    (388, 0, "c");
    (389, 0, "o");
    (390, 0, "n");
    (391, 0, "s");
    (392, 0, "o");
    (393, 0, "l");
    (394, 0, "e");
    (388, 7, "console");
    (395, 0, ".");
    (396, 0, "l");
    (397, 0, "o");
    (398, 0, "g");
    (396, 3, "log");
    (399, 0, "(");
    (400, 0, "'");
    (401, 0, "x");
    (402, 0, "x");
    (403, 0, "x");
    (404, 0, "'");
    (405, 0, ")");
    (2836, 0, "\n\t\t");
    (2839, 0, "s");
    (2840, 0, "t");
    (2841, 0, "a");
    (2842, 0, "t");
    (2843, 0, "e");
    (2844, 0, "_");
    (2845, 0, "l");
    (2846, 0, "a");
    (2847, 0, "b");
    (2848, 0, "e");
    (2849, 0, "l");
    (2850, 0, "=");
    (2851, 0, " ");
    (2851, 1, "");
    (2850, 1, "");
    (2839, 11, "");
    (2220, 0, " ");
    (2221, 0, "=");
    (2222, 0, " ");
    (2223, 0, "'");
    (2224, 0, "W");
    (2225, 0, "a");
    (2226, 0, "i");
    (2227, 0, "t");
    (2228, 0, "i");
    (2229, 0, "n");
    (2230, 0, "g");
    (2231, 0, " ");
    (2232, 0, "f");
    (2233, 0, "o");
    (2234, 0, "r");
    (2235, 0, " ");
    (2236, 0, "h");
    (2237, 0, "o");
    (2238, 0, "s");
    (2239, 0, "t");
    (2240, 0, " ");
    (2241, 0, "t");
    (2242, 0, "o");
    (2243, 0, " ");
    (2244, 0, "s");
    (2245, 0, "t");
    (2246, 0, "a");
    (2247, 0, "r");
    (2248, 0, "t");
    (2236, 13, "g");
    (2237, 0, "a");
    (2238, 0, "m");
    (2239, 0, "e");
    (2240, 0, " ");
    (2241, 0, "o");
    (2242, 0, " ");
    (2242, 1, "");
    (2241, 1, "");
    (2241, 0, "t");
    (2242, 0, "o");
    (2243, 0, " ");
    (2244, 0, "s");
    (2245, 0, "t");
    (2246, 0, "a");
    (2247, 0, "r");
    (2248, 0, "t");
    (2249, 0, "'");
    (2250, 29, "");
    (2840, 0, "s");
    (2841, 0, "t");
    (2842, 0, "a");
    (2843, 0, "t");
    (2844, 0, "e");
    (2845, 0, "_");
    (2840, 6, "state_label");
    (2851, 0, " ");
    (2852, 0, "=");
    (2853, 0, " ");
    (2854, 0, "'Waiting for game to start'");
    (2220, 0, "/");
    (2221, 0, "/");
    (2220, 2, "");
    (2192, 1, "");
    (2191, 1, "");
    (2191, 0, "0");
    (2880, 0, "\n\t\t");
    (2883, 0, "w");
    (2884, 0, "i");
    (2885, 0, "d");
    (2886, 0, "t");
    (2887, 0, "h");
    (2888, 0, " ");
    (2889, 0, "=");
    (2890, 0, " ");
    (2891, 0, "0");
    (2729, 6, "");
    (2729, 0, "\n\t");
    (2731, 0, "\n\t");
    (2835, 56, "");
    (2729, 0, " ");
    (2730, 0, "e");
    (2731, 0, "l");
    (2732, 0, "s");
    (2733, 0, "e");
    (2734, 0, " ");
    (2735, 0, "{");
    (2736, 0, "\n\t\t");
    (2739, 0, "\t\tstate_label = 'Waiting for game to start'\n\t\twidth = 0\n");
    (2737, 4, "\t\t");
    (2793, 0, "\t}");
    (2793, 2, "");
    (2737, 2, "\t\t\t\t");
    (2739, 56, "");
    (2736, 3, "");
    (2734, 2, "");
    (2729, 5, "");
    (2835, 0, "\t\tstate_label = 'Waiting for game to start'\n\t\twidth = 0\n");
    (2731, 2, "");
    (2729, 2, "");
    (2729, 0, " else ");
    (2836, 0, "\n\t\t");
    (2837, 2, "\t}");
    (2839, 0, "\n\t");
    (2841, 0, "\n\t");
    (2840, 1, "");
    (2842, 0, "i");
    (2843, 0, "f");
    (2844, 0, " ");
    (2845, 0, "(");
    (2840, 0, "}");
    (2841, 0, "\n");
    (2842, 0, "\n");
    (2843, 0, "$");
    (2844, 0, ":");
    (2845, 0, " ");
    (2846, 0, "{");
    (2853, 0, "i");
    (2854, 0, "n");
    (2855, 0, "t");
    (2856, 0, "e");
    (2857, 0, "r");
    (2858, 0, "n");
    (2853, 6, "internal_state");
    (2867, 0, " ");
    (2868, 0, "!");
    (2869, 0, "=");
    (2870, 0, " ");
    (2871, 0, "'");
    (2872, 0, "p");
    (2872, 1, "");
    (2871, 1, "");
    (2870, 1, "");
    (2870, 0, "=");
    (2871, 0, " ");
    (2872, 0, "'");
    (2873, 0, "p");
    (2874, 0, "l");
    (2875, 0, "a");
    (2876, 0, "y");
    (2877, 0, "i");
    (2878, 0, "n");
    (2879, 0, "g");
    (2880, 0, "'");
    (2881, 0, ")");
    (2882, 0, " ");
    (2883, 0, "{");
    (2219, 30, "");
    (2838, 1, "");
    (2838, 0, "=");
    (2843, 7, "w");
    (2844, 0, "a");
    (2845, 0, "i");
    (2846, 0, "t");
    (2847, 0, "i");
    (2848, 0, "n");
    (2849, 0, "g");
    (0, 6003, "");
    ( 0,
      0,
      "<script>\n\
       export let room\n\
       export let connection\n\
       export let state\n\
       export let start_time\n\
       export let topic\n\
       export let meditate\n\
       export let players\n\
       export let rounds\n\
       export let seconds_per_bead\n\
       export let _active_sessions\n\n\
       let game_completed = false // Derived from other properties\n\
       let internal_state\n\
       $: internal_state = game_completed ? 'completed' : state\n\
       $: {\n\
       \tif (state !== 'playing') {\n\
       \t\tconsole.log('xxx')\n\
       \t\tgame_completed = false\n\
       \t}\n\
       }\n\n\
       \t// export let state\n\n\
       const ARCHETOPICS = [\n\
      \  'Truth', 'Human', 'Energy', 'Beauty', 'Beginning', 'End', 'Birth', \
       'Death',\n\
      \  'Ego', 'Attention', 'Art', 'Empathy', 'Eutopia', 'Future', 'Game', \
       'Gift',\n\
      \  'History', 'Cosmos', 'Time', 'Life', 'Addiction', 'Paradox', \
       'Shadow', 'Society'\n\
       ]\n\n\
       // Could make configurable. Eh.\n\
       const MEDITATION_SECONDS = 60\n\n\
       let game_stages\n\
       $: {\n\
       \tgame_stages = []\n\
       \tif (meditate) game_stages.push({\n\
       \t\tlabel: 'Meditate',\n\
       \t\tduration: MEDITATION_SECONDS,\n\
       \t})\n\
       \tfor (let r = 0; r < rounds; r++) {\n\
       \t\tfor (let p = 0; p < players; p++) {\n\
       \t\t\tgame_stages.push({\n\
       \t\t\t\tlabel: `Round ${r+1} player ${p+1}`,\n\
       \t\t\t\tduration: seconds_per_bead,\n\
       \t\t\t})\n\
       \t\t}\n\
       \t}\n\
       }\n\n\n\
       const update_state = async patch => {\n\
       \tawait fetch(`${room}/configure`, {\n\
       \t\tmethod: 'POST',\n\
       \t\tmode: 'same-origin',\n\
       \t\theaders: {\n\
       \t\t\t'content-type': 'application/json',\n\
       \t\t},\n\
       \t\tbody: JSON.stringify(patch)\n\
       \t})\n\
       }\n\n\
       const upd = (k, v) => () => update_state({[k]: v})\n\n\
       const config = k => e => {\n\
       \tconsole.log('k', k, e.data, e.value, e.target.value, e.target.type)\n\
       \tconst raw_value = e.target.value\n\
       \tconst value = e.target.type === 'number' ? raw_value|0\n\
       \t\t: e.target.type === 'checkbox' ? e.target.checked\n\
       \t\t: raw_value\n\
       \tupdate_state({[k]: value})\n\
       }\n\n\
       const roundish = x => Math.round(x * 100) / 100\n\n\
       // const start = () => {\n\
       // \tconsole.log('start!')\n\
       // \tupdate_state({state: 'playing'})\n\
       // }\n\n\
       // let round_arr\n\
       // $: round_arr = new Array(Math.max(rounds, 0)).fill()\n\n\n\
       const get_current_state = (offset_ms) => {\n\
       \tfor (let s = 0; s < game_stages.length; s++) {\n\
       \t\tlet state = game_stages[s]\n\
       \t\tif (state.duration * 1000 > offset_ms) {\n\
       \t\t\treturn {state, offset_ms}\n\
       \t\t}\n\
       \t\toffset_ms -= state.duration * 1000\n\
       \t}\n\
       \treturn {\n\
       \t\tstate: { label: 'Game complete', complete: true }, offset_ms\n\
       \t}\n\
       }\n\n\
       let width = 0\n\n\
       let timer\n\
       let state_label\n\n\
       $: {\n\
       \tconsole.log(state, timer)\n\
       \t// Sadly we can't use internal_state here because it generates a \
       cyclic dependancy.\n\
       \tif (state === 'playing' && timer == null && !game_completed) {\n\
       \t\ttimer = setInterval(() => {\n\
       \t\t\tconsole.log('tick')\n\n\
       \t\t\tlet {state, offset_ms} = get_current_state(Date.now() - start_time)\n\
       \t\t\tstate_label = state.label\n\
       \t\t\t\n\
       \t\t\twidth = state.complete ? 100\n\
       \t\t\t: 100 * offset_ms / (state.duration * 1000)\n\n\
       \t\t\tif (state.complete) game_completed = true\n\n\
       \t\t}, 1000)\n\
       \t} else if ((game_completed || state !== 'playing') && timer != null) {\n\
       \t\tclearInterval(timer)\n\
       \t\ttimer = null\n\
       \t}\n\
       }\n\n\
       $: {\n\
       \tif (internal_state === 'waiting') {\n\
       \t\tstate_label = 'Waiting for game to start'\n\
       \t\twidth = 0\n\
       \t}\n\
       }\n\n\
       $: {\n\
       \tconsole.log('internal state', internal_state)\n\
       }\n\n\
       // setInterval(() => width++, 1000)\n\
       </script>\n\n\
       <main>\n\
       \t<h1>Glass Bead Game Timer</h1>\n\
       \t<h4>Room: <em>{room}</em></h4>\n\
       \t<h4>Topic: <em>{topic}</em></h4>\n\
       \t<div>{connection} / {state}</div>\n\
       \t<div>{_active_sessions} player(s) in room</div>\n\n\
       \t<h4>{state_label}</h4>\n\
       \t<div id='progresscontainer'>\n\
       \t\t<div id='progress' style='width: {width}%'></div>\n\
       \t</div>\n\n\
       \t<div id='rounds'>\n\
       \t\t<h2>Game structure</h2>\n\
       \t\t{#if meditate}\n\
       \t\t\t<div>Meditation (1 min)</div>\n\
       \t\t{/if}\n\
       \t\t{#each Array(Math.max(rounds, 0)) as _, r}\n\
       \t\t\t<div>Round {r+1}:\n\
       \t\t\t\t{#each Array(Math.max(players, 0)) as _, p}\n\
       \t\t\t\t\t<span>{p+1} </span>\n\
       \t\t\t\t{/each}\n\
       \t\t\t</div>\n\
       \t\t{/each}\n\
       \t</div>\n\n\
       \t<div id='config'>\n\
       \t\t<h2>Config</h2>\n\
       \t\t{#if internal_state == 'waiting'}\n\
       \t\t\t<button on:click={upd('state', 'playing')}>Start</button>\n\
       \t\t{:else if internal_state == 'playing'}\n\
       \t\t\t<button on:click={upd('state', 'paused')}>Pause</button>\n\
       \t\t{:else if internal_state == 'paused'}\n\
       \t\t\t<button on:click={upd('state', 'playing')}>Resume</button>\n\
       \t\t{:else if internal_state == 'completed'}\n\
       \t\t\t<button on:click={upd('state', 'waiting')}>Reset</button>\n\
       \t\t{/if}\n\n\
       \t\t<label>Topic\n\
       \t\t\t<input type='text' value={topic} on:input={config('topic')} \
       list='archetopics' >\n\
       \t\t\t<datalist id='archetopics'>\n\
       \t\t\t\t{#each ARCHETOPICS as topic}\n\
       \t\t\t\t\t<option value={topic}>\n\
       \t\t\t\t{/each}\n\
       \t\t\t</datalist>\n\
       \t\t</label>\n\n\
       \t\t<label>1 minute meditation before game starts\n\
       \t\t\t<input type='checkbox' checked={meditate} \
       on:input={config('meditate')} >\n\
       \t\t\t<!-- <input type='range' value={players} \
       on:submit={config('players')} min=1 max=12> -->\n\
       \t\t</label>\n\n\
       \t\t<label>Number of players\n\
       \t\t\t<input type='number' value={players} on:input={config('players')} \
       min=1 max=12 >\n\
       \t\t\t<!-- <input type='range' value={players} \
       on:submit={config('players')} min=1 max=12> -->\n\
       \t\t</label>\n\n\
       \t\t<label>Number of rounds\n\
       \t\t\t<input type='number' value={rounds} on:input={config('rounds')} \
       min=1 max=20>\n\
       \t\t\t<!-- <input type='range' value={players} \
       on:submit={config('players')} min=1 max=12> -->\n\
       \t\t</label>\n\n\
       \t\t<label>Seconds per bead\n\
       \t\t\t<input type='number' value={seconds_per_bead} \
       on:input={config('seconds_per_bead')}>\n\
       \t\t\t<!-- <input type='range' value={players} \
       on:submit={config('players')} min=1 max=12> -->\n\
       \t\t</label>\n\n\
       \t\t<div>\n\
       \t\t\t(Total game length: {roundish(\n\
       \t\t\t\t(rounds * players * seconds_per_bead + (meditate ? \
       MEDITATION_SECONDS : 0)) / 60\n\
       \t\t\t)} minutes)\n\
       \t\t</div>\n\
       \t\t<div>\n\
       \t\t\t(Total game length: {roundish(\n\
       \t\t\t\tgame_stages.reduce((x, s) => x + s.duration, 0) / 60\n\
       \t\t\t)} minutes)\n\
       \t\t</div>\n\
       \t</div>\n\
       </main>\n\n\
       <style>\n\n\
       #config {\n\
       \tmargin-top: 2em;\n\
       }\n\n\
       label {\n\
       \tdisplay: block;\n\
       }\n\n\
       #progresscontainer {\n\
       \t/* width: calc(100% - 50px); */\n\
       \tmargin: 25px;\n\
       \theight: 5em;\n\
       \tborder: 2px solid white;\n\
       }\n\n\
       #progress {\n\
       \tbackground-color: white;\n\
       \t/* width: 50%; */\n\
       \theight: 100%;\n\
       \t/* transition: width 1s linear; */\n\
       }\n\
       \t/* main {\n\
       \t\ttext-align: center;\n\
       \t\tpadding: 1em;\n\
       \t\tmax-width: 240px;\n\
       \t\tmargin: 0 auto;\n\
       \t}\n\n\
       \th1 {\n\
       \t\tcolor: #ff3e00;\n\
       \t\ttext-transform: uppercase;\n\
       \t\tfont-size: 4em;\n\
       \t\tfont-weight: 100;\n\
       \t}\n\n\
       \t@media (min-width: 640px) {\n\
       \t\tmain {\n\
       \t\t\tmax-width: none;\n\
       \t\t}\n\
       \t} */\n\
       </style>" );
    (0, 0, "\n");
    (0, 1, "");
    (9, 0, "\n");
    (9, 0, "e");
    (10, 0, "x");
    (11, 0, "p");
    (12, 0, "o");
    (13, 0, "r");
    (14, 0, "t");
    (15, 0, " ");
    (16, 0, "l");
    (17, 0, "e");
    (18, 0, "t");
    (19, 0, " ");
    (20, 0, "r");
    (21, 0, "e");
    (22, 0, "a");
    (23, 0, "d");
    (24, 0, "y");
    (9, 16, "");
    (8, 1, "");
    (3025, 0, "\n\t");
    (3027, 0, "{");
    (3028, 0, "#");
    (3029, 0, "i");
    (3030, 0, "f");
    (3031, 0, " ");
    (3032, 0, "i");
    (3033, 0, "n");
    (3034, 0, "t");
    (3035, 0, "e");
    (3036, 0, "r");
    (3037, 0, "n");
    (3032, 6, "internal_state");
    (3046, 0, " ");
    (3047, 0, "=");
    (3048, 0, "=");
    (3049, 0, "=");
    (3050, 0, " ");
    (3051, 0, "'");
    (3052, 0, "l");
    (3053, 0, "o");
    (3054, 0, "a");
    (3055, 0, "d");
    (3056, 0, "i");
    (3057, 0, "n");
    (3058, 0, "g");
    (3059, 0, "'");
    (3060, 0, "}");
    (3061, 0, "\n\t");
    (3063, 0, "\n\t");
    (3062, 1, "");
    (3064, 0, "{");
    (3065, 0, ":");
    (3066, 0, "e");
    (3067, 0, "l");
    (3068, 0, "s");
    (3069, 0, "e");
    (3070, 0, " ");
    (3071, 0, "}");
    (3071, 1, "");
    (3070, 1, "");
    (3070, 0, "}");
    (5480, 1, "\t\t");
    (5471, 2, "\t\t\t");
    (5456, 3, "\t\t\t\t");
    (5399, 4, "\t\t\t\t\t");
    (5365, 3, "\t\t\t\t");
    (5357, 2, "\t\t\t");
    (5348, 2, "\t\t\t");
    (5333, 3, "\t\t\t\t");
    (5248, 4, "\t\t\t\t\t");
    (5214, 3, "\t\t\t\t");
    (5206, 2, "\t\t\t");
    (5194, 2, "\t\t\t");
    (5102, 3, "\t\t\t\t");
    (5014, 3, "\t\t\t\t");
    (4988, 2, "\t\t\t");
    (4976, 2, "\t\t\t");
    (4884, 3, "\t\t\t\t");
    (4803, 3, "\t\t\t\t");
    (4777, 2, "\t\t\t");
    (4765, 2, "\t\t\t");
    (4673, 3, "\t\t\t\t");
    (4589, 3, "\t\t\t\t");
    (4562, 2, "\t\t\t");
    (4550, 2, "\t\t\t");
    (4458, 3, "\t\t\t\t");
    (4381, 3, "\t\t\t\t");
    (4333, 2, "\t\t\t");
    (4321, 2, "\t\t\t");
    (4306, 3, "\t\t\t\t");
    (4294, 4, "\t\t\t\t\t");
    (4266, 5, "\t\t\t\t\t\t");
    (4233, 4, "\t\t\t\t\t");
    (4202, 3, "\t\t\t\t");
    (4118, 3, "\t\t\t\t");
    (4103, 2, "\t\t\t");
    (4094, 2, "\t\t\t");
    (4033, 3, "\t\t\t\t");
    (3990, 2, "\t\t\t");
    (3928, 3, "\t\t\t\t");
    (3888, 2, "\t\t\t");
    (3828, 3, "\t\t\t\t");
    (3787, 2, "\t\t\t");
    (3726, 3, "\t\t\t\t");
    (3690, 2, "\t\t\t");
    (3672, 2, "\t\t\t");
    (3653, 1, "\t\t");
    (3644, 1, "\t\t");
    (3634, 2, "\t\t\t");
    (3624, 3, "\t\t\t\t");
    (3612, 4, "\t\t\t\t\t");
    (3587, 5, "\t\t\t\t\t\t");
    (3539, 4, "\t\t\t\t\t");
    (3518, 3, "\t\t\t\t");
    (3473, 2, "\t\t\t");
    (3465, 2, "\t\t\t");
    (3432, 3, "\t\t\t\t");
    (3415, 2, "\t\t\t");
    (3389, 2, "\t\t\t");
    (3370, 1, "\t\t");
    (3361, 1, "\t\t");
    (3309, 2, "\t\t\t");
    (3279, 1, "\t\t");
    (3255, 1, "\t\t");
    (3205, 1, "\t\t");
    (3170, 1, "\t\t");
    (3136, 1, "\t\t");
    (3104, 1, "\t\t");
    (3072, 1, "\t\t");
    (5555, 0, "\n\t\t");
    (5558, 0, "{");
    (5559, 0, "/");
    (5560, 0, "i");
    (5561, 0, "f");
    (5562, 0, "}");
    (5556, 2, "\t");
    (3062, 0, "\t");
    (3063, 0, "\t");
    (3064, 0, "<");
    (3065, 0, "h");
    (3066, 0, "1");
    (3067, 0, ">");
    (3068, 0, "L");
    (3069, 0, "o");
    (3070, 0, "a");
    (3071, 0, "d");
    (3072, 0, "i");
    (3073, 0, "n");
    (3074, 0, "g");
    (3075, 0, " ");
    (3076, 0, "i");
    (3077, 0, "n");
    (3078, 0, "t");
    (3076, 3, "g");
    (3077, 0, "a");
    (3078, 0, "m");
    (3079, 0, "e");
    (3080, 0, " ");
    (3081, 0, "s");
    (3082, 0, "t");
    (3083, 0, "a");
    (3084, 0, "t");
    (3085, 0, "e");
    (3086, 0, " ");
    (3087, 0, "f");
    (3088, 0, "r");
    (3089, 0, "o");
    (3090, 0, "m");
    (3091, 0, " ");
    (3092, 0, "s");
    (3093, 0, "e");
    (3094, 0, "r");
    (3095, 0, "v");
    (3096, 0, "e");
    (3097, 0, "r");
    (3098, 0, "<");
    (3099, 0, "/");
    (3100, 0, "h");
    (3101, 0, "1");
    (3102, 0, ">");
    (3086, 12, "");
    ( 4163,
      0,
      "\n\t\t\t\t<button on:click={upd('state', 'waiting')}>Reset</button>" );
    (4093, 62, "");
    (4101, 0, "\n\t\t\t{:else if internal_state == 'completed'}");
    (4093, 3, "\t\t\t\t");
    (4049, 44, "");
    (4049, 4, "\t\t\t");
    (4063, 4, "");
    (4063, 1, "");
    (4095, 0, " ");
    (4066, 0, "internal_state == 'completed' ");
    (4096, 0, "|");
    (4097, 0, "|");
    (4098, 0, " ");
    (4085, 9, "p");
    (4086, 0, "a");
    (4087, 0, "u");
    (4088, 0, "s");
    (4089, 0, "e");
    (4090, 0, "d");
    (4180, 0, " ");
    (4181, 0, "g");
    (4182, 0, "a");
    (4183, 0, "m");
    (4184, 0, "e");
    (4194, 0, "\n\t\t\t\t");
    (4199, 0, "{");
    (4200, 0, "/");
    (4201, 0, "i");
    (4202, 0, "f");
    (4203, 0, "}");
    (4195, 4, "\t\t\t");
    (4057, 0, "\n\t\t\t");
    (4066, 1, "");
    (4058, 3, "");
    (4063, 0, "#");
    (5231, 88, "");
    (5009, 88, "");
    (4794, 88, "");
    (4575, 88, "");
    (4963, 4, "");
    (4829, 4, "");
    (4702, 4, "");
    (4571, 4, "");
    (4950, 1, "");
    (4820, 1, "");
    (4697, 1, "");
    (4570, 1, "");
    (4947, 0, "\n");
    (4818, 0, "\n");
    (4696, 0, "\n");
    (4570, 0, "\n");
    (4951, 0, "\t\t\t\t");
    (4821, 0, "\t\t\t\t");
    (4698, 0, "\t\t\t\t");
    (4571, 0, "\t\t\t\t");
    ( 4967,
      0,
      "<!-- <input type='range' value={players} on:submit={config('players')} \
       min=1 max=12> -->" );
    ( 4833,
      0,
      "<!-- <input type='range' value={players} on:submit={config('players')} \
       min=1 max=12> -->" );
    ( 4706,
      0,
      "<!-- <input type='range' value={players} on:submit={config('players')} \
       min=1 max=12> -->" );
    ( 4575,
      0,
      "<!-- <input type='range' value={players} on:submit={config('players')} \
       min=1 max=12> -->" );
    (5231, 88, "");
    (5009, 88, "");
    (4794, 88, "");
    (4575, 88, "");
    (4963, 4, "");
    (4829, 4, "");
    (4702, 4, "");
    (4571, 4, "");
    (4950, 1, "");
    (4820, 1, "");
    (4697, 1, "");
    (4570, 1, "");
    (2401, 0, "\n\t\t");
    (2404, 0, "l");
    (2405, 0, "e");
    (2406, 0, "t");
    (2407, 0, " ");
    (2408, 0, "l");
    (2409, 0, "a");
    (2410, 0, "s");
    (2411, 0, "t");
    (2412, 0, "_");
    (2413, 0, "a");
    (2414, 0, "t");
    (2415, 0, "e");
    (2415, 1, "");
    (2414, 1, "");
    (2413, 1, "");
    (2413, 0, "s");
    (2414, 0, "t");
    (2415, 0, "a");
    (2416, 0, "t");
    (2417, 0, "e");
    (2418, 0, " ");
    (2419, 0, "=");
    (2420, 0, " ");
    (2421, 0, "n");
    (2422, 0, "u");
    (2423, 0, "l");
    (2424, 0, "l");
    (2425, 0, "\n\t\t");
    (2711, 0, "\n\t\t\t");
    (2426, 2, "");
    (2713, 0, "\n\t\t\t");
    (2710, 3, "");
    (2714, 0, "i");
    (2715, 0, "f");
    (2716, 0, " ");
    (2717, 0, "(");
    (2718, 0, "l");
    (2719, 0, "a");
    (2720, 0, "s");
    (2721, 0, "t");
    (2722, 0, "_");
    (2718, 5, "last_state");
    (2728, 0, " ");
    (2729, 0, "&");
    (2730, 0, "&");
    (2731, 0, " ");
    (2732, 0, "l");
    (2733, 0, "a");
    (2734, 0, "s");
    (2735, 0, "t");
    (2736, 0, "_");
    (2737, 0, "s");
    (2738, 0, "t");
    (2732, 7, "last_state");
    (2742, 0, " ");
    (2743, 0, "!");
    (2744, 0, "=");
    (2745, 0, " ");
    (2745, 1, "");
    (2744, 1, "");
    (2743, 1, "");
    (2743, 0, "!");
    (2744, 0, "=");
    (2745, 0, "=");
    (2746, 0, " ");
    (2747, 0, "s");
    (2748, 0, "t");
    (2749, 0, "a");
    (2750, 0, "t");
    (2751, 0, "e");
    (2752, 0, ")");
    (2753, 0, " ");
    (2754, 0, "{");
    (2755, 0, "\n\t\t\t\t");
    (2760, 0, "\n\t\t\t\t");
    (2756, 4, "");
    (2757, 4, "\t\t\t}");
    (2756, 0, "\t\t\t\t");
    (2760, 0, "c");
    (2761, 0, "o");
    (2762, 0, "n");
    (2763, 0, "s");
    (2764, 0, "o");
    (2765, 0, "l");
    (2766, 0, "e");
    (2760, 7, "console");
    (2767, 0, ".");
    (2768, 0, "l");
    (2769, 0, "o");
    (2770, 0, "g");
    (2768, 3, "log");
    (2771, 0, "(");
    (2772, 0, "'");
    (2773, 0, "s");
    (2774, 0, "t");
    (2775, 0, "a");
    (2776, 0, "t");
    (2777, 0, "e");
    (2778, 0, " ");
    (2779, 0, "c");
    (2780, 0, "h");
    (2781, 0, "a");
    (2782, 0, "n");
    (2783, 0, "g");
    (2784, 0, "e");
    (2785, 0, "d");
    (2786, 0, "'");
    (2787, 0, ")");
    (2788, 0, "\n\t\t\t\t");
    (2793, 0, "l");
    (2794, 0, "a");
    (2795, 0, "s");
    (2796, 0, "t");
    (2797, 0, "_");
    (2793, 5, "last_state");
    (2803, 0, " ");
    (2804, 0, "=");
    (2805, 0, " ");
    (2806, 0, "s");
    (2807, 0, "t");
    (2808, 0, "a");
    (2809, 0, "t");
    (2810, 0, "e");
    (2806, 5, "state");
    (2688, 0, "{");
    (2689, 0, "\n\t\t\t\t");
    (2715, 0, "\n\t\t\t\t");
    (2716, 4, "\t\t\t}");
    (2689, 0, "\n\t\t\t\t");
    (2694, 0, "/");
    (2695, 0, "/");
    (2696, 0, " ");
    (2697, 0, "A");
    (2698, 0, "n");
    (2699, 0, "d");
    (2700, 0, " ");
    (2701, 0, "p");
    (2702, 0, "l");
    (2703, 0, "a");
    (2704, 0, "y");
    (2705, 0, " ");
    (2706, 0, "g");
    (2707, 0, "o");
    (2708, 0, "n");
    (2709, 0, "g");
    (2750, 14, "");
    (2743, 92, "");
    (2664, 0, "\n\t\t\t");
    (2668, 0, "\n\t\t\t");
    (2665, 3, "");
    (2666, 3, "");
    ( 2665,
      0,
      "\t\t\tif (last_state !== state) {\n\
       \t\t\t\tconsole.log('state changed')\n\
       \t\t\t\tlast_state = state\n\
       \t\t\t}\n" );
    (2756, 1, "");
    (3176, 0, "\n\t");
    ( 3178,
      0,
      "\n\
       <audio id=\"audiotag1\" src=\"audio/flute_c_long_01.wav\" \
       preload=\"auto\"></audio>" );
    (3177, 1, "");
    (3178, 0, "\t");
    (3176, 1, "");
    (3255, 0, "\n\t");
    (3256, 1, "");
    (3205, 25, "h");
    (3206, 0, "i");
    (3207, 0, "_");
    (3207, 1, "");
    (3207, 0, "-");
    (3208, 0, "m");
    (3209, 0, "e");
    (3210, 0, "t");
    (3211, 0, "a");
    (3212, 0, "l");
    (3213, 0, "-");
    (3214, 0, "t");
    (3215, 0, "o");
    (3216, 0, "n");
    (3217, 0, "e");
    (3218, 0, ".");
    (3219, 0, "m");
    (3220, 0, "p");
    (3221, 0, "3");
    (3178, 0, "<track kind=\"captions\">");
    (3201, 0, "\n\t\t");
    (3273, 0, "\n\t\t");
    (3276, 0, "<");
    (3277, 0, "/");
    (3278, 0, "t");
    (3279, 0, "r");
    (3280, 0, "a");
    (3281, 0, "c");
    (3282, 0, "k");
    (3274, 9, "\t</track>");
    (3274, 9, "");
    (3273, 1, "");
    (3178, 23, "");
    (3177, 1, "");
    (3176, 1, "");
    (3240, 0, "<track kind=\"captions\">");
    (3177, 2, "\t");
    (3189, 9, "a");
    (3190, 0, "u");
    (3191, 0, "d");
    (3192, 0, "i");
    (3193, 0, "o");
    (3194, 0, "1");
    (3196, 0, " ");
    (3197, 0, "b");
    (3198, 0, "i");
    (3199, 0, "n");
    (3200, 0, "d");
    (3201, 0, ":");
    (3202, 0, "t");
    (3203, 0, "h");
    (3204, 0, "i");
    (3205, 0, "s");
    (3206, 0, "=");
    (3185, 11, "");
    (3184, 1, "");
    (3195, 0, "{");
    (3196, 0, "a");
    (3197, 0, "u");
    (3198, 0, "d");
    (3199, 0, "i");
    (3200, 0, "o");
    (3201, 0, "1");
    (3202, 0, "}");
    (437, 0, "\n");
    (437, 0, "\n");
    (438, 0, "l");
    (439, 0, "e");
    (440, 0, "t");
    (441, 0, " ");
    (442, 0, "a");
    (443, 0, "u");
    (444, 0, "d");
    (445, 0, "i");
    (446, 0, "o");
    (447, 0, "1");
    (2413, 0, "\n\t\t");
    (2416, 0, "a");
    (2417, 0, "u");
    (2418, 0, "d");
    (2416, 3, "audio1");
    (2422, 0, ".");
    (2423, 0, "p");
    (2424, 0, "l");
    (2425, 0, "a");
    (2426, 0, "y");
    (2427, 0, "(");
    (2428, 0, ")");
    (3237, 0, ".");
    (3238, 0, ".");
    (3239, 0, "/");
    ( 3305,
      0,
      "\n\
       \t<audio bind:this={audio1} src=\"../hi-metal-tone.mp3\" \
       preload=\"auto\"><track kind=\"captions\"></audio>" );
    (3238, 1, "");
    (3237, 1, "");
    (3336, 1, "");
    (3336, 1, "");
    (3238, 2, "l");
    (3239, 0, "o");
    (3328, 1, "");
    (3328, 0, "2");
    (438, 0, "let audio1\n");
    (458, 1, "");
    (458, 0, "2");
    (5505, 0, " -->");
    (5353, 0, "<!-- ");
    (846, 0, "{");
    (847, 0, "\n\t\t");
    (850, 0, "\n\t");
    (851, 1, "\t}");
    (941, 0, "\n\t\tlabel: 'Meditate',\n\t\tduration: MEDITATION_SECONDS,");
    (941, 0, "\n\tif (meditate) game_stages.push({");
    (910, 2, "\t");
    (889, 2, "\t");
    (855, 34, "");
    (905, 0, "\n\t}]");
    (875, 1, "\t\t");
    (855, 1, "\t\t");
    (851, 4, "");
    (903, 0, "\n\t\t");
    (848, 3, "");
    (901, 2, "");
    (900, 1, "");
    (857, 10, "");
    (857, 0, "m");
    (858, 0, "e");
    (859, 0, "d");
    (860, 0, "i");
    (861, 0, "t");
    (862, 0, "a");
    (863, 0, "t");
    (864, 0, "e");
    (865, 0, " ");
    (866, 0, "?");
    (867, 0, " ");
    (868, 0, "'");
    (869, 0, "M");
    (870, 0, "e");
    (871, 0, "d");
    (872, 0, "i");
    (873, 0, "t");
    (874, 0, "a");
    (875, 0, "t");
    (876, 0, "i");
    (877, 0, "o");
    (878, 0, "n");
    (879, 0, "'");
    (880, 0, " ");
    (881, 0, ":");
    (882, 0, " ");
    (883, 0, "'");
    (884, 0, "G");
    (885, 0, "a");
    (886, 0, "m");
    (887, 0, "e");
    (888, 0, "'");
    (857, 0, "`");
    (858, 0, "$");
    (859, 0, "{");
    (892, 0, "}");
    (893, 0, " ");
    (894, 0, "w");
    (895, 0, "i");
    (896, 0, "l");
    (897, 0, "l");
    (898, 0, " ");
    (899, 0, "s");
    (900, 0, "t");
    (901, 0, "a");
    (902, 0, "r");
    (903, 0, "t");
    (904, 0, " ");
    (894, 11, "i");
    (895, 0, "s");
    (896, 0, " ");
    (897, 0, "a");
    (898, 0, "b");
    (899, 0, "o");
    (900, 0, "u");
    (901, 0, "t");
    (902, 0, " ");
    (903, 0, "t");
    (904, 0, "o");
    (905, 0, " ");
    (906, 0, "s");
    (907, 0, "t");
    (908, 0, "a");
    (909, 0, "r");
    (910, 0, "t");
    (911, 0, "`");
    (926, 18, "3");
    (1499, 0, "// ");
    (1805, 168, "");
    (4016, 3, "d");
    (4017, 0, "e");
    (4018, 0, "t");
    (4019, 0, "a");
    (4020, 0, "i");
    (4021, 0, "l");
    (4022, 0, "s");
    (4036, 0, "\n\t\t\t");
    (5575, 3, "d");
    (4037, 3, "");
    (5573, 0, "e");
    (5574, 0, "t");
    (5575, 0, "a");
    (5576, 0, "i");
    (5577, 0, "l");
    (5578, 0, "s");
    (4036, 0, "\n\t\t\t");
    (4040, 0, "<");
    (4041, 0, "s");
    (4042, 0, "u");
    (4043, 0, "m");
    (4044, 0, "m");
    (4045, 0, "a");
    (4046, 0, "r");
    (4047, 0, "y");
    (4048, 0, ">");
    (4049, 0, "C");
    (4050, 0, "o");
    (4051, 0, "n");
    (4052, 0, "f");
    (4053, 0, "i");
    (4054, 0, "g");
    (4055, 0, "u");
    (4056, 0, "r");
    (4057, 0, "a");
    (4058, 0, "t");
    (4059, 0, "i");
    (4060, 0, "o");
    (4061, 0, "n");
    (4067, 15, "");
    (4066, 1, "");
    (4065, 1, "");
    (4064, 1, "");
    (4063, 1, "");
    (4062, 1, "");
    (4062, 0, "\n\t\t\t\t");
    (4063, 4, "");
    (4049, 0, "G");
    (4050, 0, "a");
    (4051, 0, "m");
    (4052, 0, "e");
    (4053, 0, " ");
    (4067, 0, "<");
    (4068, 0, "/");
    (4069, 0, "s");
    (4070, 0, "u");
    (4071, 0, "m");
    (4072, 0, "m");
    (4068, 5, "/summary>");
    (4077, 0, ">");
    (4077, 1, "");
    (4054, 13, "S");
    (4055, 0, "e");
    (4056, 0, "t");
    (4057, 0, "t");
    (4058, 0, "i");
    (4059, 0, "n");
    (4060, 0, "g");
    (4061, 0, "s");
    (4054, 1, "");
    (4054, 0, "s");
    (3160, 1, "");
    (3155, 0, "round_");
    (2352, 1, "");
    (2347, 0, "round_");
    (447, 1, "");
    (442, 0, "round_");
    (3274, 1, "");
    (3269, 0, "end_");
    (463, 1, "");
    (458, 0, "end_");
    (2432, 0, "// ");
    (2432, 3, "");
    (2353, 20, "");
    (2352, 1, "");
    (2780, 0, "\n\t\t\t\t");
    (2785, 0, "c");
    (2786, 0, "o");
    (2787, 0, "m");
    (2788, 0, "p");
    (2789, 0, "l");
    (2790, 0, "e");
    (2785, 6, "");
    (2785, 0, "e");
    (2786, 0, "n");
    (2787, 0, "d");
    (2788, 0, "_");
    (2789, 0, "a");
    (2790, 0, "u");
    (2785, 6, "end_audio");
    (2794, 0, ".");
    (2795, 0, "p");
    (2796, 0, "l");
    (2797, 0, "a");
    (2798, 0, "y");
    (2799, 0, "(");
    (2800, 0, ")");
    (3273, 2, "");
    (3272, 0, "complet");
    (2786, 2, "");
    (2785, 0, "complet");
    (459, 2, "");
    (458, 0, "complet");
    (2707, 0, "\n\t\t\t\t");
    (2712, 0, "r");
    (2713, 0, "o");
    (2714, 0, "u");
    (2715, 0, "n");
    (2716, 0, "d");
    (2712, 5, "round_audio");
    (2723, 0, ".");
    (2724, 0, "p");
    (2725, 0, "l");
    (2726, 0, "a");
    (2727, 0, "y");
    (2728, 0, "(");
    (2729, 0, ")");
    (2712, 0, "i");
    (2713, 0, "f");
    (2714, 0, " ");
    (2715, 0, "(");
    (2716, 0, "!");
    (2717, 0, "s");
    (2718, 0, "t");
    (2719, 0, "a");
    (2720, 0, "t");
    (2721, 0, "e");
    (2722, 0, ".");
    (2723, 0, "c");
    (2724, 0, "o");
    (2725, 0, "m");
    (2726, 0, "p");
    (2727, 0, "l");
    (2728, 0, "e");
    (2729, 0, "t");
    (2730, 0, "e");
    (2731, 0, ")");
    (2732, 0, " ");
    (2712, 0, "// ");
    (2357, 0, "\n\t\t");
    (2360, 0, "get_current_state(Date.now() - start_time)");
    (2357, 0, "\n\t\t");
    (2360, 0, "/");
    (2361, 0, "/");
    (2362, 0, " ");
    (2363, 0, "T");
    (2364, 0, "h");
    (2365, 0, "e");
    (2366, 0, " ");
    (2367, 0, "g");
    (2368, 0, "a");
    (2369, 0, "m");
    (2370, 0, "e");
    (2371, 0, " ");
    (2372, 0, "m");
    (2373, 0, "i");
    (2363, 11, "W");
    (2364, 0, "e");
    (2365, 0, " ");
    (2366, 0, "m");
    (2367, 0, "i");
    (2368, 0, "g");
    (2369, 0, "t");
    (2370, 0, "h");
    (2370, 1, "");
    (2369, 1, "");
    (2368, 1, "");
    (2368, 0, "h");
    (2369, 0, "t");
    (2370, 0, " ");
    (2370, 1, "");
    (2369, 1, "");
    (2368, 1, "");
    (2368, 0, "g");
    (2369, 0, "h");
    (2370, 0, "t");
    (2371, 0, " ");
    (2372, 0, "h");
    (2373, 0, "a");
    (2374, 0, "v");
    (2375, 0, "e");
    (2376, 0, " ");
    (2377, 0, "l");
    (2378, 0, "o");
    (2379, 0, "a");
    (2380, 0, "d");
    (2381, 0, "e");
    (2382, 0, "d");
    (2383, 0, " ");
    (2384, 0, "w");
    (2385, 0, "h");
    (2386, 0, "e");
    (2387, 0, "n");
    (2388, 0, " ");
    (2389, 0, "t");
    (2390, 0, "h");
    (2391, 0, "e");
    (2392, 0, " ");
    (2393, 0, "g");
    (2394, 0, "a");
    (2395, 0, "m");
    (2396, 0, "e");
    (2397, 0, " ");
    (2398, 0, "i");
    (2399, 0, "s");
    (2400, 0, " ");
    (2401, 0, "a");
    (2402, 0, "l");
    (2403, 0, "r");
    (2404, 0, "e");
    (2405, 0, "a");
    (2406, 0, "d");
    (2407, 0, "y");
    (2408, 0, " ");
    (2409, 0, "f");
    (2410, 0, "i");
    (2411, 0, "n");
    (2412, 0, "i");
    (2413, 0, "s");
    (2414, 0, "h");
    (2415, 0, "e");
    (2416, 0, "d");
    (2417, 0, ".");
    (2418, 0, " ");
    (2419, 0, "I");
    (2420, 0, "f");
    (2420, 1, "");
    (2419, 1, "");
    (2419, 0, "T");
    (2420, 0, "h");
    (2421, 0, "i");
    (2422, 0, "s");
    (2423, 0, " ");
    (2424, 0, "i");
    (2425, 0, "s");
    (2426, 0, " ");
    (2427, 0, "d");
    (2428, 0, "i");
    (2429, 0, "r");
    (2430, 0, "t");
    (2431, 0, "y");
    (2432, 0, ",");
    (2433, 0, " ");
    (2434, 0, "b");
    (2435, 0, "u");
    (2436, 0, "t");
    (2437, 0, " ");
    (2426, 12, " ");
    (2427, 0, "k");
    (2428, 0, "i");
    (2429, 0, "n");
    (2430, 0, "d");
    (2431, 0, "a");
    (2432, 0, " ");
    (2433, 0, "c");
    (2434, 0, "i");
    (2434, 1, "");
    (2433, 1, "");
    (2433, 0, "d");
    (2434, 0, "i");
    (2435, 0, "r");
    (2436, 0, "t");
    (2437, 0, "y");
    (2438, 0, ".");
    (2439, 0, ".");
    (2440, 0, ".");
    (2441, 0, "\n\t\t");
    (2444, 0, "\n\t\t");
    (2442, 2, "");
    (2444, 1, "");
    (2443, 1, "");
    (2442, 1, "");
    (2441, 1, "");
    (2486, 0, "\n\t\t");
    (2489, 0, "\n\t\t");
    (2487, 2, "");
    (2488, 2, "");
    (2444, 0, "l");
    (2445, 0, "e");
    (2446, 0, "t");
    (2447, 0, " ");
    (2448, 0, "{");
    (2449, 0, "s");
    (2450, 0, "t");
    (2451, 0, "a");
    (2452, 0, "t");
    (2453, 0, "e");
    (2454, 0, " ");
    (2455, 0, "}");
    (2456, 0, " ");
    (2456, 1, "");
    (2455, 1, "");
    (2454, 1, "");
    (2454, 0, "}");
    (2455, 0, " ");
    (2444, 12, "");
    (2444, 0, "i");
    (2445, 0, "f");
    (2446, 0, " ");
    (2447, 0, "(");
    (2490, 0, ".");
    (2491, 0, "s");
    (2492, 0, "t");
    (2493, 0, "a");
    (2494, 0, "t");
    (2495, 0, "e");
    (2491, 5, "state");
    (2496, 0, ".");
    (2497, 0, "c");
    (2498, 0, "o");
    (2499, 0, "m");
    (2500, 0, "p");
    (2501, 0, "l");
    (2502, 0, "e");
    (2503, 0, "t");
    (2504, 0, "e");
    (2505, 0, ")");
    (2506, 0, " ");
    (2507, 0, "{");
    (2508, 0, "\n\t\t\t");
    (2512, 0, "\n\t\t\t");
    (2509, 3, "");
    (2510, 3, "\t\t}");
    (2509, 0, "\t\t\t");
    (2512, 0, "g");
    (2513, 0, "a");
    (2514, 0, "m");
    (2515, 0, "e");
    (2516, 0, "_");
    (2512, 5, "game_completed");
    (2526, 0, " ");
    (2527, 0, "=");
    (2528, 0, " ");
    (2529, 0, "t");
    (2530, 0, "r");
    (2531, 0, "u");
    (2532, 0, "e");
    (2440, 1, "");
    (2439, 1, "");
    (2438, 1, "");
    (2438, 0, ",");
    (2439, 0, " ");
    (2440, 0, "b");
    (2441, 0, "u");
    (2442, 0, "t");
    (2443, 0, " ");
    (6426, 8, "</style>");
    (2444, 0, "I");
    (2445, 0, "'");
    (2446, 0, "m");
    (2447, 0, " ");
    (2448, 0, "s");
    (2449, 0, "p");
    (2450, 0, "e");
    (2451, 0, "c");
    (2452, 0, "i");
    (2453, 0, "a");
    (2454, 0, "l");
    (2455, 0, " ");
    (2456, 0, "c");
    (2457, 0, "a");
    (2458, 0, "s");
    (2459, 0, "i");
    (2460, 0, "n");
    (2461, 0, "g");
    (2462, 0, " ");
    (2463, 0, "i");
    (2464, 0, "t");
    (2465, 0, " ");
    (2466, 0, "t");
    (2467, 0, "o");
    (2468, 0, " ");
    (2469, 0, "a");
    (2470, 0, "v");
    (2471, 0, "o");
    (2472, 0, "i");
    (2473, 0, "d");
    (2474, 0, " ");
    (2475, 0, "a");
    (2476, 0, "u");
    (2477, 0, "d");
    (2478, 0, "i");
    (2479, 0, "o");
    (2480, 0, " ");
    (2481, 0, "p");
    (2482, 0, "l");
    (2483, 0, "a");
    (2484, 0, "y");
    (2485, 0, "i");
    (2486, 0, "n");
    (2487, 0, "g");
    (2488, 0, ".");
    (6471, 8, "</style>");
    (6471, 8, "</style>");
    (2432, 1, "");
    (2432, 0, "\n\t\t");
    (2435, 0, "/");
    (2436, 0, "/");
    (2437, 0, " ");
    (2590, 0, " ");
    (2591, 0, "e");
    (2592, 0, "l");
    (2593, 0, "s");
    (2594, 0, "e");
    (2595, 0, " ");
    (2596, 0, "{");
    (3108, 2, "\t\t\t");
    (3101, 3, "\t\t\t\t");
    (3075, 4, "\t\t\t\t\t");
    (3049, 4, "\t\t\t\t\t");
    (3028, 4, "\t\t\t\t\t");
    (3003, 3, "\t\t\t\t");
    (2997, 3, "\t\t\t\t");
    (2950, 4, "\t\t\t\t\t");
    (2927, 4, "\t\t\t\t\t");
    (2894, 4, "\t\t\t\t\t");
    (2863, 3, "\t\t\t\t");
    (2815, 3, "\t\t\t\t");
    (2783, 3, "\t\t\t\t");
    (2779, 3, "\t\t\t\t");
    (2750, 3, "\t\t\t\t");
    (2679, 3, "\t\t\t\t");
    (2655, 3, "\t\t\t\t");
    (2625, 2, "\t\t\t");
    (2600, 2, "\t\t\t");
    (3137, 0, "\n\t\t\t");
    (3138, 3, "\t\t}");
    (2598, 1, "");
    (2597, 1, "");
    (2586, 0, "\n\t\t\t");
    (2590, 0, "s");
    (2591, 0, "t");
    (2592, 0, "a");
    (2593, 0, "t");
    (2594, 0, "e");
    (2595, 0, "_");
    (2590, 6, "state_label");
    (2601, 0, " ");
    (2602, 0, "=");
    (2603, 0, " ");
    (2604, 0, "'");
    (2605, 0, "G");
    (2606, 0, "a");
    (2607, 0, "m");
    (2608, 0, "e");
    (2609, 0, " ");
    (2610, 0, "a");
    (2611, 0, "l");
    (2612, 0, "r");
    (2613, 0, "e");
    (2614, 0, "a");
    (2615, 0, "d");
    (2616, 0, "y");
    (2617, 0, " ");
    (2618, 0, "f");
    (2619, 0, "i");
    (2620, 0, "n");
    (2621, 0, "i");
    (2622, 0, "s");
    (2623, 0, "h");
    (2624, 0, "e");
    (2625, 0, "d");
    (2618, 8, "f");
    (2619, 0, "i");
    (2620, 0, "n");
    (2621, 0, "i");
    (2622, 0, "s");
    (2623, 0, "h");
    (2624, 0, "e");
    (2625, 0, "d");
    (2626, 0, ".");
    (2627, 0, " ");
    (2627, 1, "");
    (2626, 1, "");
    (2626, 0, "'");
    (2134, 0, "\n");
    (2135, 0, "\n");
    (2136, 0, "\n");
    (2136, 0, "let {state, offset_ms}");
    (2158, 0, "\n");
    (2134, 1, "");
    (2139, 1, "");
    (2155, 1, "");
    (2139, 0, "g");
    (2140, 0, "a");
    (2141, 0, "m");
    (2142, 0, "e");
    (2143, 0, "_");
    (2031, 0, "game_");
    (1994, 0, "game_");
    (1946, 0, "game_");
    (1917, 0, "game_");
    (2088, 0, "g");
    (2089, 0, "a");
    (2090, 0, "m");
    (2091, 0, "e");
    (2092, 0, "_");
    ( 3348,
      0,
      "\n\n\
       $: {\n\
       \tconsole.log(state, timer)\n\
       \t// Sadly we can't use internal_state here because it generates a \
       cyclic dependancy.\n\
       \tif (state === 'playing' && timer == null && !game_completed) {\n\
       \t\t// We might have loaded when the game is already finished. This is \
       kinda\n\
       \t\t// dirty, but I'm special casing it to avoid audio playing.\n\
       \t\tif (get_current_state(Date.now() - start_time).state.complete) {\n\
       \t\t\tgame_completed = true\n\
       \t\t\tstate_label = 'Game already finished'\n\
       \t\t} else {\n\
       \t\t\tlet last_state = null\n\n\
       \t\t\ttimer = setInterval(() => {\n\
       \t\t\t\tconsole.log('tick')\n\n\
       \t\t\t\tlet {state, offset_ms} = get_current_state(Date.now() - \
       start_time)\n\
       \t\t\t\tstate_label = state.label\n\
       \t\t\t\t\n\
       \t\t\t\twidth = state.complete ? 100\n\
       \t\t\t\t: 100 * offset_ms / (state.duration * 1000)\n\n\
       \t\t\t\tif (last_state !== state) {\n\
       \t\t\t\t\tconsole.log('state changed')\n\
       \t\t\t\t\tlast_state = state\n\
       \t\t\t\t\t// if (!state.complete) round_audio.play()\n\
       \t\t\t\t}\n\n\
       \t\t\t\tif (state.complete) {\n\
       \t\t\t\t\t// And play gong\n\
       \t\t\t\t\tgame_completed = true\n\
       \t\t\t\t\tcomplete_audio.play()\n\
       \t\t\t\t}\n\n\n\
       \t\t\t}, 1000)\n\
       \t\t}\n\
       \t} else if ((game_completed || state !== 'playing') && timer != null) {\n\
       \t\tclearInterval(timer)\n\
       \t\ttimer = null\n\
       \t}\n\
       }" );
    (3347, 0, "// ");
    (3344, 0, "// ");
    (3329, 0, "// ");
    (3306, 0, "// ");
    (3234, 0, "// ");
    (3230, 0, "// ");
    (3218, 0, "// ");
    (3210, 0, "// ");
    (3183, 0, "// ");
    (3156, 0, "// ");
    (3134, 0, "// ");
    (3108, 0, "// ");
    (3101, 0, "// ");
    (3053, 0, "// ");
    (3029, 0, "// ");
    (2995, 0, "// ");
    (2963, 0, "// ");
    (2914, 0, "// ");
    (2881, 0, "// ");
    (2846, 0, "// ");
    (2774, 0, "// ");
    (2749, 0, "// ");
    (2718, 0, "// ");
    (2692, 0, "// ");
    (2681, 0, "// ");
    (2640, 0, "// ");
    (2615, 0, "// ");
    (2548, 0, "// ");
    (2486, 0, "// ");
    (2411, 0, "// ");
    (2347, 0, "// ");
    (2262, 0, "// ");
    (2235, 0, "// ");
    (2230, 0, "// ");
    (3446, 3, "");
    (3440, 3, "");
    (3422, 3, "");
    (3396, 3, "");
    (3321, 3, "");
    (3314, 3, "");
    (3299, 3, "");
    (3288, 3, "");
    (3258, 3, "");
    (3228, 3, "");
    (3203, 3, "");
    (3174, 3, "");
    (3164, 3, "");
    (3113, 3, "");
    (3086, 3, "");
    (3049, 3, "");
    (3014, 3, "");
    (2962, 3, "");
    (2926, 3, "");
    (2888, 3, "");
    (2813, 3, "");
    (2785, 3, "");
    (2751, 3, "");
    (2722, 3, "");
    (2708, 3, "");
    (2664, 3, "");
    (2636, 3, "");
    (2566, 3, "");
    (2501, 3, "");
    (2423, 3, "");
    (2356, 3, "");
    (2268, 3, "");
    (2238, 3, "");
    (2230, 3, "");
    (4467, 0, "// ");
    (4464, 0, "// ");
    (4449, 0, "// ");
    (4426, 0, "// ");
    (4354, 0, "// ");
    (4350, 0, "// ");
    (4338, 0, "// ");
    (4330, 0, "// ");
    (4303, 0, "// ");
    (4276, 0, "// ");
    (4254, 0, "// ");
    (4228, 0, "// ");
    (4221, 0, "// ");
    (4173, 0, "// ");
    (4149, 0, "// ");
    (4115, 0, "// ");
    (4083, 0, "// ");
    (4034, 0, "// ");
    (4001, 0, "// ");
    (3966, 0, "// ");
    (3894, 0, "// ");
    (3869, 0, "// ");
    (3838, 0, "// ");
    (3812, 0, "// ");
    (3801, 0, "// ");
    (3760, 0, "// ");
    (3735, 0, "// ");
    (3668, 0, "// ");
    (3606, 0, "// ");
    (3531, 0, "// ");
    (3467, 0, "// ");
    (3382, 0, "// ");
    (3355, 0, "// ");
    (3350, 0, "// ");
    (2615, 66, "");
    (2213, 0, "// ");
    (2186, 0, "\n");
    (2187, 0, "$");
    (2188, 0, ":");
    (2189, 0, " ");
    (2190, 0, "g");
    (2191, 0, "a");
    (2192, 0, "m");
    (2193, 0, "e");
    (2194, 0, "_");
    (2195, 0, "c");
    (2196, 0, "o");
    (2197, 0, "m");
    (2190, 8, "game_completed");
    (2204, 0, " ");
    (2205, 0, "=");
    (2206, 0, " ");
    (2207, 0, "g");
    (2208, 0, "a");
    (2209, 0, "m");
    (2210, 0, "e");
    (2211, 0, "_");
    (2212, 0, "s");
    (2213, 0, "t");
    (2214, 0, "a");
    (2215, 0, "t");
    (2216, 0, "e");
    (2217, 0, " ");
    (2218, 0, "=");
    (2219, 0, "=");
    (2220, 0, " ");
    (2221, 0, "n");
    (2222, 0, "u");
    (2223, 0, "l");
    (2224, 0, "l");
    (2225, 0, " ");
    (2226, 0, "?");
    (2227, 0, " ");
    (2228, 0, "f");
    (2229, 0, "a");
    (2230, 0, "l");
    (2231, 0, "s");
    (2232, 0, "e");
    (2233, 0, " ");
    (2234, 0, ":");
    (2235, 0, " ");
    (2236, 0, "g");
    (2237, 0, "a");
    (2238, 0, "m");
    (2239, 0, "e");
    (2240, 0, "_");
    (2241, 0, "s");
    (2242, 0, "t");
    (2243, 0, "a");
    (2244, 0, "t");
    (2245, 0, "e");
    (2236, 10, "game_state");
    (2246, 0, ".");
    (2247, 0, "c");
    (2248, 0, "o");
    (2249, 0, "m");
    (2250, 0, "p");
    (2251, 0, "l");
    (2252, 0, "e");
    (2253, 0, "t");
    (2254, 0, "e");
    (2236, 0, "!");
    (2237, 0, "!");
    (2272, 0, "\n");
    (2273, 0, "#");
    (2274, 0, ":");
    (2275, 0, " ");
    (2275, 1, "");
    (2274, 1, "");
    (2273, 1, "");
    (2273, 0, "$");
    (2274, 0, ":");
    (2275, 0, " ");
    (2276, 0, "w");
    (2277, 0, "i");
    (2278, 0, "d");
    (2279, 0, "t");
    (2280, 0, "h");
    (2281, 0, " ");
    (2282, 0, "=");
    (2283, 0, " ");
    ( 2284,
      0,
      "state.complete ? 100\n\
       \t\t\t\t: 100 * offset_ms / (state.duration * 1000)" );
    ( 2273,
      79,
      "$: width = state.complete ? 100 : 100 * offset_ms / (state.duration * \
       1000)" );
    (2257, 1, "");
    (2187, 0, "\n");
    (2965, 81, "");
    (2360, 3, "");
    (2375, 0, "\n");
    (2376, 0, "#");
    (2377, 0, ":");
    (2378, 0, " ");
    (2378, 1, "");
    (2377, 1, "");
    (2376, 1, "");
    (2376, 0, "$");
    (2377, 0, ":");
    (2378, 0, " ");
    (2379, 0, "s");
    (2380, 0, "t");
    (2381, 0, "a");
    (2382, 0, "t");
    (2383, 0, "e");
    (2384, 0, "_");
    (2385, 0, "l");
    (2379, 7, "state_label");
    (2390, 0, " ");
    (2391, 0, "=");
    (2392, 0, " ");
    (2393, 0, "g");
    (2394, 0, "a");
    (2395, 0, "m");
    (2396, 0, "e");
    (2397, 0, "_");
    (2398, 0, "s");
    (2399, 0, "t");
    (2400, 0, "a");
    (2401, 0, "t");
    (2402, 0, "e");
    (2403, 0, " ");
    (2404, 0, "=");
    (2405, 0, "=");
    (2406, 0, " ");
    (2407, 0, "n");
    (2408, 0, "u");
    (2409, 0, "l");
    (2410, 0, "l");
    (2411, 0, " ");
    (2412, 0, "?");
    (2413, 0, " ");
    (2414, 0, "'");
    (2415, 0, "u");
    (2416, 0, "n");
    (2417, 0, "k");
    (2418, 0, "n");
    (2419, 0, "o");
    (2420, 0, "w");
    (2421, 0, "n");
    (2422, 0, "o");
    (2422, 1, "");
    (2422, 0, "'");
    (2423, 0, " ");
    (2424, 0, ":");
    (2425, 0, " ");
    (2426, 0, "g");
    (2427, 0, "a");
    (2428, 0, "m");
    (2429, 0, "e");
    (2430, 0, "_");
    (2431, 0, "s");
    (2432, 0, "t");
    (2433, 0, "a");
    (2434, 0, "t");
    (2435, 0, "e");
    (2426, 10, "game_state");
    (2436, 0, ".");
    (2437, 0, "l");
    (2438, 0, "a");
    (2439, 0, "b");
    (2440, 0, "e");
    (2441, 0, "l");
    (2998, 0, "// ");
    (3031, 1, "");
    (3230, 0, "// ");
    (2864, 0, "\n\t\t\t");
    (2868, 0, "\n\t\t\t");
    (2865, 3, "");
    (2869, 0, "c");
    (2870, 0, "o");
    (2871, 0, "n");
    (2872, 0, "s");
    (2873, 0, "t");
    (2874, 0, " ");
    (2762, 67, "");
    (2762, 10, "");
    (2761, 1, "");
    (2797, 0, "t");
    (2798, 0, "i");
    (2799, 0, "c");
    (2800, 0, " ");
    (2800, 1, "");
    (2800, 0, "k");
    (2801, 0, " ");
    (2802, 0, "=");
    (2803, 0, " ");
    (2804, 0, "(");
    (2805, 0, ")");
    (2806, 0, " ");
    (2807, 0, "=");
    (2808, 0, ">");
    (2809, 0, " ");
    (2810, 0, "{");
    (2811, 0, "\n\t\t\t\t");
    (2816, 0, "\n\t\t\t\t");
    (2812, 4, "");
    (2813, 4, "\t\t\t}");
    (2850, 390, "");
    ( 2812,
      0,
      "\t\t\t\tconsole.log('tick')\n\n\
       \t\t\t\tlet {state, offset_ms} = get_current_state(Date.now() - \
       start_time)\n\
       \t\t\t\t// state_label = state.label\n\
       \t\t\t\t\n\
       \t\t\t\tif (last_state !== state) {\n\
       \t\t\t\t\tconsole.log('state changed')\n\
       \t\t\t\t\tlast_state = state\n\
       \t\t\t\t\t// if (!state.complete) round_audio.play()\n\
       \t\t\t\t}\n\n\
       \t\t\t\tif (state.complete) {\n\
       \t\t\t\t\t// And play gong\n\
       \t\t\t\t\t// game_completed = true\n\
       \t\t\t\t\tcomplete_audio.play()\n\
       \t\t\t\t}" );
    (2805, 0, "n");
    (2806, 0, "o");
    (2807, 0, "_");
    (2808, 0, "s");
    (2809, 0, "o");
    (2810, 0, "u");
    (2811, 0, "n");
    (2812, 0, "d");
    (2805, 8, "a");
    (2806, 0, "u");
    (2807, 0, "d");
    (2808, 0, "i");
    (2809, 0, "o");
    (2805, 0, "p");
    (2806, 0, "l");
    (2807, 0, "a");
    (2808, 0, "y");
    (2809, 0, "_");
    (3185, 0, "i");
    (3186, 0, "f");
    (3187, 0, " ");
    (3188, 0, "(");
    (3189, 0, "p");
    (3190, 0, "l");
    (3191, 0, "a");
    (3192, 0, "y");
    (3193, 0, "_");
    (3194, 0, "a");
    (3195, 0, "u");
    (3196, 0, "d");
    (3197, 0, "i");
    (3198, 0, "o");
    (3199, 0, ")");
    (3200, 0, " ");
    (3267, 1, "");
    (3266, 1, "");
    (3265, 1, "");
    (3265, 0, "\n\t\t\t\t");
    (3270, 0, "t");
    (3271, 0, "i");
    (3272, 0, "c");
    (3273, 0, "k");
    (3270, 4, "tick");
    (3274, 0, "(");
    (3275, 0, "t");
    (3276, 0, "r");
    (3277, 0, "u");
    (3278, 0, "e");
    (3279, 0, ")");
    (3234, 0, "\n\t\t\t");
    (3238, 0, "t");
    (3239, 0, "i");
    (3240, 0, "c");
    (3241, 0, "k");
    (3238, 4, "tick");
    (3242, 0, "(");
    (3243, 0, "f");
    (3244, 0, "a");
    (3245, 0, "l");
    (3246, 0, "s");
    (3247, 0, "e");
    (3248, 0, ")");
    (3296, 3, "\t\t");
    (3281, 4, "\t\t\t");
    (3250, 3, "\t\t");
    (3235, 3, "\t\t");
    (3229, 3, "\t\t");
    (3223, 4, "\t\t\t");
    (3180, 5, "\t\t\t\t");
    (3150, 5, "\t\t\t\t");
    (3128, 5, "\t\t\t\t");
    (3102, 4, "\t\t\t");
    (3095, 4, "\t\t\t");
    (3047, 5, "\t\t\t\t");
    (3023, 5, "\t\t\t\t");
    (2989, 5, "\t\t\t\t");
    (2957, 4, "\t\t\t");
    (2952, 4, "\t\t\t");
    (2919, 4, "\t\t\t");
    (2847, 4, "\t\t\t");
    (2822, 4, "\t\t\t");
    (2788, 3, "\t\t");
    (2762, 3, "\t\t");
    (3287, 3, "");
    (3286, 1, "");
    (2852, 0, "g");
    (2853, 0, "a");
    (2854, 0, "m");
    (2855, 0, "e");
    (2856, 0, "_");
    (2978, 0, "g");
    (2979, 0, "a");
    (2980, 0, "m");
    (2981, 0, "e");
    (2982, 0, "_");
    (3042, 0, "g");
    (3043, 0, "a");
    (3044, 0, "m");
    (3045, 0, "e");
    (3046, 0, "_");
    (3113, 0, "g");
    (3114, 0, "a");
    (3115, 0, "m");
    (3116, 0, "e");
    (3117, 0, "_");
    (2852, 0, "game_state");
    (2862, 0, ":");
    (2863, 0, " ");
    (2864, 0, "n");
    (2865, 0, "e");
    (2866, 0, "w");
    (2867, 0, "_");
    (2967, 0, "\n\t\t\t");
    (2971, 0, "g");
    (2972, 0, "a");
    (2973, 0, "m");
    (2974, 0, "e");
    (2975, 0, "_");
    (2976, 0, "s");
    (2977, 0, "t");
    (2978, 0, "a");
    (2979, 0, "t");
    (2980, 0, "e");
    (2981, 0, " ");
    (2982, 0, "=");
    (2983, 0, " ");
    (2984, 0, "n");
    (2985, 0, "e");
    (2986, 0, "w");
    (2987, 0, "_");
    (2988, 0, "g");
    (2989, 0, "a");
    (2990, 0, "m");
    (2984, 7, "new_game_state");
    (2968, 30, "");
    (2967, 1, "");
    (3068, 0, "\n\t\t\t\t");
    (3073, 0, "\t\t\tgame_state = new_game_state");
    (3069, 7, "\t\t\t\t");
    (2100, 42, "");
    (2100, 0, "c");
    (2101, 0, "o");
    (2102, 0, "m");
    (2103, 0, "p");
    (2104, 0, "l");
    (2105, 0, "e");
    (2106, 0, "t");
    (2107, 0, "e");
    (2108, 0, "_");
    (2109, 0, "s");
    (2110, 0, "t");
    (2111, 0, "a");
    (2112, 0, "t");
    (2113, 0, "e");
    (1819, 0, "\n");
    (1820, 0, "c");
    (1821, 0, "o");
    (1822, 0, "n");
    (1823, 0, "s");
    (1824, 0, "t");
    (1825, 0, " ");
    (1826, 0, "{ label: 'Game complete', complete: true }");
    (1826, 0, "c");
    (1827, 0, "o");
    (1828, 0, "m");
    (1829, 0, "p");
    (1830, 0, "l");
    (1831, 0, "e");
    (1832, 0, "t");
    (1833, 0, "e");
    (1834, 0, "_");
    (1835, 0, "s");
    (1836, 0, "t");
    (1837, 0, "a");
    (1838, 0, "t");
    (1839, 0, "e");
    (1840, 0, " ");
    (1841, 0, "=");
    (1842, 0, " ");
    (2880, 0, "\n\t\t\t");
    (2884, 0, "c");
    (2885, 0, "o");
    (2886, 0, "n");
    (2887, 0, "s");
    (2888, 0, "o");
    (2889, 0, "l");
    (2890, 0, "e");
    (2884, 7, "console");
    (2891, 0, ".");
    (2892, 0, "l");
    (2893, 0, "o");
    (2894, 0, "g");
    (2892, 3, "log");
    (2895, 0, "(");
    (2896, 0, "'");
    (2897, 0, "s");
    (2898, 0, "t");
    (2899, 0, "a");
    (2900, 0, "t");
    (2901, 0, "e");
    (2902, 0, "'");
    (2903, 0, ",");
    (2904, 0, " ");
    (2905, 0, "s");
    (2906, 0, "t");
    (2907, 0, "a");
    (2908, 0, "t");
    (2909, 0, "e");
    (2905, 5, "state");
    (2910, 0, ",");
    (2911, 0, " ");
    (2912, 0, "'");
    (2913, 0, "t");
    (2914, 0, "i");
    (2915, 0, "m");
    (2913, 3, "");
    (2912, 1, "");
    (2912, 0, "c");
    (2913, 0, "o");
    (2914, 0, "m");
    (2915, 0, "p");
    (2916, 0, "l");
    (2917, 0, "e");
    (2918, 0, "t");
    (2919, 0, "e");
    (2920, 0, "d");
    (2921, 0, "'");
    (2912, 0, "'");
    (2923, 0, ",");
    (2924, 0, " ");
    (2925, 0, "g");
    (2926, 0, "a");
    (2927, 0, "m");
    (2928, 0, "e");
    (2929, 0, "_");
    (2930, 0, "c");
    (2931, 0, "o");
    (2932, 0, "m");
    (2933, 0, "p");
    (2925, 9, "game_completed");
    (2939, 0, ")");
    (3336, 0, "// ");
    (386, 21, "");
    (2863, 0, "// ");
    (2577, 0, "\n\t");
    ( 2579,
      0,
      "game_completed = game_state == null ? false : !!game_state.complete" );
    (2579, 0, "l");
    (2580, 0, "e");
    (2581, 0, "t");
    (2582, 0, " ");
    (2583, 14, "c");
    (2584, 0, "o");
    (2585, 0, "m");
    (2586, 0, "p");
    (2587, 0, "l");
    (2588, 0, "e");
    (2589, 0, "t");
    (2590, 0, "e");
    (2591, 0, "d");
    (2645, 0, "\n\t");
    (3521, 14, "c");
    (3362, 14, "c");
    (2977, 14, "c");
    (2694, 14, "c");
    (2646, 1, "");
    (3482, 0, "o");
    (3336, 0, "o");
    (2964, 0, "o");
    (2694, 0, "o");
    (3486, 0, "m");
    (3339, 0, "m");
    (2966, 0, "m");
    (2695, 0, "m");
    (3490, 0, "p");
    (3342, 0, "p");
    (2968, 0, "p");
    (2696, 0, "p");
    (3494, 0, "l");
    (3345, 0, "l");
    (2970, 0, "l");
    (2697, 0, "l");
    (3498, 0, "e");
    (3348, 0, "e");
    (2972, 0, "e");
    (2698, 0, "e");
    (3502, 0, "t");
    (3351, 0, "t");
    (2974, 0, "t");
    (2699, 0, "t");
    (3506, 0, "e");
    (3354, 0, "e");
    (2976, 0, "e");
    (2700, 0, "e");
    (3510, 0, "d");
    (3357, 0, "d");
    (2978, 0, "d");
    (2701, 0, "d");
    (2927, 3, "");
    (3599, 1221, "");
    (3598, 1, "");
    (2646, 0, "\n\t");
    (2648, 0, "c");
    (2649, 0, "o");
    (2650, 0, "n");
    (2648, 3, "console");
    (2648, 7, "");
    (2647, 1, "");
    (2646, 1, "");
    (2479, 0, "'");
    (2480, 0, "x");
    (2481, 0, "x");
    (2482, 0, "'");
    (2483, 0, ",");
    (2484, 0, " ");
    (2497, 0, ",");
    (2498, 0, " ");
    (2500, 85, "");
    ( 2466,
      0,
      "\t// Sadly we can't use internal_state here because it generates a \
       cyclic dependancy.\n" );
    (2585, 68, "");
    ( 2551,
      0,
      "\tlet completed = game_state == null ? false : !!game_state.complete\n"
    );
    (2652, 0, "c");
    (2653, 0, "o");
    (2654, 0, "m");
    (2655, 0, "p");
    (2656, 0, "l");
    (2657, 0, "e");
    (2658, 0, "t");
    (2659, 0, "e");
    (2660, 0, "d");
    (3253, 0, "\n\t\t\t\t");
    (3258, 0, "c");
    (3259, 0, "o");
    (3260, 0, "m");
    (3261, 0, "p");
    (3262, 0, "l");
    (3263, 0, "e");
    (3264, 0, "t");
    (3265, 0, "e");
    (3266, 0, "d");
    (3267, 0, " ");
    (3268, 0, "=");
    (3269, 0, " ");
    (3270, 0, "g");
    (3271, 0, "a");
    (3272, 0, "m");
    (3273, 0, "e");
    (3274, 0, "_");
    (3270, 5, "n");
    (3271, 0, "e");
    (3272, 0, "w");
    (3273, 0, "_");
    (3274, 0, "g");
    (3275, 0, "a");
    (3276, 0, "m");
    (3277, 0, "e");
    (3278, 0, "_");
    (3279, 0, "s");
    (3280, 0, "t");
    (3281, 0, "a");
    (3282, 0, "t");
    (3283, 0, "e");
    (3270, 14, "new_game_state");
    (3284, 0, ".");
    (3285, 0, "c");
    (3286, 0, "o");
    (3287, 0, "m");
    (3288, 0, "p");
    (3289, 0, "l");
    (3290, 0, "e");
    (3291, 0, "t");
    (3292, 0, "e");
    (3612, 0, "\n\t\t");
    (3615, 0, "c");
    (3616, 0, "o");
    (3617, 0, "n");
    (3618, 0, "o");
    (3618, 1, "");
    (3618, 0, "s");
    (3619, 0, "o");
    (3620, 0, "l");
    (3621, 0, "e");
    (3615, 7, "console");
    (3622, 0, ".");
    (3623, 0, "l");
    (3624, 0, "o");
    (3625, 0, "g");
    (3623, 3, "log");
    (3626, 0, "(");
    (3627, 0, "'");
    (3628, 0, "c");
    (3629, 0, "a");
    (3630, 0, "n");
    (3631, 0, "c");
    (3632, 0, "e");
    (3633, 0, "l");
    (3634, 0, "l");
    (3635, 0, "e");
    (3636, 0, "d");
    (3637, 0, " ");
    (3638, 0, "i");
    (3639, 0, "n");
    (3640, 0, "t");
    (3641, 0, "e");
    (3642, 0, "r");
    (3643, 0, "v");
    (3644, 0, "a");
    (3645, 0, "l");
    (3646, 0, " ");
    (3647, 0, "t");
    (3648, 0, "i");
    (3649, 0, "m");
    (3650, 0, "e");
    (3651, 0, "r");
    (3652, 0, "'");
    (3653, 0, ")");
    (2460, 0, "\n");
    (2461, 0, "\n");
    (2461, 0, "c");
    (2462, 0, "o");
    (2463, 0, "n");
    (2464, 0, "s");
    (2465, 0, "t");
    (2466, 0, " ");
    (2467, 0, "t");
    (2468, 0, "i");
    (2469, 0, "c");
    (2470, 0, "k");
    (2471, 0, " ");
    (2472, 0, "=");
    (2473, 0, " ");
    (2474, 0, "(");
    (2475, 0, "p");
    (2476, 0, "l");
    (2477, 0, "a");
    (2478, 0, "y");
    (2479, 0, "_");
    (2480, 0, "a");
    (2481, 0, "u");
    (2482, 0, "d");
    (2483, 0, "i");
    (2484, 0, "o");
    (2485, 0, ")");
    (2486, 0, " ");
    (2487, 0, "=");
    (2488, 0, ">");
    (2489, 0, " ");
    (2490, 0, "{");
    (2491, 0, "\n\t");
    (2493, 0, "\n\t");
    (2492, 1, "");
    (2493, 1, "}");
    (2920, 590, "");
    ( 2461,
      33,
      "\t\tconst tick = (play_audio) => {\n\
       \t\t\tconsole.log('tick')\n\
       \t\t\tconsole.log('state', state, 'completed', completed)\n\n\
       \t\t\tlet {game_state: new_game_state, offset_ms} = \
       get_current_state(Date.now() - start_time)\n\
       \t\t\t// state_label = state.label\n\
       \t\t\t\n\
       \t\t\tif (last_state !== game_state) {\n\
       \t\t\t\tconsole.log('state changed')\n\
       \t\t\t\tlast_state = game_state\n\
       \t\t\t\tgame_state = new_game_state\n\
       \t\t\t\tcompleted = new_game_state.complete\n\
       \t\t\t\t// if (!state.complete) round_audio.play()\n\
       \t\t\t}\n\n\
       \t\t\tif (game_state.complete) {\n\
       \t\t\t\t// And play gong\n\
       \t\t\t\t// completed = true\n\
       \t\t\t\t// if (play_audio) complete_audio.play()\n\
       \t\t\t}\n\
       \t\t}" );
    (2461, 2, "");
    (3046, 2, "\t");
    (3041, 3, "\t\t");
    (2996, 4, "\t\t\t");
    (2972, 4, "\t\t\t");
    (2951, 4, "\t\t\t");
    (2921, 3, "\t\t");
    (2915, 3, "\t\t");
    (2868, 4, "\t\t\t");
    (2828, 4, "\t\t\t");
    (2796, 4, "\t\t\t");
    (2768, 4, "\t\t\t");
    (2735, 4, "\t\t\t");
    (2699, 3, "\t\t");
    (2695, 3, "\t\t");
    (2663, 3, "\t\t");
    (2571, 3, "\t\t");
    (2515, 3, "\t\t");
    (2492, 3, "\t\t");
    (3029, 1, "");
    (3025, 2, "\t");
    (2981, 3, "\t\t");
    (2958, 3, "\t\t");
    (2938, 3, "\t\t");
    (2909, 2, "\t");
    (2904, 2, "\t");
    (2858, 3, "\t\t");
    (2819, 3, "\t\t");
    (2788, 3, "\t\t");
    (2761, 3, "\t\t");
    (2729, 3, "\t\t");
    (2694, 2, "\t");
    (2691, 2, "\t");
    (2660, 2, "\t");
    (2569, 2, "\t");
    (2514, 2, "\t");
    (2492, 2, "\t");
    (3439, 1, "");
    (3438, 1, "");
    (3414, 24, "");
    (2460, 0, "\n");
    (2461, 0, "\t\tlet last_state = null\n");
    (2461, 2, "");
    (2482, 1, "");
    (2834, 0, "// ");
    (2577, 9, "s");
    (2578, 0, "t");
    (2579, 0, "a");
    (2580, 0, "t");
    (2581, 0, "e");
    (2582, 0, " ");
    (2583, 0, "&");
    (2584, 0, "&");
    (2585, 0, " ");
    (2586, 0, "s");
    (2587, 0, "t");
    (2588, 0, "a");
    (2589, 0, "t");
    (2590, 0, "e");
    (2586, 5, "state");
    (2591, 0, ".");
    (2592, 0, "c");
    (2593, 0, "o");
    (2594, 0, "m");
    (2595, 0, "p");
    (2596, 0, "l");
    (2597, 0, "e");
    (2598, 0, "t");
    (2599, 0, "e");
    (2745, 0, "n");
    (2746, 0, "e");
    (2747, 0, "w");
    (2748, 0, "_");
    (2461, 21, "");
    (2460, 1, "");
    (2723, 1, "");
    (2723, 1, "");
    (2723, 1, "");
    (2723, 1, "");
    (2708, 15, "");
    (2708, 0, "n");
    (2709, 0, "e");
    (2710, 0, "w");
    (2711, 0, "g");
    (2711, 1, "");
    (2711, 0, "_");
    (2712, 0, "g");
    (2713, 0, "a");
    (2714, 0, "m");
    (2715, 0, "e");
    (2716, 0, "_");
    (2717, 0, "s");
    (2718, 0, "t");
    (2719, 0, "a");
    (2720, 0, "t");
    (2721, 0, "e");
    (2722, 0, " ");
    (2723, 0, "!");
    (2724, 0, "=");
    (2725, 0, "=");
    (2726, 0, " ");
    (2774, 0, "// ");
    (2772, 28, "");
    (2771, 1, "");
    (3006, 0, "\n");
    (2891, 1, "");
    (3005, 0, "\n\t}");
    (3003, 1, "\t\t");
    (2960, 2, "\t\t\t");
    (2938, 2, "\t\t\t");
    (2919, 2, "\t\t\t");
    (2891, 1, "\t\t");
    (2888, 3, "");
    (2887, 0, "\n\t\t");
    (2888, 2, "");
    (2624, 0, ":");
    (2625, 0, " ");
    (2626, 0, "n");
    (2627, 0, "e");
    (2628, 0, "w");
    (2629, 0, "_");
    (2630, 0, "o");
    (2631, 0, "f");
    (2632, 0, "f");
    (2633, 0, "s");
    (2634, 0, "e");
    (2635, 0, "t");
    (2636, 0, "_");
    (2637, 0, "m");
    (2638, 0, "s");
    (2717, 0, "\n\t");
    (2719, 0, "o");
    (2720, 0, "f");
    (2721, 0, "f");
    (2722, 0, "s");
    (2723, 0, "e");
    (2724, 0, "t");
    (2725, 0, "_");
    (2726, 0, "m");
    (2727, 0, "s");
    (2728, 0, " ");
    (2729, 0, "=");
    (2730, 0, " ");
    (2731, 0, "n");
    (2732, 0, "e");
    (2733, 0, "w");
    (2734, 0, "_");
    (2735, 0, "o");
    (2736, 0, "f");
    (2731, 6, "new_offset_ms");
    (3053, 1, "");
    (3148, 0, "// ");
    (3219, 0, "// ");
    (3311, 10, "");
    (3311, 0, "!");
    (3311, 1, "");
    (3311, 0, "!completed");
    (3148, 3, "");
    (3175, 20, "&");
    (3176, 0, "&");
    (3177, 0, " ");
    (3199, 3, "");
    (2812, 0, ",");
    (2813, 0, " ");
    (2814, 0, "n");
    (2815, 0, "e");
    (2816, 0, "w");
    (2817, 0, "_");
    (2818, 0, "g");
    (2819, 0, "a");
    (2820, 0, "m");
    (2814, 7, "new_game_state");
    (2828, 0, ".");
    (2829, 0, "l");
    (2830, 0, "a");
    (2831, 0, "b");
    (2832, 0, "e");
    (2829, 4, "label");
    (2834, 0, ",");
    (2835, 0, " ");
    (2836, 0, "n");
    (2837, 0, "e");
    (2838, 0, "w");
    (2839, 0, "_");
    (2840, 0, "g");
    (2841, 0, "a");
    (2836, 6, "new_game_state");
    (2850, 0, ".");
    (2851, 0, "c");
    (2852, 0, "o");
    (2853, 0, "m");
    (2854, 0, "p");
    (2855, 0, "l");
    (2856, 0, "e");
    (2857, 0, "t");
    (2858, 0, "e");
    (3221, 0, " ");
    (3222, 0, "?");
    (3223, 1, "");
    (3223, 1, "");
    (3223, 1, "");
    (3243, 0, " ");
    (3244, 0, ":");
    (3245, 0, " ");
    (3246, 0, "f");
    (3247, 0, "a");
    (3248, 0, "l");
    (3249, 0, "s");
    (3250, 0, "e");
    (3195, 0, "// ");
    (3195, 3, "");
    (3270, 0, " ");
    (3271, 0, "g");
    (3272, 0, "a");
    (3272, 1, "");
    (3271, 1, "");
    (3270, 1, "");
    (3294, 0, ",");
    (3295, 0, " ");
    (3296, 0, "g");
    (3297, 0, "a");
    (3298, 0, "m");
    (3299, 0, "e");
    (3300, 0, "_");
    (3301, 0, "s");
    (3302, 0, "t");
    (3303, 0, "a");
    (3304, 0, "t");
    (3305, 0, "e");
    (2203, 0, "$");
    (2204, 0, ":");
    (2205, 0, " ");
    (2206, 0, "c");
    (2207, 0, "o");
    (2208, 0, "n");
    (2209, 0, "s");
    (2210, 0, "o");
    (2211, 0, "l");
    (2212, 0, "e");
    (2206, 7, "console");
    (2213, 0, ".");
    (2214, 0, "l");
    (2215, 0, "o");
    (2216, 0, "g");
    (2214, 3, "log");
    (2217, 0, "(");
    (2218, 0, "'");
    (2219, 0, "g");
    (2220, 0, "a");
    (2221, 0, "m");
    (2222, 0, "e");
    (2223, 0, " ");
    (2224, 0, "s");
    (2225, 0, "t");
    (2226, 0, "a");
    (2227, 0, "t");
    (2228, 0, "e");
    (2229, 0, " ");
    (2230, 0, "x");
    (2231, 0, "x");
    (2232, 0, "x");
    (2233, 0, "'");
    (2234, 0, ",");
    (2235, 0, " ");
    (2236, 0, "g");
    (2237, 0, "a");
    (2238, 0, "m");
    (2239, 0, "e");
    (2240, 0, "_");
    (2241, 0, "s");
    (2242, 0, "t");
    (2243, 0, "a");
    (2244, 0, "t");
    (2245, 0, "e");
    (2246, 0, ")");
    (2905, 0, "\t\tgame_state = new_game_state\n");
    (2950, 14, "g");
    (2951, 0, "a");
    (2952, 0, "m");
    (2953, 0, "e");
    (2954, 0, "_");
    (2955, 0, "s");
    (2956, 0, "t");
    (2957, 0, "a");
    (2958, 0, "t");
    (2959, 0, "e");
    (2935, 25, "");
    (2934, 1, "");
    (2630, 54, "");
    (2630, 0, "x");
    (2722, 1, "");
    (2722, 1, "");
    (2722, 1, "");
    (2722, 1, "");
    (2722, 0, "x");
    (2723, 0, ".");
    (2739, 1, "");
    (2739, 1, "");
    (2739, 1, "");
    (2739, 1, "");
    (2739, 0, "x");
    (2740, 0, ".");
    (2863, 1, "");
    (2863, 1, "");
    (2863, 1, "");
    (2863, 1, "");
    (2863, 0, "x");
    (2864, 0, ".");
    (2823, 4, "x");
    (2801, 4, "x");
    (2821, 0, ".");
    (2802, 0, ".");
    (2505, 578, "");
    ( 2908,
      0,
      "const tick = (play_audio) => {\n\
       \tconsole.log('tick')\n\
       \tconsole.log('state', state, 'completed', state && state.complete)\n\n\
       \tlet x = get_current_state(Date.now() - start_time)\n\
       \t// state_label = state.label\n\
       \t\n\
       \toffset_ms = x.offset_ms\n\
       \tif (x.game_state !== game_state) {\n\
       \t\tconsole.log('state changed', x.game_state.label, \
       x.game_state.complete)\n\
       \t\tgame_state = x.game_state\n\
       \t\t// completed = new_game_state.complete\n\
       \t\t// if (!state.complete) round_audio.play()\n\n\
       \t\tif (game_state.complete) {\n\
       \t\t\t// And play gong\n\
       \t\t\t// completed = true\n\
       \t\t\t// if (play_audio) complete_audio.play()\n\
       \t\t}\n\
       \t}\n\
       }" );
    (2908, 0, "\t\t");
    (3487, 0, "\t");
    (3484, 1, "\t\t");
    (3480, 2, "\t\t\t");
    (3436, 3, "\t\t\t\t");
    (3413, 3, "\t\t\t\t");
    (3393, 3, "\t\t\t\t");
    (3364, 2, "\t\t\t");
    (3318, 2, "\t\t\t");
    (3277, 2, "\t\t\t");
    (3249, 2, "\t\t\t");
    (3175, 2, "\t\t\t");
    (3139, 1, "\t\t");
    (3114, 1, "\t\t");
    (3112, 1, "\t\t");
    (3082, 1, "\t\t");
    (3030, 1, "\t\t");
    (2962, 1, "\t\t");
    (2941, 1, "\t\t");
    (3504, 1, "\t\t");
    (3500, 2, "\t\t\t");
    (3495, 3, "\t\t\t\t");
    (3450, 4, "\t\t\t\t\t");
    (3426, 4, "\t\t\t\t\t");
    (3405, 4, "\t\t\t\t\t");
    (3375, 3, "\t\t\t\t");
    (3328, 3, "\t\t\t\t");
    (3286, 3, "\t\t\t\t");
    (3257, 3, "\t\t\t\t");
    (3182, 3, "\t\t\t\t");
    (3145, 2, "\t\t\t");
    (3119, 2, "\t\t\t");
    (3116, 2, "\t\t\t");
    (3085, 2, "\t\t\t");
    (3032, 2, "\t\t\t");
    (2963, 2, "\t\t\t");
    (2941, 2, "\t\t\t");
    (3521, 2, "\t");
    (3516, 3, "\t\t");
    (3510, 4, "\t\t\t");
    (3464, 5, "\t\t\t\t");
    (3439, 5, "\t\t\t\t");
    (3417, 5, "\t\t\t\t");
    (3386, 4, "\t\t\t");
    (3338, 4, "\t\t\t");
    (3295, 4, "\t\t\t");
    (3265, 4, "\t\t\t");
    (3189, 4, "\t\t\t");
    (3151, 3, "\t\t");
    (3124, 3, "\t\t");
    (3120, 3, "\t\t");
    (3088, 3, "\t\t");
    (3034, 3, "\t\t");
    (2964, 3, "\t\t");
    (2941, 3, "\t\t");
    (3504, 1, "");
    (3500, 2, "\t");
    (3495, 3, "\t\t");
    (3450, 4, "\t\t\t");
    (3426, 4, "\t\t\t");
    (3405, 4, "\t\t\t");
    (3375, 3, "\t\t");
    (3328, 3, "\t\t");
    (3286, 3, "\t\t");
    (3257, 3, "\t\t");
    (3182, 3, "\t\t");
    (3145, 2, "\t");
    (3119, 2, "\t");
    (3116, 2, "\t");
    (3085, 2, "\t");
    (3032, 2, "\t");
    (2963, 2, "\t");
    (2941, 2, "\t");
    (2908, 2, "");
    (2908, 578, "");
    ( 2505,
      0,
      "const tick = (play_audio) => {\n\
       \tconsole.log('tick')\n\
       \tconsole.log('state', state, 'completed', state && state.complete)\n\n\
       \tlet x = get_current_state(Date.now() - start_time)\n\
       \t// state_label = state.label\n\
       \t\n\
       \toffset_ms = x.offset_ms\n\
       \tif (x.game_state !== game_state) {\n\
       \t\tconsole.log('state changed', x.game_state.label, \
       x.game_state.complete)\n\
       \t\tgame_state = x.game_state\n\
       \t\t// completed = new_game_state.complete\n\
       \t\t// if (!state.complete) round_audio.play()\n\n\
       \t\tif (game_state.complete) {\n\
       \t\t\t// And play gong\n\
       \t\t\t// completed = true\n\
       \t\t\t// if (play_audio) complete_audio.play()\n\
       \t\t}\n\
       \t}\n\
       }" );
    (2091, 0, "x_");
    (2049, 0, "x_");
    (1996, 0, "x_");
    (1962, 0, "x_");
    (2053, 1, "");
    (2053, 1, "");
    (2063, 0, ":");
    (2064, 0, " ");
    (2065, 0, "x");
    (2066, 0, "_");
    (2067, 0, "g");
    (2068, 0, "a");
    (2069, 0, "m");
    (2070, 0, "e");
    (2065, 6, "x_game_state");
    (2065, 12, "x_game");
    (2064, 7, "");
    (2063, 1, "");
    (2053, 0, "x_");
    (2097, 2, "");
    (2053, 2, "");
    (1998, 2, "");
    (1962, 2, "");
    (2191, 0, " ");
    (2192, 0, "=");
    (2193, 0, " ");
    (2194, 0, "n");
    (2195, 0, "u");
    (2196, 0, "l");
    (2197, 0, "l");
    (2194, 4, "");
    (2194, 0, "{");
    (2195, 0, "}");
    (2195, 1, "");
    (2194, 1, "");
    (2194, 0, "n");
    (2195, 0, "u");
    (2196, 0, "l");
    (2197, 0, "l");
    (3496, 0, "s");
    (3497, 0, "e");
    (3498, 0, "t");
    (3499, 0, "T");
    (3500, 0, "i");
    (3501, 0, "m");
    (3502, 0, "e");
    (3503, 0, "o");
    (3504, 0, "u");
    (3505, 0, "t");
    (3506, 0, "(");
    (3507, 0, "(");
    (3508, 0, ")");
    (3509, 0, " ");
    (3510, 0, "=");
    (3511, 0, ">");
    (3512, 0, " ");
    (3524, 0, ",");
    (3525, 0, " ");
    (3526, 0, "0");
    (3527, 0, ")");
    (3090, 0, "\n");
    (3091, 0, "\n");
    (3092, 0, "i");
    (3093, 0, "f");
    (3094, 0, " ");
    (3095, 0, "(");
    (3096, 0, "s");
    (3097, 0, "t");
    (3098, 0, "a");
    (3099, 0, "t");
    (3100, 0, "e");
    (3101, 0, " ");
    (3102, 0, "=");
    (3103, 0, "=");
    (3104, 0, "=");
    (3105, 0, " ");
    (3106, 0, "'");
    (3107, 0, "p");
    (3108, 0, "l");
    (3109, 0, "a");
    (3110, 0, "y");
    (3111, 0, "i");
    (3112, 0, "n");
    (3113, 0, "g");
    (3114, 0, "'");
    (3115, 0, ")");
    (3116, 0, " ");
    (3117, 0, "t");
    (3118, 0, "i");
    (3119, 0, "c");
    (3120, 0, "k");
    (3117, 4, "tick");
    (3121, 0, "(");
    (3122, 0, ")");
    (3122, 0, "f");
    (3122, 1, "");
    (3122, 0, "f");
    (3123, 0, "a");
    (3124, 0, "l");
    (3125, 0, "s");
    (3126, 0, "e");
    (3534, 0, "// ");
    (2191, 7, "");
    (4552, 0, "bar_");
    (3859, 0, "bar_");
    (2337, 0, "bar_");
    (2324, 0, "bar_");
    (2419, 10, "");
    (3120, 0, "\n");
    (3121, 0, "let timer\n");
    (3130, 1, "");
    (2556, 0, "// ");
    (2631, 1, "");
    (2631, 0, "{");
    (2631, 1, "");
    (2631, 0, "x");
    (2651, 1, "y");
    (2649, 1, "ivi");
    (2647, 1, "ac");
    (1887, 1, "y");
    (1885, 1, "ivi");
    (1883, 1, "ac");
    (2653, 5, "age");
    (2650, 2, "s");
    (1886, 5, "age");
    (1883, 2, "s");
    (2099, 1, "g");
    (2057, 1, "g");
    (2004, 1, "g");
    (1970, 1, "g");
    (2091, 5, "");
    (2049, 5, "");
    (1996, 5, "");
    (1962, 5, "");
    (2113, 10, "s");
    (2114, 0, "t");
    (2115, 0, "a");
    (2116, 0, "g");
    (2117, 0, "e");
    (2132, 1, "g");
    (1817, 1, "g");
    ( 1864,
      0,
      "\nconst complete_stage = { label: 'Game complete', complete: true }" );
    (1805, 1, "");
    (1805, 1, "");
    (1805, 1, "");
    (1805, 1, "");
    (1805, 1, "");
    (1805, 1, "");
    (1805, 1, "");
    (1805, 1, "");
    (1805, 0, "w");
    (1806, 0, "a");
    (1807, 0, "i");
    (1808, 0, "t");
    (1809, 0, "i");
    (1810, 0, "n");
    (1811, 0, "g");
    (1830, 15, "'Waiting for game to start'");
    (1857, 16, "");
    (1968, 0, "\n\t");
    (1970, 0, "i");
    (1971, 0, "f");
    (1972, 0, " ");
    (1973, 0, "(");
    (1974, 0, "s");
    (1975, 0, "t");
    (1976, 0, "a");
    (1977, 0, "t");
    (1978, 0, "e");
    (1979, 0, " ");
    (1980, 0, "!");
    (1981, 0, "=");
    (1982, 0, "=");
    (1983, 0, " ");
    (1984, 0, "'");
    (1985, 0, "p");
    (1986, 0, "l");
    (1987, 0, "a");
    (1988, 0, "y");
    (1989, 0, "i");
    (1990, 0, "n");
    (1991, 0, "g");
    (1992, 0, "'");
    (1993, 0, ")");
    (1994, 0, " ");
    (1995, 0, "r");
    (1996, 0, "e");
    (1997, 0, "t");
    (1998, 0, "u");
    (1999, 0, "r");
    (2000, 0, "n");
    (2001, 0, " ");
    (2002, 0, "w");
    (2003, 0, "a");
    (2004, 0, "i");
    (2005, 0, "t");
    (2006, 0, "i");
    (2007, 0, "n");
    (2008, 0, "g");
    (2002, 7, "waiting_stage");
    (1993, 0, " ");
    (1994, 0, "&");
    (1995, 0, "&");
    (1996, 0, " ");
    (1997, 0, "s");
    (1998, 0, "t");
    (1999, 0, "a");
    (2000, 0, "t");
    (2001, 0, "e");
    (2002, 0, " ");
    (2003, 0, "!");
    (2004, 0, "=");
    (2005, 0, "=");
    (2006, 0, " ");
    (2007, 0, "'");
    (1980, 28, "=");
    (1981, 0, "=");
    (1982, 0, "=");
    (1983, 0, " ");
    (1984, 0, "'");
    (1985, 0, "w");
    (1986, 0, "a");
    (1987, 0, "i");
    (1988, 0, "t");
    (1989, 0, "i");
    (1990, 0, "n");
    (1991, 0, "g");
    (1992, 0, "'");
    (2015, 0, "\n\t");
    (3419, 1, "g");
    (3415, 0, "nt");
    (3411, 3, "curr");
    (3347, 1, "g");
    (3343, 0, "nt");
    (3339, 3, "curr");
    (3334, 1, "g");
    (3330, 0, "nt");
    (3326, 3, "curr");
    (3059, 1, "g");
    (3055, 0, "nt");
    (3051, 3, "curr");
    (2940, 1, "g");
    (2936, 0, "nt");
    (2932, 3, "curr");
    (2850, 1, "g");
    (2846, 0, "nt");
    (2842, 3, "curr");
    (2578, 1, "g");
    (2574, 0, "nt");
    (2570, 3, "curr");
    (2545, 1, "g");
    (2541, 0, "nt");
    (2537, 3, "curr");
    (2393, 1, "g");
    (2389, 0, "nt");
    (2385, 3, "curr");
    (2362, 1, "g");
    (2358, 0, "nt");
    (2354, 3, "curr");
    (2329, 1, "g");
    (2325, 0, "nt");
    (2321, 3, "curr");
    (2274, 1, "g");
    (2270, 0, "nt");
    (2266, 3, "curr");
    (2016, 1, "");
    (2315, 1, "");
    (2314, 1, "");
    (2314, 0, "g");
    (2315, 0, "e");
    (2339, 265, "");
    (3799, 0, "\n");
    (3800, 0, "\n");
    ( 3801,
      0,
      "$: game_completed = current_stage == null ? false : \
       !!current_stage.complete\n\
       let bar_width = 0\n\
       $: bar_width = state.complete ? 100 : 100 * offset_ms / (state.duration \
       * 1000)\n\n\
       let state_label\n\
       $: state_label = current_stage == null ? 'unknown' : current_stage.label\n"
    );
    (4066, 0, "\n");
    (3799, 1, "");
    (3800, 0, "// ");
    (3800, 3, "");
    (3956, 1, "");
    (3914, 1, "");
    (3954, 1, "");
    (3913, 1, "");
    (3953, 0, "g");
    (3913, 0, "g");
    (3955, 0, "e");
    (3914, 0, "e");
    (4606, 1, "g");
    (3998, 1, "g");
    (3983, 1, "g");
    (3684, 1, "g");
    (2955, 0, " ");
    (2956, 0, "|");
    (2957, 0, "|");
    (2958, 0, " ");
    (2959, 0, "s");
    (2960, 0, "t");
    (2961, 0, "a");
    (2962, 0, "t");
    (2963, 0, "e");
    (2964, 0, " ");
    (2965, 0, "=");
    (2966, 0, "=");
    (2967, 0, "=");
    (2968, 0, " ");
    (2969, 0, "'");
    (2970, 0, "p");
    (2971, 0, "a");
    (2972, 0, "u");
    (2973, 0, "s");
    (2974, 0, "e");
    (2975, 0, "d");
    (2976, 0, "'");
    (2932, 0, "// ");
    (2931, 0, "\n");
    (2932, 0, "tick(false)");
    (2464, 5, "c");
    (2465, 0, "o");
    (2466, 0, "n");
    (2467, 0, "s");
    (2468, 0, "t");
    (2469, 0, " ");
    (2470, 0, "{");
    (2471, 0, "n");
    (2472, 0, "e");
    (2473, 0, "w");
    (2474, 0, "_");
    (2475, 0, "s");
    (2476, 0, "t");
    (2477, 0, "a");
    (2478, 0, "g");
    (2479, 0, "e");
    (2480, 0, ":");
    (2481, 0, " ");
    (2482, 0, "s");
    (2483, 0, "t");
    (2484, 0, "a");
    (2485, 0, "g");
    (2471, 15, "s");
    (2472, 0, "t");
    (2473, 0, "a");
    (2474, 0, "g");
    (2475, 0, "e");
    (2476, 0, ":");
    (2477, 0, " ");
    (2478, 0, "n");
    (2479, 0, "e");
    (2480, 0, "w");
    (2481, 0, "_");
    (2482, 0, "s");
    (2483, 0, "t");
    (2484, 0, "a");
    (2485, 0, "g");
    (2486, 0, "e");
    (2487, 0, ",");
    (2488, 0, " ");
    (2489, 0, "n");
    (2490, 0, "o");
    (2491, 0, "e");
    (2491, 1, "");
    (2490, 1, "");
    (2490, 0, "e");
    (2491, 0, "w");
    (2492, 0, "_");
    (2493, 0, "o");
    (2494, 0, "f");
    (2495, 0, "f");
    (2496, 0, "s");
    (2497, 0, ":");
    (2498, 0, " ");
    (2499, 0, "o");
    (2500, 0, "f");
    (2501, 0, "f");
    (2502, 0, "s");
    (2503, 0, "e");
    (2504, 0, "t");
    (2505, 0, "_");
    (2506, 0, "m");
    (2507, 0, "s");
    (2508, 0, "}");
    (2600, 11, "n");
    (2601, 0, "e");
    (2602, 0, "w");
    (2603, 0, "_");
    (2604, 0, "o");
    (2605, 0, "f");
    (2606, 0, "f");
    (2607, 0, "s");
    (2740, 12, "n");
    (2699, 12, "n");
    (2679, 12, "n");
    (2614, 12, "n");
    (2708, 0, "e");
    (2678, 0, "e");
    (2669, 0, "e");
    (2615, 0, "e");
    (2712, 0, "_");
    (2681, 0, "_");
    (2671, 0, "_");
    (2616, 0, "_");
    (2715, 1, "");
    (2683, 1, "");
    (2672, 1, "");
    (2616, 1, "");
    (2712, 0, "w");
    (2681, 0, "w");
    (2671, 0, "w");
    (2616, 0, "w");
    (2716, 0, "_");
    (2684, 0, "_");
    (2673, 0, "_");
    (2617, 0, "_");
    (2720, 0, "s");
    (2687, 0, "s");
    (2675, 0, "s");
    (2618, 0, "s");
    (2724, 0, "t");
    (2690, 0, "t");
    (2677, 0, "t");
    (2619, 0, "t");
    (2728, 0, "a");
    (2693, 0, "a");
    (2679, 0, "a");
    (2620, 0, "a");
    (2732, 0, "g");
    (2696, 0, "g");
    (2681, 0, "g");
    (2621, 0, "g");
    (2736, 0, "e");
    (2699, 0, "e");
    (2683, 0, "e");
    (2622, 0, "e");
    (2906, 3, "");
    (63, 0, " ");
    (64, 0, "/");
    (65, 0, "/");
    (66, 0, " ");
    (67, 0, "w");
    (68, 0, "a");
    (69, 0, "i");
    (70, 0, "t");
    (71, 0, "i");
    (72, 0, "n");
    (73, 0, "g");
    (74, 0, ",");
    (75, 0, " ");
    (76, 0, "p");
    (77, 0, "l");
    (78, 0, "a");
    (79, 0, "y");
    (80, 0, "i");
    (81, 0, "n");
    (82, 0, "g");
    (83, 0, ",");
    (84, 0, " ");
    (85, 0, "p");
    (86, 0, "a");
    (87, 0, "u");
    (88, 0, "s");
    (89, 0, "e");
    (90, 0, "d");
    (91, 0, ".");
    (67, 0, "l");
    (68, 0, "o");
    (69, 0, "a");
    (70, 0, "d");
    (71, 0, "i");
    (72, 0, "n");
    (73, 0, "g");
    (74, 0, ",");
    (75, 0, " ");
    (2992, 0, "// ");
    (3007, 3, "");
    (3065, 0, "\nif (state === 'playing' || state === 'paused') tick(false)");
    (3007, 0, "// ");
    (3079, 26, "");
    (3079, 0, "!");
    (3080, 0, "=");
    (3081, 0, "=");
    (3082, 0, " ");
    (3082, 1, "");
    (3084, 6, "l");
    (3085, 0, "o");
    (3086, 0, "a");
    (3087, 0, "d");
    (3088, 0, "i");
    (3089, 0, "n");
    (3090, 0, "g");
    (4047, 0, "c");
    (4048, 0, "u");
    (4049, 0, "r");
    (4050, 0, "r");
    (4051, 0, "e");
    (4052, 0, "n");
    (4053, 0, "t");
    (4054, 0, "_");
    (4097, 0, "c");
    (4098, 0, "u");
    (4099, 0, "r");
    (4100, 0, "r");
    (4101, 0, "e");
    (4102, 0, "n");
    (4103, 0, "t");
    (4104, 0, "_");
    (2317, 1, "");
    (2316, 1, "");
    (2316, 0, "\n");
    (2317, 0, "l");
    (2318, 0, "e");
    (2319, 0, "t");
    (2320, 0, " ");
    (2320, 1, "");
    (2316, 4, "");
    (2316, 0, ", ");
    (3069, 0, "// ");
    (3333, 0, "\n\t");
    (3335, 0, "i");
    (3336, 0, "f");
    (3337, 0, " ");
    (3338, 0, "(");
    (3339, 0, "s");
    (3340, 0, "t");
    (3341, 0, "a");
    (3342, 0, "t");
    (3343, 0, "e");
    (3344, 0, " ");
    (3345, 0, "!");
    (3346, 0, "=");
    (3347, 0, "=");
    (3348, 0, " ");
    (3349, 0, "'");
    (3350, 0, "l");
    (3351, 0, "o");
    (3352, 0, "a");
    (3353, 0, "d");
    (3354, 0, "i");
    (3355, 0, "n");
    (3356, 0, "g");
    (3357, 0, "'");
    (3358, 0, ")");
    (3359, 0, " ");
    (3360, 0, "t");
    (3361, 0, "i");
    (3362, 0, "c");
    (3363, 0, "k");
    (3360, 4, "tick");
    (3364, 0, "(");
    (3365, 0, ")");
    (3365, 0, "f");
    (3366, 0, "a");
    (3367, 0, "l");
    (3368, 0, "s");
    (3369, 0, "e");
    (3371, 0, "\n\t");
    (3372, 1, "");
    (3335, 0, "// ");
    (3069, 3, "");
    (3069, 0, "// ");
    (2316, 0, " ");
    (2317, 0, "=");
    (2318, 0, " ");
    (2319, 0, "n");
    (2320, 0, "u");
    (2321, 0, "l");
    (2322, 0, "l");
    (3076, 3, "");
    (3076, 0, "// ");
    (4099, 0, "current_stage == null ?");
    (4122, 0, " ");
    (4123, 0, "0");
    (4124, 0, "\n");
    (4125, 0, "\t");
    (4126, 0, ":");
    (4127, 0, " ");
    (4156, 1, "");
    (4156, 0, "\n\t");
    (2534, 10, "");
    (2543, 0, ":");
    (2544, 0, " ");
    (2545, 0, "new_offs: ");
    (2554, 1, "");
    (2553, 1, "");
    (3617, 0, "\n\t\t");
    (3620, 0, "t");
    (3621, 0, "i");
    (3622, 0, "c");
    (3623, 0, "k");
    (3620, 4, "tick");
    (3624, 0, "(");
    (3625, 0, "f");
    (3626, 0, "a");
    (3627, 0, "l");
    (3628, 0, "s");
    (3629, 0, "e");
    (3630, 0, ")");
    (3620, 0, "s");
    (3621, 0, "e");
    (3622, 0, "t");
    (3623, 0, "T");
    (3624, 0, "i");
    (3625, 0, "m");
    (3626, 0, "e");
    (3620, 7, "");
    (3620, 0, " ");
    (3620, 0, "s");
    (3621, 0, "e");
    (3622, 0, "t");
    (3623, 0, "I");
    (3624, 0, "m");
    (3625, 0, "m");
    (3626, 0, "e");
    (3620, 7, "setImmediate");
    (3632, 0, "(");
    (3633, 1, "");
    (3633, 0, ")");
    (3634, 0, " ");
    (3634, 1, "");
    (3633, 1, "");
    (3633, 0, "(");
    (3634, 0, ")");
    (3635, 0, " ");
    (3636, 0, "=");
    (3637, 0, ">");
    (3638, 0, " ");
    (3650, 0, ")");
    (3620, 12, "s");
    (3621, 0, "e");
    (3622, 0, "t");
    (3623, 0, "T");
    (3624, 0, "i");
    (3625, 0, "m");
    (3626, 0, "e");
    (3627, 0, "o");
    (3628, 0, "u");
    (3629, 0, "t");
    (3620, 10, "setTimeout");
    (3630, 0, "(");
    (3630, 1, "");
    (2031, 0, " ");
    (2032, 0, "|");
    (2033, 0, "|");
    (2034, 0, " ");
    (2035, 0, "s");
    (2036, 0, "t");
    (2037, 0, "a");
    (2038, 0, "t");
    (2039, 0, "e");
    (2040, 0, " ");
    (2041, 0, "=");
    (2042, 0, "=");
    (2043, 0, "=");
    (2044, 0, " ");
    (2045, 0, "'");
    (2046, 0, "l");
    (2047, 0, "o");
    (2048, 0, "a");
    (2049, 0, "d");
    (2050, 0, "i");
    (2051, 0, "n");
    (2052, 0, "g");
    (2053, 0, "'");
    (2031, 23, "");
    (2998, 0, "\n");
    (2999, 0, "$");
    (3000, 0, ":");
    (3001, 0, " ");
    (3002, 0, "t");
    (3003, 0, "i");
    (3004, 0, "c");
    (3005, 0, "k");
    (3002, 4, "tick");
    (3006, 0, "(");
    (3007, 0, "f");
    (3008, 0, "a");
    (3009, 0, "l");
    (3010, 0, "s");
    (3011, 0, "e");
    (3012, 0, ")");
    (2999, 14, "");
    (2998, 1, "");
    (854, 0, " ");
    (855, 0, "=");
    (856, 0, " ");
    (857, 0, "[");
    (858, 0, "]");
    (3003, 0, "\n");
    (3004, 0, "$");
    (3005, 0, ":");
    (3006, 0, " ");
    (3007, 0, "t");
    (3008, 0, "i");
    (3009, 0, "c");
    (3010, 0, "k");
    (3007, 4, "tick");
    (3011, 0, "(");
    (3012, 0, "f");
    (3013, 0, "a");
    (3014, 0, "l");
    (3015, 0, "s");
    (3016, 0, "e");
    (3017, 0, ")");
    (3004, 0, "// ");
    (3037, 3, "");
    (3037, 0, "// ");
    (3877, 0, " ");
    (3878, 0, "e");
    (3879, 0, "l");
    (3880, 0, "s");
    (3881, 0, "e");
    (3882, 0, " ");
    (3883, 0, "i");
    (3884, 0, "f");
    (3885, 0, " ");
    (3886, 0, "(");
    (3887, 0, "s");
    (3888, 0, "t");
    (3889, 0, "a");
    (3890, 0, "t");
    (3891, 0, "e");
    (3892, 0, " ");
    (3893, 0, "=");
    (3894, 0, "=");
    (3895, 0, "=");
    (3896, 0, " ");
    (3897, 0, "'");
    (3898, 0, "w");
    (3899, 0, "a");
    (3900, 0, "i");
    (3901, 0, "t");
    (3902, 0, "i");
    (3903, 0, "n");
    (3904, 0, "g");
    (3905, 0, "'");
    (3906, 0, ")");
    (3907, 0, " ");
    (3908, 0, "{");
    (3909, 0, "\n\t\t");
    (3912, 0, "\n\t\t");
    (3910, 2, "");
    (3911, 2, "\t}");
    (3910, 0, "\t\t");
    (3912, 0, "t");
    (3913, 0, "i");
    (3914, 0, "c");
    (3915, 0, "k");
    (3912, 4, "tick");
    (3916, 0, "(");
    (3917, 0, ")");
    (3917, 0, "f");
    (3918, 0, "a");
    (3919, 0, "l");
    (3920, 0, "s");
    (3921, 0, "e");
    (3643, 0, "// ");
    (2045, 0, "{");
    (2046, 0, "s");
    (2047, 0, "t");
    (2048, 0, "a");
    (2049, 0, "g");
    (2050, 0, "e");
    (2051, 0, ":");
    (2052, 0, " ");
    (2066, 0, "}");
    (2066, 0, ",");
    (2067, 0, " ");
    (2068, 0, "o");
    (2069, 0, "f");
    (2070, 0, "f");
    (2071, 0, "s");
    (2072, 0, "e");
    (2073, 0, "t");
    (2074, 0, "_");
    (2075, 0, "m");
    (2076, 0, "s");
    (2077, 0, ":");
    (2078, 0, " ");
    (2079, 0, "0");
    (1900, 0, ",");
    (1901, 0, " ");
    (1902, 0, "d");
    (1903, 0, "u");
    (1904, 0, "r");
    (1905, 0, "a");
    (1906, 0, "t");
    (1907, 0, "i");
    (1908, 0, "o");
    (1909, 0, "n");
    (1910, 0, ":");
    (1911, 0, " ");
    (1912, 0, "i");
    (1912, 1, "");
    (1912, 0, "I");
    (1913, 0, "n");
    (1914, 0, "f");
    (1915, 0, "i");
    (1916, 0, "n");
    (1917, 0, "i");
    (1918, 0, "t");
    (1919, 0, "y");
    (2920, 0, "\n\t\t");
    (2923, 0, "i");
    (2924, 0, "f");
    (2925, 0, " ");
    (2926, 0, "(");
    (2927, 0, "p");
    (2928, 0, "l");
    (2929, 0, "a");
    (2930, 0, "y");
    (2931, 0, "_");
    (2932, 0, "a");
    (2933, 0, "u");
    (2934, 0, "d");
    (2935, 0, "i");
    (2936, 0, "o");
    (2937, 0, ")");
    (2938, 0, " ");
    (2939, 0, "{");
    (2940, 0, "\n\t\t\t");
    (2947, 0, "\t");
    (2941, 3, "");
    (3021, 16, "");
    (2975, 43, "");
    (2975, 0, "\t");
    (2976, 0, "\t");
    (2975, 5, "\t\t\t\t");
    (2940, 1, "");
    (2972, 1, "");
    (2971, 1, "");
    (2941, 56, "\t\t\tif (current_stage.complete) complete_audio.play()");
    (2993, 0, "\n\t\t\t");
    (2997, 0, "e");
    (2998, 0, "l");
    (2999, 0, "s");
    (3000, 0, "e");
    (3001, 0, " ");
    (3002, 0, " round_audio.play()");
    (3001, 1, "");
    (3020, 0, "\n\t\t\t");
    (3021, 3, "\t\t}");
    (3021, 3, "");
    (3020, 1, "");
    (963, 0, "\n\t\t");
    (966, 0, "n");
    (967, 0, "o");
    (968, 0, "_");
    (969, 0, "s");
    (970, 0, "o");
    (971, 0, "u");
    (972, 0, "n");
    (973, 0, "d");
    (974, 0, "_");
    (974, 1, "");
    (974, 0, ":");
    (975, 0, " ");
    (976, 0, "t");
    (977, 0, "r");
    (978, 0, "u");
    (979, 0, "e");
    (2954, 0, " ");
    (2955, 0, "!");
    (2956, 0, "!");
    (2957, 0, " ");
    (2957, 1, "");
    (2956, 1, "");
    (2955, 1, "");
    (2955, 0, "&");
    (2956, 0, "&");
    (2957, 0, " ");
    (2958, 0, "!");
    (2959, 0, "n");
    (2960, 0, "e");
    (2961, 0, "w");
    (2962, 0, "_");
    (2963, 0, "s");
    (2964, 0, "t");
    (2965, 0, "a");
    (2966, 0, "g");
    (2967, 0, "e");
    (2959, 9, "new_stage");
    (2968, 0, ".");
    (2969, 0, "n");
    (2970, 0, "o");
    (2971, 0, "_");
    (2969, 3, "no_sound");
    (5027, 1, "");
    (5009, 1, "");
    (5026, 0, "1");
    (5009, 0, "1");
    (3792, 1, "");
    (3792, 0, "5");
    (3792, 1, "");
    (3792, 0, "1");
    (3672, 3, "");
    (3672, 0, "// ");
    (3710, 3, "");
    (3710, 0, "// ");
    (3742, 0, "\n\t\t");
    (3745, 0, "tick(false)");
    ( 2006,
      0,
      "const get_current_stage = (offset_ms) => {\n\
       \tif (state === 'waiting') return {stage: waiting_stage, offset_ms: 0}\n\n\
       \tfor (let s = 0; s < game_stages.length; s++) {\n\
       \t\tlet stage = game_stages[s]\n\
       \t\tif (stage.duration * 1000 > offset_ms) {\n\
       \t\t\treturn {stage, offset_ms}\n\
       \t\t}\n\
       \t\toffset_ms -= stage.duration * 1000\n\
       \t}\n\
       \treturn {\n\
       \t\tstage: complete_stage, offset_ms\n\
       \t}\n\
       }\n" );
    (2718, 0, "// ");
    (2715, 0, "// ");
    (2680, 0, "// ");
    (2670, 0, "// ");
    (2667, 0, "// ");
    (2630, 0, "// ");
    (2626, 0, "// ");
    (2597, 0, "// ");
    (2554, 0, "// ");
    (2525, 0, "// ");
    (2477, 0, "// ");
    (2406, 0, "// ");
    (2363, 0, "// ");
    (2119, 0, "\n\t");
    (2121, 0, "l");
    (2122, 0, "e");
    (2123, 0, "t");
    (2124, 0, " ");
    (2125, 0, "o");
    (2126, 0, "f");
    (2127, 0, "f");
    (2128, 0, "s");
    (2129, 0, "e");
    (2130, 0, "t");
    (2131, 0, "_");
    (2132, 0, "s");
    (2133, 0, "e");
    (2134, 0, "c");
    (2135, 0, "o");
    (2136, 0, "n");
    (2137, 0, "d");
    (2138, 0, "s");
    (2139, 0, " ");
    (2140, 0, "=");
    (2141, 0, " ");
    (2142, 0, "o");
    (2143, 0, "f");
    (2144, 0, "f");
    (2145, 0, "s");
    (2146, 0, "e");
    (2147, 0, "t");
    (2142, 6, "offset_ms");
    (2138, 1, "");
    (2137, 1, "");
    (2136, 1, "");
    (2135, 1, "");
    (2147, 0, " ");
    (2148, 0, "/");
    (2149, 0, " ");
    (2150, 0, "1");
    (2151, 0, "0");
    (2152, 0, "0");
    (2153, 0, "0");
    (2138, 0, "M");
    (2139, 0, "a");
    (2140, 0, "t");
    (2141, 0, "h");
    (2142, 0, ".");
    (2143, 0, "r");
    (2144, 0, "o");
    (2145, 0, "u");
    (2146, 0, "n");
    (2147, 0, "d");
    (2143, 5, "round");
    (2148, 0, "(");
    (2165, 0, ")");
    (2349, 7, "");
    (2264, 7, "");
    (2275, 1, "");
    (2274, 1, "");
    (2274, 0, "s");
    (2275, 0, "e");
    (2276, 0, "c");
    (2308, 0, ":");
    (2309, 0, " ");
    (2310, 0, "o");
    (2311, 0, "f");
    (2312, 0, "f");
    (2313, 0, "s");
    (2314, 0, "e");
    (2315, 0, "t");
    (2316, 0, "_");
    (2317, 0, "s");
    (2318, 0, "e");
    (2319, 0, "c");
    (2320, 0, " ");
    (2321, 0, "*");
    (2322, 0, " ");
    (2323, 0, "1");
    (2324, 0, "0");
    (2325, 0, "0");
    (2326, 0, "0");
    (2343, 1, "");
    (2342, 1, "");
    (2342, 0, "s");
    (2343, 0, "e");
    (2344, 0, "c");
    (2416, 396, "");
    (2307, 1, "");
    (2306, 1, "");
    (2306, 0, "s");
    (2307, 0, "e");
    (2308, 0, "c");
    (2309, 19, "");
    (2392, 1, "");
    (2391, 1, "");
    (2391, 0, "s");
    (2392, 0, "e");
    (2393, 0, "c");
    (2435, 1, "");
    (2434, 1, "");
    (2434, 0, "s");
    (2435, 0, "e");
    (2436, 0, "c");
    (2645, 1, "");
    (2644, 1, "");
    (2644, 0, "s");
    (2645, 0, "e");
    (2646, 0, "c");
    (2745, 1, "");
    (2744, 1, "");
    (2744, 0, "s");
    (2745, 0, "e");
    (2746, 0, "c");
    (4402, 1, "");
    (4401, 1, "");
    (4401, 0, "s");
    (4402, 0, "e");
    (4403, 0, "c");
    (4407, 1, "");
    (4429, 8, "");
    (3110, 136, "");
    (3573, 73, "");
    (3572, 1, "");
    (4310, 37, "");
    (3435, 137, "");
    (6364, 165, "");
    ( 6364,
      0,
      "\n\
       \t\t\t<!-- <div>\n\
       \t\t\t\t(Total game length: {roundish(\n\
       \t\t\t\t\t(rounds * players * seconds_per_bead + (meditate ? \
       MEDITATION_SECONDS : 0)) / 60\n\
       \t\t\t\t)} minutes)\n\
       \t\t\t</div> -->" );
    (6364, 165, "");
    (6902, 163, "");
    (6812, 1, "");
    (6812, 1, "");
    (6812, 1, "");
    (6812, 1, "");
    (6895, 1, "");
    (6877, 2, "\t");
    (6857, 2, "\t");
    (6841, 2, "\t");
    (6819, 2, "\t");
    (6812, 0, "\n");
    (6820, 21, "");
    (6865, 4, "2");
    (6866, 0, "e");
    (6867, 0, "m");
    (6835, 18, "");
    (6834, 1, "");
    (1244, 0, "\n\t\t\t\t");
    (1249, 0, "r");
    (1250, 0, ",");
    (1251, 0, " ");
    (1252, 0, "p");
    (4182, 0, "\n");
    (4183, 0, "\n");
    (4183, 0, "c");
    (4184, 0, "o");
    (4185, 0, "n");
    (4186, 0, "s");
    (4187, 0, "t");
    (4188, 0, " ");
    (4189, 0, "p");
    (4190, 0, "r");
    (4191, 0, "o");
    (4192, 0, "g");
    (4193, 0, "r");
    (4194, 0, "e");
    (4195, 0, "s");
    (4196, 0, "s");
    (4197, 0, "_");
    (4198, 0, "c");
    (4199, 0, "l");
    (4200, 0, "a");
    (4201, 0, "s");
    (4202, 0, "s");
    (4203, 0, " ");
    (4204, 0, "=");
    (4205, 0, " ");
    (4206, 0, "(");
    (4207, 0, "t");
    (4208, 0, "y");
    (4209, 0, "p");
    (4210, 0, "e");
    (4207, 4, "type");
    (4211, 0, ",");
    (8, 0, "\nimport { type } from \"os\";\n\n");
    (4241, 0, " ");
    (4242, 0, "r");
    (4243, 0, ",");
    (4244, 0, " ");
    (4245, 0, "p");
    (4246, 0, ")");
    (4247, 0, " ");
    (4248, 0, "=");
    (4249, 0, ">");
    (4250, 0, " ");
    (4251, 0, "{");
    (4252, 0, "\n\t");
    (4254, 0, "\n\t");
    (4253, 1, "");
    (4254, 1, "}");
    (4253, 0, "\t");
    (4254, 0, "i");
    (4255, 0, "f");
    (4256, 0, " ");
    (4257, 0, "(");
    (4258, 0, "s");
    (4259, 0, "t");
    (4260, 0, "a");
    (4261, 0, "t");
    (4262, 0, "e");
    (4258, 5, "");
    (4258, 0, "c");
    (4259, 0, "u");
    (4260, 0, "r");
    (4261, 0, "r");
    (4262, 0, "e");
    (4263, 0, "n");
    (4264, 0, "t");
    (4265, 0, "_");
    (4266, 0, "g");
    (4266, 1, "");
    (4258, 8, "current_stage");
    (4271, 0, " ");
    (4272, 0, "=");
    (4273, 0, "=");
    (4274, 0, " ");
    (4275, 0, "n");
    (4276, 0, "u");
    (4277, 0, "l");
    (4278, 0, "l");
    (4279, 0, ")");
    (4280, 0, " ");
    (4281, 0, "r");
    (4282, 0, "e");
    (4283, 0, "t");
    (4284, 0, "u");
    (4285, 0, "r");
    (4286, 0, "n");
    (4287, 0, " ");
    (4288, 0, "'");
    (4289, 0, "'");
    (4290, 0, "\n\t");
    (4292, 0, "\n\t");
    (4291, 1, "");
    (4292, 1, "");
    (1273, 0, "\n\t\t\t\t");
    (1278, 0, "t");
    (1279, 0, "y");
    (1280, 0, "p");
    (1281, 0, "e");
    (1282, 0, ":");
    (1283, 0, " ");
    (1284, 0, "'");
    (1285, 0, "b");
    (1286, 0, "e");
    (1287, 0, "a");
    (1288, 0, "d");
    (1289, 0, "'");
    (1290, 0, ",");
    (1274, 26, "\t\t\t\ttype: 'bead', r, p");
    (1068, 0, "\n\t\t");
    (1071, 0, "t");
    (1072, 0, "y");
    (1073, 0, "p");
    (1074, 0, "e");
    (1075, 0, ":");
    (1076, 0, " ");
    (1077, 0, "'");
    (1078, 0, "m");
    (1079, 0, "e");
    (1080, 0, "d");
    (1081, 0, "i");
    (1082, 0, "t");
    (1083, 0, "a");
    (1084, 0, "t");
    (1085, 0, "e");
    (1086, 0, "'");
    (1087, 0, ",");
    (992, 0, "\n\t\t");
    (995, 0, "t");
    (996, 0, "y");
    (997, 0, "p");
    (998, 0, "e");
    (999, 0, "'");
    (999, 1, "");
    (999, 0, ":");
    (1000, 0, " ");
    (1001, 0, "'");
    (993, 9, "");
    (992, 1, "");
    (2060, 0, " ");
    (2061, 0, "t");
    (2062, 0, "y");
    (2063, 0, "p");
    (2064, 0, "e");
    (2065, 0, ":");
    (2066, 0, " ");
    (2067, 0, "'");
    (2068, 0, "c");
    (2069, 0, "o");
    (2070, 0, "m");
    (2071, 0, "p");
    (2072, 0, "l");
    (2073, 0, "e");
    (2074, 0, "t");
    (2075, 0, "e");
    (2076, 0, "'");
    (2077, 0, ",");
    (2077, 16, "");
    (2926, 9, "");
    (2917, 9, "new_stage");
    (2926, 0, ".");
    (2927, 0, "t");
    (2928, 0, "y");
    (2929, 0, "p");
    (2930, 0, "e");
    (2931, 0, " ");
    (2932, 0, "=");
    (2933, 0, "=");
    (2934, 0, "=");
    (2935, 0, " ");
    (2936, 0, "'");
    (2937, 0, "c");
    (2938, 0, "o");
    (2939, 0, "m");
    (2940, 0, "p");
    (2941, 0, "l");
    (2942, 0, "e");
    (2943, 0, "t");
    (2944, 0, "e");
    (2945, 0, "'");
    (3126, 9, "");
    (3113, 13, "current_stage");
    (3126, 0, ".");
    (3127, 0, "t");
    (3128, 0, "y");
    (3129, 0, "p");
    (3130, 0, "e");
    (3131, 0, " ");
    (3132, 0, "=");
    (3133, 0, "=");
    (3134, 0, "=");
    (3135, 0, " ");
    (3136, 0, "'");
    (3137, 0, "c");
    (3138, 0, "o");
    (3139, 0, "m");
    (3140, 0, "p");
    (3141, 0, "l");
    (3142, 0, "e");
    (3143, 0, "t");
    (3144, 0, "e");
    (3145, 0, "'");
    (3353, 9, "");
    (3340, 13, "current_stage");
    (3353, 0, ".");
    (3354, 0, "t");
    (3355, 0, "y");
    (3356, 0, "p");
    (3357, 0, "e");
    (3358, 0, " ");
    (3359, 0, "=");
    (3360, 0, "=");
    (3361, 0, "=");
    (3362, 0, " ");
    (3363, 0, "c");
    (3364, 0, "o");
    (3365, 0, "m");
    (3366, 0, "p");
    (3367, 0, "l");
    (3368, 0, "e");
    (3369, 0, "t");
    (3370, 0, "e");
    (3371, 0, "'");
    (3363, 0, "'");
    (4129, 9, ".");
    (4130, 0, "t");
    (4131, 0, "y");
    (4132, 0, "p");
    (4133, 0, "e");
    (4134, 0, " ");
    (4135, 0, "=");
    (4136, 0, "=");
    (4137, 0, "=");
    (4138, 0, " ");
    (4139, 0, "'");
    (4140, 0, "c");
    (4141, 0, "o");
    (4142, 0, "m");
    (4143, 0, "p");
    (4144, 0, "e");
    (4145, 0, "l");
    (4146, 0, "t");
    (4147, 0, "e");
    (4148, 0, "'");
    (4144, 4, "l");
    (4145, 0, "e");
    (4146, 0, "t");
    (4147, 0, "e");
    (4031, 22, "");
    (4030, 1, "");
    (4029, 1, "");
    (4029, 0, "c");
    (4030, 0, "u");
    (4031, 0, "r");
    (4032, 0, "r");
    (4033, 0, "e");
    (4034, 0, "n");
    (4035, 0, "t");
    (4029, 7, "current_stage");
    (4042, 0, ".");
    (4043, 0, "t");
    (4044, 0, "y");
    (4045, 0, "p");
    (4046, 0, "e");
    (4047, 0, " ");
    (4048, 0, "=");
    (4049, 0, "=");
    (4050, 0, "=");
    (4051, 0, " ");
    (4052, 0, "'");
    (4053, 0, "c");
    (4054, 0, "o");
    (4055, 0, "m");
    (4056, 0, "p");
    (4057, 0, "l");
    (4058, 0, "e");
    (4059, 0, "t");
    (4060, 0, "e");
    (4061, 0, "'");
    (9, 27, "");
    (9, 2, "");
    (2499, 4, "c");
    (2500, 0, "u");
    (2501, 0, "r");
    (2502, 0, "r");
    (2503, 0, "e");
    (2504, 0, "n");
    (2505, 0, "t");
    (2512, 4, "");
    (2841, 0, "// ");
    (4354, 0, "\t");
    (4355, 0, "i");
    (4356, 0, "f");
    (4357, 0, " ");
    (4358, 0, "c");
    (4359, 0, "u");
    (4360, 0, "r");
    (4361, 0, "r");
    (4362, 0, "e");
    (4363, 0, "n");
    (4358, 6, "current_stage");
    (4273, 0, "\n");
    (4274, 0, "c");
    (4275, 0, "o");
    (4276, 0, "n");
    (4277, 0, "s");
    (4278, 0, "t");
    (4279, 0, " ");
    (4280, 0, "o");
    (4281, 0, "r");
    (4282, 0, "d");
    (4283, 0, "e");
    (4284, 0, "r");
    (4285, 0, " ");
    (4286, 0, "=");
    (4287, 0, " ");
    (4288, 0, "[");
    (4289, 0, "'");
    (4290, 0, "m");
    (4291, 0, "e");
    (4292, 0, "d");
    (4293, 0, "i");
    (4294, 0, "t");
    (4295, 0, "a");
    (4296, 0, "t");
    (4297, 0, "e");
    (4298, 0, ",");
    (4299, 0, " ");
    (4299, 1, "");
    (4298, 1, "");
    (4298, 0, "'");
    (4299, 0, ",");
    (4300, 0, " ");
    (4301, 0, "'");
    (4302, 0, "b");
    (4303, 0, "e");
    (4304, 0, "a");
    (4305, 0, "d");
    (4306, 0, "'");
    (4307, 0, ",");
    (4308, 0, " ");
    (4309, 0, "'");
    (4310, 0, "c");
    (4311, 0, "o");
    (4312, 0, "m");
    (4313, 0, "p");
    (4314, 0, "l");
    (4315, 0, "e");
    (4316, 0, "t");
    (4317, 0, "e");
    (4318, 0, "'");
    (4319, 0, "]");
    (4402, 16, "");
    (4402, 0, "i");
    (4403, 0, "f");
    (4404, 0, " ");
    (4404, 1, "");
    (4403, 1, "");
    (4402, 1, "");
    (4402, 0, "c");
    (4403, 0, "o");
    (4404, 0, "n");
    (4405, 0, "s");
    (4406, 0, "t");
    (4407, 0, " ");
    (4408, 0, "c");
    (4409, 0, "u");
    (4410, 0, "r");
    (4411, 0, "r");
    (4412, 0, "e");
    (4413, 0, "n");
    (4414, 0, "t");
    (4415, 0, "_");
    (4416, 0, "i");
    (4416, 1, "");
    (4416, 0, "o");
    (4417, 0, " ");
    (4418, 0, "=");
    (4419, 0, " ");
    (4420, 0, "o");
    (4421, 0, "r");
    (4422, 0, "d");
    (4423, 0, "e");
    (4424, 0, "r");
    (4420, 5, "order");
    (4425, 0, ".");
    (4426, 0, "i");
    (4427, 0, "n");
    (4428, 0, "d");
    (4429, 0, "e");
    (4426, 4, "indexOf");
    (4433, 0, "(");
    (4434, 0, "c");
    (4435, 0, "u");
    (4436, 0, "r");
    (4437, 0, "r");
    (4438, 0, "e");
    (4439, 0, "n");
    (4434, 6, "current_stage");
    (4447, 0, ".");
    (4448, 0, "t");
    (4449, 0, "y");
    (4450, 0, "p");
    (4451, 0, "e");
    (4452, 0, ")");
    (4401, 0, "\tconst current_o = order.indexOf(current_stage.type)\n");
    (4461, 9, "e");
    (4462, 0, "l");
    (4463, 0, "e");
    (4464, 0, "m");
    (4465, 0, "e");
    (4466, 0, "n");
    (4467, 0, "t");
    (4468, 0, "_");
    (4469, 0, "o");
    (4487, 18, "t");
    (4488, 0, "y");
    (4489, 0, "p");
    (4490, 0, "e");
    (4492, 0, "\n\t");
    (4494, 0, "\n\t");
    (4493, 1, "");
    (4495, 0, "i");
    (4496, 0, "f");
    (4497, 0, " ");
    (4498, 0, "(");
    (4499, 0, "c");
    (4500, 0, "u");
    (4501, 0, "r");
    (4502, 0, "r");
    (4503, 0, "e");
    (4504, 0, "n");
    (4499, 6, "current_o");
    (4499, 0, " ");
    (4499, 0, "e");
    (4500, 0, "l");
    (4501, 0, "e");
    (4502, 0, "m");
    (4503, 0, "e");
    (4504, 0, "n");
    (4505, 0, "t");
    (4506, 0, "_");
    (4507, 0, "o");
    (4508, 0, " ");
    (4509, 0, "<");
    (4520, 0, ")");
    (4521, 0, " ");
    (4522, 0, "r");
    (4523, 0, "e");
    (4524, 0, "t");
    (4525, 0, "u");
    (4526, 0, "r");
    (4527, 0, "n");
    (4528, 0, " ");
    (4529, 0, "'");
    (4530, 0, "d");
    (4531, 0, "o");
    (4532, 0, "n");
    (4533, 0, "e");
    (4534, 0, "'");
    (4535, 0, "\n\t");
    (4537, 0, "e");
    (4538, 0, "l");
    (4539, 0, "s");
    (4540, 0, "e");
    (4541, 0, " ");
    (4542, 0, "i");
    (4543, 0, "f");
    (4544, 0, " ");
    (4545, 0, "(");
    (4546, 0, "e");
    (4547, 0, "l");
    (4548, 0, "e");
    (4549, 0, "m");
    (4546, 4, "element_o");
    (4555, 0, " ");
    (4556, 0, ">");
    (4557, 0, " ");
    (4558, 0, "c");
    (4559, 0, "u");
    (4560, 0, "r");
    (4561, 0, "r");
    (4562, 0, "e");
    (4563, 0, "n");
    (4564, 0, "t");
    (4558, 7, "current_o");
    (4567, 0, ")");
    (4568, 0, " ");
    (4569, 0, "r");
    (4570, 0, "e");
    (4571, 0, "t");
    (4572, 0, "u");
    (4573, 0, "r");
    (4574, 0, "n");
    (4575, 0, " ");
    (4576, 0, "'");
    (4577, 0, "w");
    (4578, 0, "a");
    (4579, 0, "i");
    (4580, 0, "t");
    (4581, 0, "i");
    (4582, 0, "n");
    (4583, 0, "g");
    (4584, 0, "'");
    (4585, 0, "\n\t");
    (4587, 0, "e");
    (4588, 0, "l");
    (4589, 0, "s");
    (4590, 0, "e");
    (4591, 0, " ");
    (4592, 0, "r");
    (4593, 0, "e");
    (4594, 0, "t");
    (4595, 0, "u");
    (4596, 0, "r");
    (4597, 0, "n");
    (4598, 0, " ");
    (4599, 0, "'");
    (4600, 0, "i");
    (4600, 1, "");
    (4600, 0, "p");
    (4600, 1, "");
    (4600, 0, "a");
    (4601, 0, "c");
    (4602, 0, "t");
    (4603, 0, "i");
    (4604, 0, "v");
    (4605, 0, "e");
    (4606, 0, "'");
    (5300, 0, " ");
    (5301, 0, "c");
    (5302, 0, "l");
    (5303, 0, "a");
    (5304, 0, "s");
    (5305, 0, "s");
    (5306, 0, "=");
    (5307, 0, "{");
    (5308, 0, "p");
    (5309, 0, "r");
    (5310, 0, "o");
    (5311, 0, "g");
    (5312, 0, "r");
    (5313, 0, "e");
    (5314, 0, "s");
    (5315, 0, "s");
    (5316, 0, "_");
    (5317, 0, "c");
    (5318, 0, "l");
    (5319, 0, "a");
    (5320, 0, "s");
    (5321, 0, "s");
    (5322, 0, "(");
    (5323, 0, "'");
    (5324, 0, "m");
    (5325, 0, "e");
    (5326, 0, "d");
    (5327, 0, "i");
    (5328, 0, "t");
    (5329, 0, "a");
    (5330, 0, "t");
    (5331, 0, "e");
    (5332, 0, "'");
    (5333, 0, ")");
    (5334, 0, "}");
    (5498, 0, " class={progress_class('meditate')}");
    (5522, 8, "");
    (5522, 0, "b");
    (5523, 0, "e");
    (5524, 0, "a");
    (5525, 0, "d");
    (5527, 0, ",");
    (5528, 0, " ");
    (5529, 0, "r");
    (5530, 0, ",");
    (5531, 0, " ");
    (5532, 0, "p");
    (7361, 0, "\n");
    (7362, 0, "\n");
    (7363, 0, ".");
    (7364, 0, "d");
    (7365, 0, "o");
    (7366, 0, "n");
    (7367, 0, "e");
    (7368, 0, " ");
    (7369, 0, "{");
    (7370, 0, " ");
    (7371, 0, "c");
    (7372, 0, "o");
    (7373, 0, "l");
    (7374, 0, "o");
    (7375, 0, "r");
    (7376, 0, ":");
    (7377, 0, " ");
    (7378, 0, "b");
    (7379, 0, "l");
    (7380, 0, "u");
    (7381, 0, "e");
    (7382, 0, ";");
    (7383, 0, " ");
    (7384, 0, "}");
    (7363, 0, ".done { color: blue; }\n");
    (7387, 4, "w");
    (7388, 0, "a");
    (7389, 0, "i");
    (7390, 0, "t");
    (7391, 0, "i");
    (7392, 0, "n");
    (7393, 0, "g");
    (7404, 4, "w");
    (7405, 0, "h");
    (7406, 0, "i");
    (7407, 0, "t");
    (7408, 0, "e");
    (7386, 0, ".waiting { color: white; }\n");
    (7414, 7, "a");
    (7415, 0, "c");
    (7416, 0, "t");
    (7417, 0, "i");
    (7418, 0, "v");
    (7419, 0, "e");
    (7430, 5, "p");
    (7431, 0, "u");
    (7432, 0, "r");
    (7433, 0, "p");
    (7434, 0, "l");
    (7435, 0, "e");
    (7430, 6, "m");
    (7431, 0, "a");
    (7432, 0, "g");
    (7430, 3, "magenta");
    (4345, 0, "s");
    (4346, 0, "t");
    (4347, 0, "a");
    (4348, 0, "g");
    (4349, 0, "e");
    (4350, 0, ",");
    (4351, 0, " ");
    (4441, 13, "s");
    (4374, 13, "s");
    (4430, 0, "t");
    (4375, 0, "t");
    (4432, 0, "a");
    (4376, 0, "a");
    (4434, 0, "g");
    (4377, 0, "g");
    (4436, 0, "e");
    (4378, 0, "e");
    (5314, 0, "c");
    (5315, 0, "u");
    (5316, 0, "r");
    (5317, 0, "r");
    (5318, 0, "e");
    (5319, 0, "n");
    (5320, 0, "t");
    (5321, 0, "_");
    (5322, 0, "s");
    (5323, 0, "t");
    (5324, 0, "a");
    (5325, 0, "g");
    (5326, 0, "e");
    (5327, 0, ",");
    (5328, 0, " ");
    (5527, 0, "current_stage, ");
    (4582, 0, " ");
    (4583, 0, "i");
    (4584, 0, "f");
    (4585, 0, " ");
    (4586, 0, "(");
    (4587, 0, "t");
    (4588, 0, "y");
    (4589, 0, "o");
    (4589, 1, "");
    (4589, 0, "p");
    (4590, 0, "e");
    (4591, 0, " ");
    (4592, 0, "=");
    (4593, 0, "=");
    (4594, 0, "=");
    (4595, 0, " ");
    (4596, 0, "'");
    (4597, 0, "b");
    (4598, 0, "e");
    (4599, 0, "a");
    (4600, 0, "d");
    (4601, 0, "'");
    (4602, 0, ")");
    (4603, 0, "\n\t");
    (4605, 0, "e");
    (4606, 0, "l");
    (4607, 0, "s");
    (4608, 0, "e");
    (4603, 0, " ");
    (4604, 0, "r");
    (4605, 0, "e");
    (4606, 0, "t");
    (4607, 0, "u");
    (4608, 0, "r");
    (4609, 0, "n");
    (4610, 0, " ");
    (4610, 1, "");
    (4610, 0, "\n\t");
    (4612, 0, "\t");
    (4611, 2, "");
    (4610, 1, "");
    (4610, 0, " ");
    (4611, 0, "r");
    (4612, 0, "=");
    (4613, 0, " ");
    (4613, 1, "");
    (4612, 1, "");
    (4612, 0, " ");
    (4613, 0, "=");
    (4614, 0, "=");
    (4615, 0, " ");
    (4616, 0, "s");
    (4617, 0, "t");
    (4618, 0, "a");
    (4619, 0, "g");
    (4620, 0, "e");
    (4621, 0, ".");
    (4622, 0, "r");
    (4623, 0, " ");
    (4624, 0, "?");
    (4625, 0, " ");
    (4615, 0, "=");
    (4320, 0, "\n");
    (4321, 0, "c");
    (4322, 0, "o");
    (4323, 0, "n");
    (4324, 0, "s");
    (4325, 0, "t");
    (4326, 0, " ");
    (4327, 0, "c");
    (4328, 0, "l");
    (4329, 0, "a");
    (4330, 0, "s");
    (4331, 0, "s");
    (4332, 0, "_");
    (4333, 0, "f");
    (4334, 0, "o");
    (4335, 0, "r");
    (4336, 0, "(");
    (4336, 1, "");
    (4336, 0, " ");
    (4337, 0, "=");
    (4338, 0, " ");
    (4339, 0, "x");
    (4340, 0, " ");
    (4341, 0, "=");
    (4342, 0, ">");
    (4343, 0, " ");
    (4344, 0, "x");
    (4345, 0, " ");
    (4346, 0, "<");
    (4347, 0, " ");
    (4348, 0, "0");
    (4349, 0, " ");
    (4350, 0, "?");
    (4351, 0, " ");
    (4352, 0, "'");
    (4353, 0, "d");
    (4354, 0, "o");
    (4355, 0, "n");
    (4356, 0, "e");
    (4357, 0, "'");
    (4358, 0, " ");
    (4359, 0, ":");
    (4360, 0, " ");
    (4358, 1, "");
    (4358, 0, "\n");
    (4359, 0, "\t");
    (4362, 0, "x");
    (4363, 0, " ");
    (4364, 0, ">");
    (4365, 0, " ");
    (4366, 0, "0");
    (4367, 0, " ");
    (4368, 0, "?");
    (4369, 0, " ");
    (4370, 0, "'");
    (4371, 0, "w");
    (4372, 0, "a");
    (4373, 0, "i");
    (4374, 0, "t");
    (4375, 0, "i");
    (4376, 0, "n");
    (4377, 0, "g");
    (4378, 0, "'");
    (4379, 0, "\n\t");
    (4381, 0, ":");
    (4382, 0, " ");
    (4383, 0, "'");
    (4384, 0, "a");
    (4385, 0, "c");
    (4386, 0, "t");
    (4387, 0, "i");
    (4388, 0, "v");
    (4389, 0, "e");
    (4390, 0, "'");
    (4391, 0, "\n\t");
    (4557, 0, "\n\t");
    (4392, 1, "");
    (4558, 0, "c");
    (4559, 0, "o");
    (4560, 0, "n");
    (4561, 0, "s");
    (4562, 0, "t");
    (4563, 0, " ");
    (4564, 0, "o");
    (4565, 0, "_");
    (4566, 0, "o");
    (4566, 1, "");
    (4566, 0, "d");
    (4567, 0, "i");
    (4568, 0, "f");
    (4569, 0, "f");
    (4570, 0, " ");
    (4571, 0, "=");
    (4572, 0, " ");
    (4573, 0, "element_o < current_o");
    (4583, 1, "");
    (4583, 0, "-");
    (4594, 0, "\n\t");
    (4596, 0, "r");
    (4597, 0, "e");
    (4598, 0, "t");
    (4599, 0, "u");
    (4600, 0, "r");
    (4601, 0, "n");
    (4602, 0, " ");
    (4603, 0, "o");
    (4604, 0, "_");
    (4605, 0, "d");
    (4606, 0, "i");
    (4607, 0, "f");
    (4608, 0, "f");
    (4609, 0, " ");
    (4610, 0, "=");
    (4611, 0, "=");
    (4612, 0, "=");
    (4613, 0, " ");
    (4614, 0, "0");
    (4615, 0, " ");
    (4615, 1, "");
    (4614, 1, "");
    (4613, 1, "");
    (4612, 1, "");
    (4611, 1, "");
    (4610, 1, "");
    (4610, 0, "!");
    (4611, 0, "=");
    (4612, 0, "=");
    (4613, 0, " ");
    (4614, 0, "0");
    (4615, 0, " ");
    (4616, 0, "?");
    (4617, 0, " ");
    (4618, 0, "c");
    (4619, 0, "l");
    (4620, 0, "a");
    (4621, 0, "s");
    (4622, 0, "s");
    (4623, 0, "_");
    (4624, 0, "f");
    (4625, 0, "o");
    (4626, 0, "r");
    (4618, 9, "class_for");
    (4627, 0, "(");
    (4628, 0, "o");
    (4629, 0, "_");
    (4630, 0, "d");
    (4631, 0, "i");
    (4632, 0, "f");
    (4633, 0, "f");
    (4634, 0, ")");
    (4635, 0, "\n\t");
    (4637, 0, "\t");
    (4638, 0, ":");
    (4639, 0, " ");
    (4641, 100, "");
    (4640, 1, "");
    (4640, 1, "");
    (4681, 0, "\n\t\t");
    (4684, 0, ":");
    (4685, 0, " ");
    (4686, 0, "c");
    (4687, 0, "l");
    (4688, 0, "a");
    (4689, 0, "s");
    (4690, 0, "s");
    (4691, 0, "_");
    (4692, 0, "f");
    (4693, 0, "o");
    (4694, 0, "r");
    (4686, 9, "class_for");
    (4695, 0, "(");
    (4696, 0, "0");
    (4697, 0, ")");
    (4699, 22, "");
    (4657, 0, " ");
    (4658, 0, "?");
    (4659, 24, "");
    (4656, 1, "");
    (4640, 1, "");
    (4657, 0, "\n\t\t");
    (4660, 0, "\t");
    (4660, 1, "");
    (4657, 3, "");
    (4640, 0, "(");
    (4656, 0, ")");
    (4659, 0, " return r === stage.r ? ");
    (4659, 24, "");
    (4656, 1, "");
    (4640, 1, "");
    (4657, 0, "\n\t\t");
    (4660, 0, "\t");
    (4661, 0, " return r === stage.r ? ");
    (4658, 4, "\t\t");
    (4660, 7, "");
    (4660, 0, "\t");
    (4556, 0, "\n\t");
    (4558, 0, "i");
    (4559, 0, "f");
    (4560, 0, " ");
    (4561, 0, "(");
    (4557, 5, "");
    (4556, 1, "");
    (4558, 0, "// ");
    (4606, 12, "element_o - current_o");
    (4616, 1, "");
    (4616, 0, "!");
    (4617, 0, "=");
    (4618, 0, "=");
    (4642, 6, "element_o - current_o");
    (4605, 0, "\n\t");
    (4607, 1, "\n\t");
    (4605, 0, " ");
    (4606, 0, "t");
    (4607, 0, "y");
    (4607, 1, "");
    (4606, 1, "");
    (4606, 0, "t");
    (4607, 0, "y");
    (4608, 0, "p");
    (4609, 0, "e");
    (4610, 0, " ");
    (4611, 0, "=");
    (4612, 0, "=");
    (4613, 0, "=");
    (4614, 0, " ");
    (4615, 0, "'");
    (4616, 0, "b");
    (4617, 0, "e");
    (4618, 0, "a");
    (4619, 0, "d");
    (4620, 0, "'");
    (4621, 0, " ");
    (4622, 0, "&");
    (4623, 0, "&");
    (4624, 0, " ");
    (4625, 0, "s");
    (4626, 0, "t");
    (4627, 0, "a");
    (4628, 0, "g");
    (4629, 0, "e");
    (4630, 0, ".");
    (4631, 0, "t");
    (4632, 0, "y");
    (4633, 0, "p");
    (4634, 0, "e");
    (4635, 0, " ");
    (4636, 0, "=");
    (4637, 0, "=");
    (4638, 0, "=");
    (4639, 0, " ");
    (4640, 0, "'");
    (4641, 0, "b");
    (4642, 0, "e");
    (4643, 0, "a");
    (4644, 0, "d");
    (4645, 0, "'");
    (4646, 0, " ");
    (4647, 0, "?");
    (4648, 0, "\n\t");
    (4650, 0, "\t");
    (4651, 0, ":");
    (4652, 0, " ");
    (4683, 32, "");
    (4653, 0, "class_for(element_o - current_o)");
    (4686, 89, "");
    (4646, 1, "");
    (4646, 0, "\n\t");
    (4648, 0, "\t");
    (4650, 0, " ");
    (4651, 0, "r");
    (4652, 0, " ");
    (4653, 0, "=");
    (4654, 0, "=");
    (4655, 0, "=");
    (4656, 0, " ");
    (4657, 0, "s");
    (4658, 0, "t");
    (4659, 0, "a");
    (4660, 0, "g");
    (4661, 0, "e");
    (4662, 0, ".");
    (4663, 0, "r");
    (4664, 0, " ");
    (4665, 0, "?");
    (4666, 0, " ");
    (4667, 0, "c");
    (4668, 0, "l");
    (4669, 0, "a");
    (4670, 0, "s");
    (4671, 0, "s");
    (4672, 0, "_");
    (4673, 0, "f");
    (4674, 0, "o");
    (4675, 0, "r");
    (4667, 9, "class_for");
    (4676, 0, "(");
    (4677, 0, "p");
    (4678, 0, " ");
    (4679, 0, "-");
    (4680, 0, " ");
    (4681, 0, "s");
    (4682, 0, "t");
    (4683, 0, "a");
    (4684, 0, "g");
    (4685, 0, "e");
    (4686, 0, ".");
    (4687, 0, "p");
    (4688, 0, ")");
    (4689, 0, " ");
    (4690, 0, ":");
    (4691, 0, " ");
    (4651, 0, "(");
    (4693, 0, "c");
    (4694, 0, "l");
    (4695, 0, "a");
    (4696, 0, "s");
    (4697, 0, "s");
    (4698, 0, "_");
    (4699, 0, "f");
    (4700, 0, "o");
    (4701, 0, "r");
    (4693, 9, "class_for");
    (4702, 0, "(");
    (4703, 0, "r");
    (4704, 0, " ");
    (4705, 0, "-");
    (4706, 0, " ");
    (4707, 0, "s");
    (4708, 0, "t");
    (4709, 0, "a");
    (4710, 0, "g");
    (4711, 0, "e");
    (4712, 0, ".");
    (4713, 0, "r");
    (4714, 0, ")");
    (4715, 0, ")");
    (7547, 12, "");
    (7547, 0, "t");
    (7548, 0, "e");
    (7549, 0, "x");
    (7550, 0, "t");
    (7551, 0, "-");
    (7552, 0, "d");
    (7553, 0, "e");
    (7554, 0, "c");
    (7547, 8, "text-decoration: ;");
    (7564, 0, "s");
    (7565, 0, "t");
    (7566, 0, "r");
    (7567, 0, "i");
    (7564, 4, "");
    (7564, 0, "l");
    (7565, 0, "i");
    (7566, 0, "n");
    (7567, 0, "e");
    (7564, 4, "line-through");
    (7632, 0, " ");
    (7633, 0, "b");
    (7634, 0, "o");
    (7635, 0, "r");
    (7636, 0, "d");
    (7637, 0, "e");
    (7638, 0, "r");
    (7639, 0, ":");
    (7640, 0, " ");
    (7641, 0, "1");
    (7642, 0, "p");
    (7643, 0, "x");
    (7644, 0, " ");
    (7645, 0, "s");
    (7646, 0, "o");
    (7647, 0, "l");
    (7648, 0, "i");
    (7649, 0, "d");
    (7650, 0, " ");
    (7651, 0, "w");
    (7652, 0, "h");
    (7653, 0, "i");
    (7654, 0, "t");
    (7655, 0, "e");
    (7656, 0, ";");
    (7598, 5, "#");
    (7599, 0, "e");
    (7600, 0, "e");
    (7601, 0, "e");
    (7601, 1, "");
    (7600, 1, "");
    (7599, 1, "");
    (7599, 0, "8");
    (7600, 0, "8");
    (7601, 0, "8");
    (4756, 0, "\n");
    (4756, 0, "\n");
    (4757, 0, "l");
    (4758, 0, "e");
    (4759, 0, "t");
    (4760, 0, " ");
    (4761, 0, "s");
    (4762, 0, "e");
    (4763, 0, "t");
    (4764, 0, "t");
    (4765, 0, "i");
    (4766, 0, "n");
    (4767, 0, "g");
    (4768, 0, "s");
    (4769, 0, "_");
    (4770, 0, "d");
    (4771, 0, "i");
    (4772, 0, "s");
    (4773, 0, "a");
    (4774, 0, "b");
    (4775, 0, "l");
    (4776, 0, "e");
    (4777, 0, "d");
    (4778, 0, " ");
    (4779, 0, "=");
    (4780, 0, " ");
    (4757, 3, "$");
    (4758, 0, ":");
    (4780, 0, "s");
    (4781, 0, "t");
    (4782, 0, "a");
    (4783, 0, "t");
    (4784, 0, "e");
    (4785, 0, " ");
    (4786, 0, "=");
    (4787, 0, "=");
    (4788, 0, "=");
    (4789, 0, " ");
    (4790, 0, "'");
    (4791, 0, "p");
    (4792, 0, "l");
    (4793, 0, "a");
    (4794, 0, "y");
    (4795, 0, "i");
    (4796, 0, "n");
    (4797, 0, "g");
    (4798, 0, "'");
    (4756, 0, "\n");
    (4757, 0, "/");
    (4758, 0, "/");
    (4759, 0, " ");
    (4760, 0, "T");
    (4761, 0, "h");
    (4762, 0, "i");
    (4763, 0, "s");
    (4764, 0, " ");
    (4765, 0, "w");
    (4766, 0, "i");
    (4767, 0, "l");
    (4768, 0, "l");
    (4769, 0, " ");
    (4770, 0, "g");
    (4771, 0, "e");
    (4772, 0, "t");
    (4773, 0, " ");
    (4774, 0, "m");
    (4775, 0, "o");
    (4776, 0, "r");
    (4777, 0, "e");
    (4778, 0, " ");
    (4779, 0, "c");
    (4780, 0, "o");
    (4781, 0, "m");
    (4782, 0, "p");
    (4783, 0, "l");
    (4784, 0, "e");
    (4785, 0, "x");
    (4786, 0, " ");
    (4787, 0, "i");
    (4788, 0, "n");
    (4789, 0, " ");
    (4790, 0, "t");
    (4791, 0, "i");
    (4792, 0, "m");
    (4793, 0, "e");
    (4794, 0, ".");
    (4795, 0, " ");
    (4796, 0, "F");
    (4797, 0, "o");
    (4798, 0, "r");
    (4799, 0, " ");
    (4800, 0, "n");
    (4801, 0, "o");
    (4802, 0, "w");
    (4803, 0, ",");
    (4804, 0, " ");
    (4805, 0, "p");
    (4806, 0, "a");
    (4807, 0, "u");
    (4808, 0, "s");
    (4809, 0, "e");
    (4810, 0, " ");
    (4811, 0, "t");
    (4812, 0, "h");
    (4813, 0, "e");
    (4814, 0, " ");
    (4815, 0, "g");
    (4816, 0, "a");
    (4817, 0, "m");
    (4818, 0, "e");
    (4819, 0, " ");
    (4820, 0, "t");
    (4821, 0, "o");
    (4822, 0, " ");
    (4823, 0, "f");
    (4824, 0, "i");
    (4825, 0, "d");
    (4826, 0, "d");
    (4827, 0, "l");
    (4828, 0, "e");
    (4829, 0, ".");
    (6440, 0, "d");
    (6441, 0, "i");
    (6442, 0, "s");
    (6443, 0, "a");
    (6444, 0, "b");
    (6445, 0, "l");
    (6446, 0, "e");
    (6447, 0, "d");
    (6448, 0, "=");
    (6449, 0, "{");
    (6450, 0, " ");
    (6450, 0, "s");
    (6451, 0, "e");
    (6452, 0, "t");
    (6453, 0, "t");
    (6450, 4, "settings_disabled");
    (6467, 0, "}");
    (6739, 0, " disabled={settings_disabled}");
    (6887, 0, " disabled={settings_disabled}");
    (7041, 0, " disabled={settings_disabled}");
    (7192, 0, " disabled={settings_disabled}");
    (3949, 0, "\n");
    (3950, 0, "#");
    (3951, 0, ":");
    (3952, 0, " ");
    (3952, 1, "");
    (3951, 1, "");
    (3950, 1, "");
    (3950, 0, "$");
    (3951, 0, ":");
    (3952, 0, " ");
    (3953, 0, "current_stage.type === 'complete'");
    (3953, 0, "c");
    (3954, 0, "o");
    (3955, 0, "n");
    (3956, 0, "s");
    (3957, 0, "o");
    (3958, 0, "l");
    (3959, 0, "e");
    (3960, 0, ".");
    (3961, 0, "l");
    (3962, 0, "o");
    (3963, 0, "g");
    (3961, 3, "log");
    (3964, 0, "(");
    (3965, 0, "'");
    (3966, 0, "c");
    (3967, 0, "u");
    (3968, 0, "r");
    (3969, 0, "r");
    (3970, 0, "e");
    (3971, 0, "n");
    (3972, 0, " ");
    (3973, 0, "t");
    (3973, 1, "");
    (3972, 1, "");
    (3972, 0, "t");
    (3973, 0, " ");
    (3974, 0, "s");
    (3975, 0, "t");
    (3976, 0, "a");
    (3977, 0, "g");
    (3978, 0, "e");
    (3979, 0, " ");
    (3980, 0, "t");
    (3981, 0, "y");
    (3982, 0, "p");
    (3983, 0, "e");
    (3984, 0, "'");
    (3985, 0, ",");
    (3986, 0, " ");
    (4005, 15, "");
    (4005, 0, ")");
    (4000, 0, " ");
    (4001, 0, "&");
    (4002, 0, "&");
    (4003, 0, " ");
    (4004, 0, "c");
    (4005, 0, "u");
    (4006, 0, "r");
    (4007, 0, "r");
    (4008, 0, "e");
    (4009, 0, "n");
    (4010, 0, "t");
    (4011, 0, "_");
    (4004, 8, "current_stage");
    (4109, 0, "\n");
    (4110, 0, "#");
    (4111, 0, ":");
    (4112, 0, " ");
    (4112, 1, "");
    (4111, 1, "");
    (4110, 1, "");
    (4110, 0, "$");
    (4111, 0, ":");
    (4112, 0, " ");
    (4113, 0, "c");
    (4114, 0, "o");
    (4115, 0, "n");
    (4116, 0, "s");
    (4117, 0, "o");
    (4118, 0, "l");
    (4119, 0, "e");
    (4113, 7, "console");
    (4120, 0, ".");
    (4121, 0, "l");
    (4122, 0, "o");
    (4123, 0, "g");
    (4121, 3, "log");
    (4124, 0, "(");
    (4125, 0, "'");
    (4126, 0, "g");
    (4127, 0, "a");
    (4128, 0, "m");
    (4129, 0, "e");
    (4130, 0, "_");
    (4131, 0, "c");
    (4132, 0, "o");
    (4133, 0, "m");
    (4134, 0, "p");
    (4135, 0, "l");
    (4136, 0, "e");
    (4137, 0, "t");
    (4138, 0, "e");
    (4139, 0, "d");
    (4140, 0, "'");
    (4141, 0, ",");
    (4142, 0, " ");
    (4143, 0, "g");
    (4144, 0, "a");
    (4145, 0, "m");
    (4146, 0, "e");
    (4147, 0, "_");
    (4148, 0, "c");
    (4149, 0, "o");
    (4150, 0, "m");
    (4151, 0, "p");
    (4152, 0, "l");
    (4143, 10, "game_completed");
    (4157, 0, ")");
    (4158, 0, "\n");
    (4109, 0, ")");
    (4076, 0, "(");
    (4022, 0, ",");
    (4023, 0, " ");
    (4024, 0, "(current_stage.type === 'complete')");
    (4025, 0, "c");
    (4026, 0, "u");
    (4027, 0, "r");
    (4028, 0, "r");
    (4029, 0, "e");
    (4030, 0, "n");
    (4031, 0, "t");
    (4032, 0, "_");
    (4033, 0, "s");
    (4034, 0, "t");
    (4035, 0, "a");
    (4036, 0, "g");
    (4037, 0, "e");
    (4038, 0, " ");
    (4039, 0, "&");
    (4040, 0, "&");
    (4041, 0, " ");
    (3950, 0, "// ");
    ( 4081,
      0,
      "$: game_completed = current_stage == null ? false : (current_stage.type \
       === 'complete')\n" );
    (4081, 0, "// ");
    (4206, 17, "&");
    (4207, 0, "&");
    (4172, 0, "// ");
    (4081, 3, "");
    (4084, 0, "{");
    (4085, 0, "\n\t");
    (4171, 0, "\n\t");
    (4172, 1, "}");
    (4085, 0, "\n\t");
    (4087, 0, "c");
    (4088, 0, "o");
    (4089, 0, "n");
    (4090, 0, "s");
    (4091, 0, "o");
    (4092, 0, "l");
    (4093, 0, "e");
    (4087, 7, "console");
    (4094, 0, ".");
    (4095, 0, "l");
    (4096, 0, "o");
    (4097, 0, "g");
    (4095, 3, "log");
    (4098, 0, "(");
    (4099, 0, "'");
    (4100, 0, "u");
    (4101, 0, "p");
    (4102, 0, "d");
    (4103, 0, "a");
    (4104, 0, "t");
    (4105, 0, "e");
    (4106, 0, "i");
    (4107, 0, "n");
    (4107, 1, "");
    (4106, 1, "");
    (4105, 1, "");
    (4105, 0, "i");
    (4106, 0, "n");
    (4107, 0, "g");
    (4108, 0, " ");
    (4109, 0, "g");
    (4110, 0, "a");
    (4111, 0, "m");
    (4112, 0, "e");
    (4113, 0, "_");
    (4114, 0, "c");
    (4115, 0, "o");
    (4116, 0, "m");
    (4117, 0, "p");
    (4118, 0, "l");
    (4119, 0, "e");
    (4120, 0, "t");
    (4121, 0, "e");
    (4122, 0, "d");
    (4123, 0, "'");
    (4124, 0, ",");
    (4125, 0, " ");
    (4126, 0, "c");
    (4127, 0, "u");
    (4128, 0, "r");
    (4129, 0, "r");
    (4130, 0, "e");
    (4131, 0, "n");
    (4126, 6, "current_stage");
    (4139, 0, ")");
    (4305, 0, "// ");
    (3950, 3, "");
    (4022, 54, "");
    (3950, 74, "");
    (4098, 0, "\n");
    (4099, 0, "\n");
    ( 4099,
      0,
      "$: console.log('current stage type', current_stage && current_stage.type)\n"
    );
    (452, 0, "// ");
    (449, 0, "// ");
    (424, 0, "// ");
    (396, 0, "// ");
    (391, 0, "// ");
    (2856, 3, "");
    (3530, 0, " ");
    (3530, 0, "s");
    (3531, 0, "e");
    (3532, 0, "t");
    (3533, 0, "T");
    (3530, 4, "setTimeout");
    (3540, 1, "");
    (3540, 0, "(");
    (3541, 0, "(");
    (3542, 0, ")");
    (3543, 0, " ");
    (3544, 0, "=");
    (3545, 0, ">");
    (3546, 0, " ");
    (3558, 0, ")");
    (464, 3, "");
    (458, 3, "");
    (430, 3, "");
    (399, 3, "");
    (391, 3, "");
    (315, 138, "");
    (314, 1, "");
    (3662, 0, "\n");
    ( 3663,
      0,
      "let internal_state\n\
       $: internal_state = game_completed ? 'completed' : state\n\
       $: {\n\
       \tif (state !== 'playing') {\n\
       \t\tgame_completed = false\n\
       \t}\n\
       }" );
    (3801, 0, "\n");
    (255, 0, "// ");
    (3968, 0, "\n");
    (3969, 0, "l");
    (3970, 0, "e");
    (3971, 0, "t");
    (3972, 0, " ");
    (3973, 0, "g");
    (3974, 0, "a");
    (3975, 0, "m");
    (3976, 0, "e");
    (3977, 0, "_");
    (3978, 0, "c");
    (3979, 0, "o");
    (3980, 0, "m");
    (3981, 0, "p");
    (3982, 0, "l");
    (3983, 0, "e");
    (3984, 0, "t");
    (3985, 0, "e");
    (3986, 0, "d");
    (3969, 167, "");
    (3665, 0, "\n");
    ( 3666,
      0,
      "let game_completed\n\
       $: {\n\
       \tconsole.log('updating game_completed', current_stage)\n\
       \tgame_completed = current_stage == null ? false : (current_stage.type \
       === 'complete')\n\
       }\n" );
    (3833, 0, "\n");
    (3833, 1, "");
    (3971, 0, "// ");
    (3968, 0, "// ");
    (3943, 0, "// ");
    (3915, 0, "// ");
    (3910, 0, "// ");
    (3763, 0, "s");
    (3764, 0, "t");
    (3765, 0, "a");
    (3766, 0, "t");
    (3767, 0, "e");
    (3768, 0, " ");
    (3769, 0, "!");
    (3770, 0, "=");
    (3771, 0, "=");
    (3772, 0, " ");
    (3773, 0, "'");
    (3774, 0, "p");
    (3775, 0, "l");
    (3776, 0, "a");
    (3777, 0, "y");
    (3778, 0, "i");
    (3779, 0, "n");
    (3780, 0, "g");
    (3781, 0, "'");
    (3782, 0, " ");
    (3783, 0, "|");
    (3784, 0, "|");
    (3785, 0, " ");
    (3763, 0, "(");
    (3808, 0, ")");
    (3817, 1, "");
    (3817, 0, "\n\t");
    (3936, 78, "");
    (4101, 0, "// ");
    (4097, 0, "// ");
    (4050, 0, "// ");
    (4045, 0, "// ");
    (4188, 76, "");
    (4241, 18, "");
    (3936, 0, "\n");
    (3937, 0, "let bar_width = 0\n");
    (3954, 1, "");
    (4043, 0, "// ");
    (4043, 3, "");
    (3954, 0, "\n");
    (3937, 18, "");
    (3936, 1, "");
    (4241, 0, "let bar_width = 0\n");
    ( 4188,
      0,
      "// $: game_completed = current_stage && (current_stage.type === \
       'complete')\n" );
    (4110, 3, "");
    (4103, 3, "");
    (4053, 3, "");
    (4045, 3, "");
    (4101, 0, "// ");
    (4097, 0, "// ");
    (4050, 0, "// ");
    (4045, 0, "// ");
    (4025, 0, "// ");
    (4045, 0, "// ");
    (4042, 0, "// ");
    (4023, 0, "// ");
    (3979, 0, "// ");
    (3942, 0, "// ");
    (3937, 0, "// ");
    (4519, 0, "internal_state === 'waiting'");
    (4547, 0, " ");
    (4548, 0, "?");
    (4549, 0, " ");
    (4550, 0, "'Waiting for game to start'");
    (4577, 0, "\n");
    (4578, 0, ":");
    (4579, 0, " ");
    (4578, 0, "\t");
    (3936, 401, "");
    (3691, 0, "// ");
    (3408, 0, " ");
    (3409, 0, "/");
    (3410, 0, "/");
    (3411, 0, " ");
    (3412, 0, "s");
    (3413, 0, "e");
    (3414, 0, "t");
    (3415, 0, "T");
    (3416, 0, "i");
    (3417, 0, "m");
    (3418, 0, "e");
    (3419, 0, "o");
    (3420, 0, "u");
    (3421, 0, "t");
    (3422, 0, " ");
    (3423, 0, "n");
    (3424, 0, "e");
    (3425, 0, "e");
    (3426, 0, "d");
    (3427, 0, "e");
    (3428, 0, "d");
    (3429, 0, " ");
    (3430, 0, "t");
    (3431, 0, "o");
    (3432, 0, " ");
    (3433, 0, "g");
    (3434, 0, "e");
    (3435, 0, "t");
    (3436, 0, " ");
    (3437, 0, "a");
    (3438, 0, "r");
    (3439, 0, "o");
    (3440, 0, "u");
    (3441, 0, "n");
    (3442, 0, "d");
    (3443, 0, " ");
    (3444, 0, "s");
    (3445, 0, "o");
    (3446, 0, "m");
    (3447, 0, "e");
    (3448, 0, " ");
    (3449, 0, "w");
    (3450, 0, "e");
    (3451, 0, "i");
    (3452, 0, "r");
    (3453, 0, "d");
    (3454, 0, " ");
    (3455, 0, "r");
    (3456, 0, "a");
    (3457, 0, "c");
    (3458, 0, "e");
    (3459, 0, " ");
    (3460, 0, "c");
    (3461, 0, "o");
    (3462, 0, "n");
    (3463, 0, "d");
    (3464, 0, "i");
    (3465, 0, "t");
    (3466, 0, "i");
    (3467, 0, "o");
    (3468, 0, "n");
    (3469, 0, ".");
    (3408, 1, "");
    (3408, 61, "");
    (3376, 0, "\n\t\t");
    (3379, 0, "// setTimeout needed to get around some weird race condition.");
    (3440, 0, " ");
    (3441, 0, "T");
    (3442, 0, "h");
    (3443, 0, "e");
    (3444, 0, "r");
    (3445, 0, "e");
    (3446, 0, "'");
    (3447, 0, "s");
    (3448, 0, " ");
    (3449, 0, "p");
    (3450, 0, "r");
    (3451, 0, "o");
    (3452, 0, "b");
    (3453, 0, "a");
    (3454, 0, "b");
    (3455, 0, "l");
    (3456, 0, "y");
    (3457, 0, " ");
    (3458, 0, "o");
    (3459, 0, "t");
    (3460, 0, "h");
    (3461, 0, "e");
    (3462, 0, "r");
    (3463, 0, " ");
    (3464, 0, "w");
    (3465, 0, "a");
    (3466, 0, "y");
    (3467, 0, "s");
    (3468, 0, " ");
    (3469, 0, "t");
    (3470, 0, "o");
    (3471, 0, " ");
    (3458, 14, "b");
    (3459, 0, "e");
    (3460, 0, "t");
    (3461, 0, "t");
    (3462, 0, "e");
    (3463, 0, "r");
    (3464, 0, " ");
    (3465, 0, "w");
    (3466, 0, "a");
    (3467, 0, "y");
    (3468, 0, "s");
    (3469, 0, " ");
    (3470, 0, "t");
    (3471, 0, "o");
    (3472, 0, " ");
    (3473, 0, "s");
    (3474, 0, "t");
    (3475, 0, "r");
    (3476, 0, "u");
    (3477, 0, "c");
    (3478, 0, "t");
    (3479, 0, "u");
    (3480, 0, "r");
    (3481, 0, "e");
    (3482, 0, " ");
    (3483, 0, "t");
    (3484, 0, "h");
    (3485, 0, "i");
    (3486, 0, "s");
    (3487, 0, " ");
    (3488, 0, ":");
    (3489, 0, "/");
    (3440, 1, "");
    (3440, 0, "\n\t\t");
    (3443, 0, "/");
    (3444, 0, "/");
    (3445, 0, " ");
    (4160, 0, "\n\t");
    (4162, 0, ":");
    (4163, 0, " ");
    (4164, 0, "s");
    (4165, 0, "t");
    (4166, 0, "a");
    (4167, 0, "r");
    (4167, 1, "");
    (4166, 1, "");
    (4165, 1, "");
    (4164, 1, "");
    (4164, 0, "c");
    (4165, 0, "u");
    (4166, 0, "r");
    (4167, 0, "r");
    (4168, 0, "e");
    (4169, 0, "n");
    (4164, 6, "current_stage");
    (4177, 0, ".");
    (4178, 0, "t");
    (4179, 0, "y");
    (4180, 0, "p");
    (4181, 0, "e");
    (4182, 0, " ");
    (4183, 0, "=");
    (4184, 0, "=");
    (4185, 0, "=");
    (4186, 0, " ");
    (4187, 0, "'");
    (4188, 0, "w");
    (4189, 0, "a");
    (4190, 0, "i");
    (4191, 0, "t");
    (4192, 0, "i");
    (4193, 0, "n");
    (4194, 0, "g");
    (4195, 0, "'");
    (4196, 0, " ");
    (4197, 0, "?");
    (4198, 0, " ");
    (4199, 0, "0");
    (4164, 18, "s");
    (4165, 0, "t");
    (4166, 0, "a");
    (4167, 0, "t");
    (4168, 0, "e");
    (4187, 0, "\n\t: current_stage.type === 'complete' ? 100");
    (4161, 1, "");
    (4118, 43, "");
    (4118, 0, "\t");
    (5535, 0, "\n\t\t\t");
    (5539, 0, "<");
    (5540, 0, "d");
    (5541, 0, "i");
    (5542, 0, "v");
    (5543, 0, " ");
    (5544, 0, "i");
    (5545, 0, "d");
    (5546, 0, "=");
    (5544, 3, "");
    (5543, 1, "");
    (5543, 0, ">");
    (5544, 0, "{");
    (5545, 0, "s");
    (5546, 0, "t");
    (5547, 0, "a");
    (5548, 0, "g");
    (5549, 0, "e");
    (5550, 0, "_");
    (5551, 0, "s");
    (5552, 0, "e");
    (5553, 0, "c");
    (5554, 0, "s");
    (5555, 0, "_");
    (5556, 0, "r");
    (5557, 0, "e");
    (5558, 0, "m");
    (5559, 0, "a");
    (5560, 0, "i");
    (5561, 0, "n");
    (5562, 0, "i");
    (5563, 0, "n");
    (5564, 0, "g");
    (5565, 0, "}");
    (5566, 0, "<");
    (5567, 0, "/");
    (5568, 0, "d");
    (5569, 0, "i");
    (5570, 0, "v");
    (5571, 0, ">");
    (5545, 20, "o");
    (5546, 0, "f");
    (5547, 0, "f");
    (5548, 0, "s");
    (5549, 0, "e");
    (5550, 0, "t");
    (5545, 6, "offset_sec");
    (5562, 0, "\n\t\t<div id='progresscontainer'>");
    (5536, 3, "\t\t");
    (5505, 31, "");
    (5513, 0, "current_stage.duration");
    (5535, 0, " ");
    (5536, 0, "-");
    (5537, 0, " ");
    (5526, 0, " ");
    (5527, 0, "?");
    (5528, 0, " ");
    (5529, 0, "current_stage");
    (5564, 0, " ");
    (5565, 0, ":");
    (5566, 0, " ");
    (5567, 0, "'");
    (5568, 0, "'");
    (8062, 1, "");
    (8062, 0, "\n\t");
    (8079, 1, "");
    (8079, 0, "\n\t");
    (8105, 1, "");
    (8105, 0, "\n");
    (8079, 0, " */");
    (8064, 0, "/* ");
    (5526, 0, " ");
    (5527, 0, "&");
    (5528, 0, "&");
    (5529, 0, " ");
    (5530, 0, "!");
    (5531, 0, "c");
    (5532, 0, "o");
    (5533, 0, "m");
    (5534, 0, "p");
    (5535, 0, "l");
    (5513, 23, "i");
    (5514, 0, "n");
    (5515, 0, "t");
    (5516, 0, "e");
    (5517, 0, "r");
    (5518, 0, "n");
    (5519, 0, "a");
    (5520, 0, "l");
    (5521, 0, "_");
    (5513, 9, "internal_state");
    (5513, 14, "internal_");
    (5513, 9, "current_stage && !compl");
    (5531, 5, "g");
    (5532, 0, "a");
    (5533, 0, "m");
    (5534, 0, "e");
    (5535, 0, "_");
    (5536, 0, "c");
    (5537, 0, "o");
    (5538, 0, "m");
    (5539, 0, "p");
    (5540, 0, "l");
    (5531, 10, "game_completed");
    (5545, 0, ")");
    (5513, 0, "(");
    (5514, 32, "");
    (5514, 0, "a");
    (5514, 1, "");
    (5514, 0, "i");
    (5515, 0, "n");
    (5516, 0, "t");
    (5517, 0, "e");
    (5518, 0, "r");
    (5519, 0, "n");
    (5514, 6, "internal_state");
    (5528, 0, " ");
    (5529, 0, "=");
    (5530, 0, "=");
    (5531, 0, "=");
    (5532, 0, " ");
    (5533, 0, "'");
    (5534, 0, "p");
    (5535, 0, "l");
    (5536, 0, "a");
    (5537, 0, "y");
    (5538, 0, "i");
    (5539, 0, "n");
    (5540, 0, "g");
    (5541, 0, "'");
    (5542, 0, " ");
    (5543, 0, "|");
    (5544, 0, "|");
    (5545, 0, " ");
    (5546, 0, "i");
    (5547, 0, "n");
    (5548, 0, "t");
    (5549, 0, "e");
    (5550, 0, "r");
    (5551, 0, "n");
    (5546, 6, "internal_state");
    (5560, 0, " ");
    (5561, 0, "-");
    (5562, 0, "-");
    (5562, 1, "");
    (5561, 1, "");
    (5561, 0, "=");
    (5562, 0, "=");
    (5563, 0, "=");
    (5564, 0, " ");
    (5565, 0, "'");
    (5566, 0, "p");
    (5567, 0, "a");
    (5568, 0, "u");
    (5569, 0, "s");
    (5570, 0, "e");
    (5571, 0, "d");
    (5572, 0, "'");
    (5573, 0, " ");
    (5574, 0, "&");
    (5575, 0, "&");
    (5576, 0, " ");
    (5577, 0, "c");
    (5578, 0, "u");
    (5579, 0, "r");
    (5580, 0, "r");
    (5581, 0, "e");
    (5582, 0, "n");
    (5583, 0, "t");
    (5584, 0, "_");
    (5577, 8, "current_stage");
    (5573, 0, ")");
    (5514, 0, "(");
    (8018, 31, "");
    (5357, 0, "\n\t\t");
    (5360, 0, "<");
    (5361, 0, "a");
    (5362, 0, " ");
    (5363, 0, "h");
    (5364, 0, "r");
    (5365, 0, "e");
    (5366, 0, "f");
    (5367, 0, "=");
    (5368, 0, "'");
    (5369, 0, ".");
    (8, 0, "\nimport Game from \"./Game.svelte\"\n");
    (5404, 0, "Game");
    (5408, 0, ".");
    (5409, 0, "/");
    (5410, 0, ".");
    (5411, 0, ".");
    (5412, 0, "/");
    (5408, 5, "");
    (5404, 4, "");
    (8, 34, "");
    (5370, 0, ".");
    (5371, 0, "/");
    (5372, 0, ".");
    (5373, 0, ".");
    (5374, 0, "\"");
    (5368, 1, "");
    (5368, 0, "\"");
    (5375, 0, ">");
    (5376, 0, "J");
    (5377, 0, "o");
    (5378, 0, "i");
    (5379, 0, "n");
    (5380, 0, " ");
    (5381, 0, "a");
    (5382, 0, "n");
    (5383, 0, "o");
    (5384, 0, "h");
    (5385, 0, "t");
    (5386, 0, "e");
    (5387, 0, "r");
    (5388, 0, " ");
    (5389, 0, "r");
    (5381, 9, "a");
    (5382, 0, "n");
    (5383, 0, "o");
    (5384, 0, "t");
    (5385, 0, "h");
    (5386, 0, "e");
    (5387, 0, "r");
    (5388, 0, " ");
    (5389, 0, "r");
    (5390, 0, "o");
    (5391, 0, "o");
    (5392, 0, "m");
    (5393, 0, "<");
    (5394, 0, "/");
    (5395, 0, "a");
    (5396, 0, ">");
    (5360, 37, "");
    (5352, 0, " ");
    (5353, 0, "<a href=\"../..\">Join another room</a>");
    (5396, 2, "");
    (5395, 1, "");
    (5395, 0, "\n");
    (5396, 0, "\t\t");
    (5353, 37, "");
    (5352, 1, "");
    (5360, 0, "<a href=\"../..\">Join another room</a>");
    (5376, 13, "C");
    (5377, 0, "h");
    (5378, 0, "a");
    (5379, 0, "n");
    (5380, 0, "g");
    (5381, 0, "e");
    (5382, 0, " ");
    (8045, 9, "=");
    (8045, 1, "");
    (5677, 31, "");
    (5539, 2, "\t\t\t");
    (5539, 0, "\t\t<div id='progresscontainer'>\n");
    (5577, 0, " ");
    (5578, 0, "i");
    (5579, 0, "d");
    (5580, 0, "=");
    (5581, 0, "t");
    (5582, 0, "i");
    (5583, 0, "m");
    (5584, 0, "e");
    (5585, 0, "'");
    (5581, 0, "'");
    (5582, 0, "p");
    (5583, 0, "r");
    (5584, 0, "o");
    (5585, 0, "g");
    (5586, 0, "r");
    (5587, 0, "e");
    (5588, 0, "s");
    (5589, 0, "s");
    (5590, 0, "_");
    (7954, 0, "\n");
    (7954, 0, "\n");
    (7955, 0, "#");
    (7956, 0, "p");
    (7957, 0, "r");
    (7958, 0, "o");
    (7959, 0, "g");
    (7960, 0, "r");
    (7961, 0, "e");
    (7962, 0, "s");
    (7963, 0, "s");
    (7964, 0, "-");
    (7965, 0, "t");
    (7966, 0, "i");
    (7967, 0, "m");
    (7968, 0, "e");
    (7964, 1, "");
    (7964, 0, "_");
    (7969, 0, " ");
    (7970, 0, "{");
    (7971, 0, "\n\t");
    (7973, 0, "\n\t");
    (7972, 1, "");
    (7973, 1, "}");
    (7972, 0, "\t");
    (7973, 0, "p");
    (7974, 0, "o");
    (7975, 0, "s");
    (7976, 0, "i");
    (7977, 0, "t");
    (7978, 0, "i");
    (7979, 0, "o");
    (7980, 0, "n");
    (7981, 0, ":");
    (7982, 0, " ");
    (7983, 0, "a");
    (7984, 0, "b");
    (7985, 0, "s");
    (7986, 0, "o");
    (7987, 0, "l");
    (7988, 0, "u");
    (7989, 0, "t");
    (7990, 0, "e");
    (7991, 0, ";");
    (7992, 0, "\n\t");
    (7994, 0, "c");
    (7995, 0, "o");
    (7996, 0, "l");
    (7997, 0, "o");
    (7998, 0, "r");
    (7999, 0, ":");
    (8000, 0, " ");
    (8001, 0, "r");
    (8002, 0, "e");
    (8003, 0, "d");
    (8004, 0, ";");
    (3767, 11, "setTimeout(() => tick(false))");
    (3761, 0, " ");
    (3762, 0, "|");
    (3763, 0, "|");
    (3764, 0, " ");
    (3765, 0, "s");
    (3766, 0, "t");
    (3767, 0, "a");
    (3768, 0, "t");
    (3769, 0, "e");
    (3770, 0, " ");
    (3771, 0, "=");
    (3772, 0, "=");
    (3773, 0, "=");
    (3774, 0, " ");
    (3775, 0, "'");
    (3776, 0, "p");
    (3777, 0, "a");
    (3778, 0, "i");
    (3779, 0, "s");
    (3780, 0, "e");
    (3780, 1, "");
    (3779, 1, "");
    (3778, 1, "");
    (3778, 0, "u");
    (3779, 0, "s");
    (3780, 0, "e");
    (3781, 0, "d");
    (3782, 0, "'");
    (198, 0, "export let seconds_per_bead\n");
    (237, 16, "p");
    (238, 0, "a");
    (239, 0, "u");
    (240, 0, "s");
    (241, 0, "e");
    (242, 0, "d");
    (243, 0, "_");
    (244, 0, "p");
    (245, 0, "r");
    (246, 0, "o");
    (247, 0, "g");
    (248, 0, "r");
    (249, 0, "e");
    (250, 0, "s");
    (251, 0, "s");
    (2637, 0, " ");
    (2638, 0, "+");
    (2639, 0, " ");
    (2640, 0, "p");
    (2641, 0, "a");
    (2642, 0, "u");
    (2643, 0, "s");
    (2644, 0, "e");
    (2640, 5, "paused_progress");
    (2638, 1, "");
    (2638, 0, "-");
    (2637, 18, "");
    (2545, 0, "\n\t");
    (2547, 0, "l");
    (2548, 0, "e");
    (2549, 0, "t");
    (2550, 0, " ");
    (2547, 4, "c");
    (2548, 0, "o");
    (2549, 0, "n");
    (2550, 0, "s");
    (2551, 0, "t");
    (2552, 0, " ");
    (2553, 0, "t");
    (2554, 0, "i");
    (2555, 0, "m");
    (2556, 0, "e");
    (2557, 0, " ");
    (2558, 0, "=");
    (2559, 0, " ");
    (2560, 0, "s");
    (2561, 0, "t");
    (2562, 0, "a");
    (2563, 0, "t");
    (2564, 0, "e");
    (2565, 0, " ");
    (2566, 0, "=");
    (2567, 0, "=");
    (2568, 0, "=");
    (2569, 0, " ");
    (2570, 0, "'");
    (2571, 0, "p");
    (2572, 0, "l");
    (2573, 0, "a");
    (2574, 0, "y");
    (2575, 0, "i");
    (2576, 0, "n");
    (2577, 0, "g");
    (2578, 0, "'");
    (2579, 0, " ");
    (2580, 0, "?");
    (2581, 0, " ");
    (2582, 0, "Date.now() - start_time");
    (2605, 0, "\n\t");
    (2607, 0, "\t");
    (2608, 0, ":");
    (2609, 0, " ");
    (2610, 0, "s");
    (2611, 0, "t");
    (2612, 0, "a");
    (2613, 0, "t");
    (2614, 0, "e");
    (2615, 0, " ");
    (2616, 0, "=");
    (2617, 0, "=");
    (2618, 0, "=");
    (2619, 0, " ");
    (2620, 0, "'");
    (2621, 0, "p");
    (2622, 0, "a");
    (2623, 0, "u");
    (2624, 0, "s");
    (2625, 0, "e");
    (2626, 0, "d");
    (2627, 0, "'");
    (2628, 0, " ");
    (2629, 0, "?");
    (2630, 0, " ");
    (2631, 0, "p");
    (2632, 0, "a");
    (2633, 0, "u");
    (2634, 0, "s");
    (2631, 4, "paused_progress");
    (2646, 0, "\n\t\t");
    (2649, 0, ":");
    (2650, 0, " ");
    (2651, 0, "0");
    (2721, 23, "t");
    (2722, 0, "i");
    (2723, 0, "m");
    (2724, 0, "e");
    (8160, 0, "\n\t");
    (8162, 0, "f");
    (8163, 0, "o");
    (8164, 0, "n");
    (8165, 0, "t");
    (8166, 0, "-");
    (8167, 0, "s");
    (8168, 0, "i");
    (8169, 0, "z");
    (8170, 0, "e");
    (8171, 0, ":");
    (8172, 0, " ");
    (8173, 0, "6");
    (8174, 0, "0");
    (8175, 0, "p");
    (8176, 0, "x");
    (8177, 0, ";");
    (8106, 0, "\n\t");
    (8108, 0, "p");
    (8109, 0, "o");
    (8110, 0, "s");
    (8111, 0, "i");
    (8112, 0, "t");
    (8113, 0, "i");
    (8114, 0, "o");
    (8115, 0, "i");
    (8116, 0, "n");
    (8117, 0, ":");
    (8118, 0, " ");
    (8107, 12, "p");
    (8107, 1, "");
    (8107, 0, "\t");
    (8108, 0, "p");
    (8109, 0, "o");
    (8110, 0, "s");
    (8111, 0, "i");
    (8112, 0, "t");
    (8113, 0, "i");
    (8114, 0, "o");
    (8115, 0, "n");
    (8116, 0, ":");
    (8117, 0, " ");
    (8118, 0, "r");
    (8119, 0, "e");
    (8120, 0, "l");
    (8121, 0, "a");
    (8122, 0, "t");
    (8123, 0, "i");
    (8124, 0, "v");
    (8125, 0, "e");
    (8126, 0, ";");
    (8127, 0, "\n\tborder: 2px solid white;");
    (8081, 26, "");
    (8101, 0, "\n\theight: 5em;");
    (8067, 14, "");
    (8087, 0, "\n\tmargin: 25px;");
    (8052, 15, "");
    (8052, 1, "");
    (8052, 0, "\t");
    (8199, 0, "\n\t");
    (8201, 0, "m");
    (8202, 0, "i");
    (8203, 0, "x");
    (8204, 0, "-");
    (8205, 0, "b");
    (8206, 0, "l");
    (8207, 0, "e");
    (8208, 0, "n");
    (8201, 8, "mix-blend-mode: ;");
    (8217, 0, "d");
    (8218, 0, "i");
    (8219, 0, "f");
    (8220, 0, "f");
    (8221, 0, "e");
    (8222, 0, "r");
    (8223, 0, "e");
    (8217, 7, "difference");
    (8194, 4, "330202");
    (8194, 0, "#");
    (8195, 6, "");
    (8194, 1, "");
    (8194, 0, "r");
    (8195, 0, "g");
    (8196, 0, "b");
    (8197, 0, "(");
    (8194, 4, "");
    (8194, 0, "#330202");
    (8202, 0, " */");
    (8183, 0, "/* ");
    (8182, 0, "\t/* font-size: #330202; */\n");
    (8232, 3, "");
    (8210, 3, "");
    (8221, 7, "");
    (8221, 0, "r");
    (8222, 0, "g");
    (8223, 0, "b");
    (8224, 0, "(");
    (8225, 0, "2");
    (8226, 0, "0");
    (8227, 0, "4");
    (8228, 0, ",");
    (8229, 0, "2");
    (8230, 0, "5");
    (8231, 0, "4");
    (8232, 0, ",");
    (8233, 0, "2");
    (8234, 0, "5");
    (8235, 0, "4");
    (8236, 0, ")");
    (8210, 9, "c");
    (8211, 0, "o");
    (8212, 0, "l");
    (8213, 0, "o");
    (8214, 0, "r");
    (8209, 0, "\tcolor: rgb(204,254,254);\n");
    (8236, 5, "f");
    (8237, 0, "o");
    (8238, 0, "n");
    (8239, 0, "t");
    (8240, 0, "-");
    (8241, 0, "s");
    (8242, 0, "i");
    (8243, 0, "z");
    (8244, 0, "e");
    (8247, 17, "6");
    (8248, 0, "0");
    (8249, 0, "p");
    (8250, 0, "x");
    (8251, 0, ";");
    (8209, 0, "\tcolor: rgb(204,254,254);\n");
    (8234, 0, " */");
    (8210, 0, "/* ");
    (8181, 0, " */");
    (8170, 0, "/* ");
    (8255, 16, "w");
    (8256, 0, "h");
    (8257, 0, "i");
    (8258, 0, "t");
    (8259, 0, "e");
    (8261, 0, " */");
    (8248, 0, "/* ");
    (8243, 3, "");
    (8216, 3, "");
    (6245, 0, "'");
    (6245, 1, "");
    (6245, 0, "'");
    (6246, 0, "s");
    (6247, 0, "r");
    (6248, 0, "o");
    (6249, 0, "u");
    (6250, 0, "n");
    (6251, 0, "d");
    (6246, 6, "r");
    (6247, 0, "o");
    (6248, 0, "u");
    (6249, 0, "n");
    (6250, 0, "d");
    (6246, 5, "b");
    (6247, 0, "e");
    (6248, 0, "a");
    (6249, 0, "d");
    (6250, 0, "'");
    (6251, 0, " ");
    (6252, 0, "+");
    (6253, 0, " ");
    (6250, 0, " ");
    (8433, 0, "\n");
    (8434, 0, ".");
    (8435, 0, "b");
    (8436, 0, "e");
    (8437, 0, "a");
    (8438, 0, "d");
    (8439, 0, " ");
    (8440, 0, "{");
    (8441, 0, "\n\t");
    (8443, 0, "\n\t");
    (8442, 1, "");
    (8443, 1, "}");
    (8442, 0, "\t");
    (8443, 0, "d");
    (8444, 0, "i");
    (8445, 0, "s");
    (8446, 0, "p");
    (8447, 0, "l");
    (8448, 0, "a");
    (8449, 0, "y");
    (8450, 0, ":");
    (8451, 0, " ");
    (8452, 0, "b");
    (8453, 0, "l");
    (8454, 0, "o");
    (8455, 0, "c");
    (8456, 0, "k");
    (8457, 0, ";");
    (8443, 15, "");
    (8443, 0, "m");
    (8444, 0, "a");
    (8445, 0, "r");
    (8446, 0, "g");
    (8447, 0, "i");
    (8448, 0, "n");
    (8449, 0, "-");
    (8450, 0, "l");
    (8451, 0, "e");
    (8452, 0, "f");
    (8453, 0, "t");
    (8450, 4, "r");
    (8451, 0, "i");
    (8452, 0, "g");
    (8453, 0, "h");
    (8454, 0, "t");
    (8455, 0, ":");
    (8456, 0, " ");
    (8457, 0, "1");
    (8458, 0, "e");
    (8459, 0, "m");
    (8460, 0, ";");
    (8459, 1, "");
    (8458, 1, "");
    (8457, 1, "");
    (8457, 0, "2");
    (8457, 1, "");
    (8457, 0, "3");
    (8458, 0, "p");
    (8459, 0, "x");
    (8457, 1, "");
    (8457, 0, "4");
    (8457, 3, "2");
    (8458, 0, "e");
    (8459, 0, "m");
    (8457, 1, "");
    (8457, 0, "1");
    (8285, 1, "");
    (8284, 1, "");
    (8284, 0, "5");
    (8285, 0, "4");
    (8289, 0, "\n\t");
    (8291, 0, "m");
    (8292, 0, "a");
    (8293, 0, "r");
    (8294, 0, "g");
    (8295, 0, "i");
    (8296, 0, "n");
    (8297, 0, "-");
    (8298, 0, "e");
    (8299, 0, "f");
    (8299, 1, "");
    (8298, 1, "");
    (8298, 0, "l");
    (8299, 0, "e");
    (8300, 0, "f");
    (8301, 0, "t");
    (8302, 0, ":");
    (8303, 0, " ");
    (8304, 0, "1");
    (8305, 0, "e");
    (8306, 0, "m");
    (8307, 0, ";");
    (8306, 1, "");
    (8305, 1, "");
    (8304, 1, "");
    (8304, 0, "5");
    (8305, 0, "p");
    (8306, 0, "x");
    (8490, 1, "");
    (8490, 0, "\n\t");
    (8522, 1, "");
    (8522, 0, "\n");
    (8535, 1, "");
    (8535, 0, "\n\t");
    (8549, 1, "");
    (8549, 0, "\n");
    (8549, 0, "\n\tcolor: #888;");
    (8549, 0, "\n.waiting {");
    (8536, 1, "");
    (8525, 11, "");
    (8537, 0, "\n}");
    (8525, 0, "\t");
    (8523, 2, "");
    (8563, 0, " */");
    (8551, 0, "/* ");
    (8630, 0, "\n\t");
    (8632, 0, "p");
    (8633, 0, "a");
    (8634, 0, "d");
    (8635, 0, "d");
    (8636, 0, "i");
    (8637, 0, "n");
    (8638, 0, "g");
    (8639, 0, "-");
    (8639, 1, "");
    (8639, 0, ":");
    (8640, 0, " ");
    (8641, 0, "0");
    (8642, 0, " ");
    (8643, 0, "2");
    (8644, 0, "p");
    (8645, 0, "x");
    (8646, 0, ";");
    (8631, 16, "");
    (8630, 1, "");
    (8480, 0, "\n\t");
    (8482, 0, "\tpadding: 0 2px;");
    (8481, 2, "\t");
    (8493, 1, "");
    (8493, 0, "4");
    (8631, 1, "");
    (8631, 0, "2");
    (8631, 1, "");
    (8631, 0, "1");
    (5515, 0, "(");
    (5515, 1, "");
    (5531, 0, "(");
    (5543, 0, ")");
    (5548, 35, "");
    (5513, 0, "\t\t<h4>Topic: <em>{topic}</em></h4>\n");
    (5619, 0, "\n\t\t");
    (5622, 0, "{");
    (5623, 0, "#");
    (5624, 0, "i");
    (5625, 0, "f");
    (5626, 0, " ");
    (5627, 0, "_active_sessions");
    (5643, 0, " ");
    (5644, 0, "=");
    (5645, 0, "=");
    (5646, 0, " ");
    (5647, 0, "1");
    (5648, 0, "}");
    (5650, 0, "\t\t<div>{_active_sessions} player(s) in room</div>\n");
    (5652, 0, "\t");
    (5700, 0, "\n\t\t\t");
    (5704, 0, "{");
    (5705, 0, ":");
    (5706, 0, "e");
    (5707, 0, "l");
    (5708, 0, "s");
    (5709, 0, "e");
    (5710, 0, "}");
    (5701, 3, "\t\t");
    (5760, 0, "\n\t\t");
    (5763, 0, "{");
    (5764, 0, "/");
    (5765, 0, "i");
    (5766, 0, "f");
    (5767, 0, "}");
    (5713, 0, "\t");
    (5658, 36, "Y");
    (5659, 0, "o");
    (5660, 0, "u");
    (5661, 0, " ");
    (5662, 0, "a");
    (5663, 0, "r");
    (5664, 0, "e");
    (5665, 0, " ");
    (5666, 0, "a");
    (5667, 0, "l");
    (5668, 0, "o");
    (5669, 0, "n");
    (5670, 0, "e");
    (5671, 0, " ");
    (5672, 0, "i");
    (5673, 0, "n");
    (5674, 0, " ");
    (5675, 0, "t");
    (5676, 0, "h");
    (5677, 0, "e");
    (5678, 0, " ");
    (5679, 0, "r");
    (5680, 0, "o");
    (5681, 0, "o");
    (5682, 0, "m");
    (5733, 1, "");
    (5734, 1, "");
    (5735, 7, "j");
    (5736, 0, "o");
    (5737, 0, "i");
    (5738, 0, "n");
    (5739, 0, " ");
    (5740, 0, "y");
    (5741, 0, "o");
    (5742, 0, "u");
    (5735, 8, "a");
    (5736, 0, "r");
    (5737, 0, "e");
    (5738, 0, " ");
    (5739, 0, "w");
    (5740, 0, "i");
    (5741, 0, "t");
    (5742, 0, "h");
    (5743, 0, " ");
    (5744, 0, "y");
    (5745, 0, "o");
    (5746, 0, "u");
    (5735, 12, "i");
    (5736, 0, "n");
    (5736, 1, "");
    (5735, 1, "");
    (5735, 0, "a");
    (5736, 0, "r");
    (5737, 0, "e");
    (5738, 0, " ");
    (5739, 0, "i");
    (5740, 0, "n");
    (5741, 0, " ");
    (5742, 0, "t");
    (5743, 0, "h");
    (5744, 0, "e");
    (5745, 0, " ");
    (5742, 4, "t");
    (5743, 0, "h");
    (5744, 0, "i");
    (5745, 0, "s");
    (5746, 0, " ");
    (5747, 0, "r");
    (5748, 0, "o");
    (5749, 0, "o");
    (5750, 0, "m");
    (8105, 0, "\n");
    (8106, 0, "#");
    (8106, 1, "");
    (8106, 0, "h");
    (8107, 0, "1");
    (8108, 0, " ");
    (8109, 0, "{");
    (8110, 0, "\n\t");
    (8112, 0, "\n\t");
    (8111, 1, "");
    (8112, 1, "}");
    (8111, 0, "\t");
    (8112, 0, "m");
    (8113, 0, "a");
    (8114, 0, "r");
    (8115, 0, "i");
    (8116, 0, "n");
    (8117, 0, "g");
    (8117, 1, "");
    (8116, 1, "");
    (8115, 1, "");
    (8114, 1, "");
    (8114, 0, "r");
    (8115, 0, "g");
    (8116, 0, "i");
    (8117, 0, "n");
    (8118, 0, "-");
    (8119, 0, "t");
    (8120, 0, "o");
    (8121, 0, "p");
    (8122, 0, ":");
    (8123, 0, " ");
    (8124, 0, "2");
    (8125, 0, "e");
    (8126, 0, "m");
    (8127, 0, ";");
    (8130, 0, "\n");
    (8124, 1, "");
    (8124, 0, "1");
    (5550, 33, "");
    (5507, 0, "<a href=\"../..\">(Change room)</a>");
    (5507, 0, " ");
    (5525, 11, "l");
    (5526, 0, "e");
    (5527, 0, "a");
    (5528, 0, "v");
    (5529, 0, "e");
    (5614, 0, " -->");
    (5581, 0, "<!-- ");
    (5653, 0, "\n\t\t{#if _active_sessions == 1}");
    (5631, 21, "");
    (5626, 6, "");
    (5626, 0, "{#if }");
    (5631, 0, "_active_sessions == 1");
    (5653, 0, " -->");
    (5626, 0, "<!-- ");
    (5619, 4, "");
    (5581, 5, "");
    (5649, 4, "");
    (5617, 5, "");
    (5622, 21, "c");
    (5623, 0, "o");
    (5624, 0, "n");
    (5625, 0, "n");
    (5626, 0, "e");
    (5627, 0, "c");
    (5628, 0, "t");
    (5629, 0, "i");
    (5630, 0, "o");
    (5631, 0, "n");
    (5632, 0, " ");
    (5633, 0, "!");
    (5634, 0, "=");
    (5635, 0, "=");
    (5636, 0, " ");
    (5637, 0, "'");
    (5638, 0, "c");
    (5639, 0, "o");
    (5640, 0, "n");
    (5641, 0, "n");
    (5642, 0, "e");
    (5643, 0, "c");
    (5644, 0, "t");
    (5645, 0, "e");
    (5646, 0, "d");
    (5647, 0, "'");
    (5649, 0, "\n\t\t");
    (5652, 0, "{/if}");
    (5649, 0, "\n\t\t");
    (5652, 0, "\t");
    (5653, 0, "D");
    (5654, 0, "I");
    (5655, 0, "S");
    (5656, 0, "C");
    (5657, 0, "O");
    (5658, 0, "N");
    (5659, 0, "N");
    (5660, 0, "E");
    (5661, 0, "C");
    (5662, 0, "T");
    (5663, 0, "E");
    (5664, 0, "D");
    (5665, 0, " ");
    (5666, 0, "F");
    (5667, 0, "R");
    (5668, 0, "O");
    (5669, 0, "M");
    (5670, 0, " ");
    (5653, 0, "<");
    (5654, 0, "d");
    (5655, 0, "i");
    (5656, 0, "v");
    (5657, 0, ">");
    (5676, 0, "G");
    (5677, 0, "A");
    (5678, 0, "M");
    (5679, 0, "E");
    (5680, 0, " ");
    (5681, 0, "S");
    (5682, 0, "E");
    (5683, 0, "R");
    (5684, 0, "V");
    (5685, 0, "E");
    (5686, 0, "R");
    (5687, 0, "<");
    (5688, 0, "/");
    (5689, 0, "d");
    (5690, 0, "i");
    (5691, 0, "v");
    (5692, 0, ">");
    (5693, 0, "\n\t\t\t");
    (5697, 0, "<");
    (5697, 1, "");
    (5697, 0, "{");
    (5698, 0, ":");
    (5699, 0, "e");
    (5700, 0, "l");
    (5701, 0, "s");
    (5702, 0, "e");
    (5703, 0, "}");
    (5694, 3, "\t\t");
    (5857, 0, "\n\t\t{/if}");
    (5704, 8, "");
    (5842, 2, "\t\t\t");
    (5784, 3, "\t\t\t\t");
    (5774, 2, "\t\t\t");
    (5734, 3, "\t\t\t\t");
    (5704, 2, "\t\t\t");
    (5579, 0, "\t\t<div>{connection} / {state}</div>\n");
    (5614, 0, " -->");
    (5581, 0, "<!-- ");
    (5630, 16, "");
    (5630, 0, ">");
    (5637, 0, " ");
    (5638, 0, "=");
    (5639, 0, "=");
    (5640, 0, " ");
    (5640, 1, "");
    (5640, 0, "=");
    (5641, 0, " ");
    (5642, 0, "'");
    (5643, 0, "w");
    (5644, 0, "a");
    (5645, 0, "i");
    (5646, 0, "t");
    (5647, 0, "i");
    (5648, 0, "n");
    (5649, 0, "g");
    (5650, 0, "'");
    (5651, 0, " ");
    (5652, 0, "?");
    (5653, 0, " ");
    (5654, 0, "'");
    (5655, 0, "W");
    (5656, 0, "a");
    (5657, 0, "i");
    (5658, 0, "t");
    (5659, 0, "i");
    (5660, 0, "n");
    (5661, 0, "g");
    (5662, 0, " ");
    (5663, 0, "f");
    (5664, 0, "o");
    (5665, 0, "r");
    (5666, 0, " ");
    (5667, 0, "g");
    (5668, 0, "a");
    (5669, 0, "m");
    (5670, 0, "e");
    (5671, 0, " ");
    (5672, 0, "t");
    (5673, 0, "o");
    (5674, 0, " ");
    (5675, 0, "s");
    (5676, 0, "t");
    (5677, 0, "a");
    (5678, 0, "r");
    (5679, 0, "t");
    (5680, 0, "'");
    (5681, 0, "\n\t\t\t");
    (5685, 0, "\t");
    (5685, 1, "");
    (5685, 0, ":");
    (5686, 0, " ");
    (5687, 0, "s");
    (5688, 0, "t");
    (5689, 0, "a");
    (5690, 0, "t");
    (5691, 0, "e");
    (5692, 0, " ");
    (5693, 0, "=");
    (5694, 0, "=");
    (5695, 0, "=");
    (5696, 0, " ");
    (5697, 0, "'");
    (5698, 0, "p");
    (5699, 0, "l");
    (5700, 0, "a");
    (5701, 0, "y");
    (5702, 0, "i");
    (5703, 0, "n");
    (5704, 0, "g");
    (5705, 0, "'");
    (5706, 0, ":");
    (5707, 0, " ");
    (5707, 1, "");
    (5706, 1, "");
    (5706, 0, " ");
    (5707, 0, "?");
    (5708, 0, " ");
    (5709, 0, "'");
    (5710, 0, "G");
    (5711, 0, "a");
    (5712, 0, "m");
    (5713, 0, "e");
    (5710, 4, "P");
    (5710, 1, "");
    (5710, 0, "G");
    (5711, 0, "a");
    (5712, 0, "m");
    (5713, 0, "e");
    (5714, 0, " ");
    (5715, 0, "i");
    (5716, 0, "n");
    (5717, 0, " ");
    (5718, 0, "p");
    (5710, 9, "");
    (5698, 7, "p");
    (5699, 0, "a");
    (5700, 0, "u");
    (5701, 0, "s");
    (5702, 0, "e");
    (5703, 0, "d");
    (5709, 0, "G");
    (5710, 0, "a");
    (5711, 0, "m");
    (5712, 0, "e");
    (5713, 0, " ");
    (5714, 0, "p");
    (5715, 0, "a");
    (5716, 0, "u");
    (5717, 0, "s");
    (5718, 0, "e");
    (5719, 0, "d");
    (5709, 11, "P");
    (5710, 0, "A");
    (5711, 0, "U");
    (5712, 0, "S");
    (5713, 0, "E");
    (5714, 0, "D");
    (5709, 0, "G");
    (5710, 0, "A");
    (5711, 0, "M");
    (5712, 0, "E");
    (5713, 0, " ");
    (5720, 0, "'");
    (5721, 0, "\n\t\t");
    (5724, 0, ":");
    (5725, 0, " ");
    (5726, 0, "'");
    (5727, 0, "'");
    (5724, 0, "\t");
    (5631, 0, "\n\t\t\t");
    (5671, 0, "t");
    (5672, 0, "h");
    (5673, 0, "e");
    (5674, 0, " ");
    (5738, 0, "\n\t\t");
    (5974, 3, "h");
    (5925, 3, "h");
    (5904, 3, "h");
    (5873, 3, "h");
    (5822, 3, "h");
    (5787, 3, "h");
    (5965, 0, "4");
    (5918, 0, "4");
    (5899, 0, "4");
    (5870, 0, "4");
    (5821, 0, "4");
    (5788, 0, "4");
    (5969, 2, "div");
    (5921, 2, "div");
    (5901, 2, "div");
    (5871, 2, "div");
    (5821, 2, "div");
    (5787, 2, "div");
    (5690, 0, "\t\t\t: state === 'paused' ? 'GAME PAUSED'\n");
    (5746, 6, "p");
    (5747, 0, "l");
    (5748, 0, "a");
    (5749, 0, "y");
    (5750, 0, "i");
    (5751, 0, "n");
    (5752, 0, "g");
    (5758, 11, " ");
    (5759, 0, " ");
    (5759, 0, "-");
    (5760, 1, "");
    (5759, 1, "");
    (5758, 1, "");
    (5758, 0, "G");
    (5759, 0, "a");
    (5760, 0, "m");
    (5761, 0, "e");
    (5762, 0, " ");
    (5763, 0, "i");
    (5764, 0, "n");
    (5765, 0, " ");
    (5766, 0, "p");
    (5767, 0, "r");
    (5768, 0, "o");
    (5769, 0, "g");
    (5770, 0, "r");
    (5771, 0, "e");
    (5772, 0, "s");
    (5773, 0, "s");
    ( 5575,
      0,
      "\n\t\t<h4>Room: <em>{room}</em> <a href=\"../..\">(leave)</a></h4>" );
    (5480, 61, "");
    (6774, 8, "c");
    (6775, 0, "o");
    (6776, 0, "n");
    (6777, 0, "t");
    (6778, 0, "o");
    (6779, 0, "r");
    (6780, 0, "l");
    (6781, 0, "s");
    (6781, 1, "");
    (6780, 1, "");
    (6779, 1, "");
    (6778, 1, "");
    (6778, 0, "r");
    (6779, 0, "o");
    (6780, 0, "l");
    (6781, 0, "s");
    (8407, 0, "\n");
    (8408, 0, "\n");
    (8408, 0, "b");
    (8409, 0, "u");
    (8410, 0, "t");
    (8411, 0, "t");
    (8412, 0, "o");
    (8413, 0, "n");
    (8414, 0, " ");
    (8415, 0, "\n");
    (8415, 1, "");
    (8415, 0, "{");
    (8416, 0, "\n\t");
    (8418, 0, "\n\t");
    (8417, 1, "");
    (8418, 1, "}");
    (8417, 0, "\t");
    (8418, 0, "f");
    (8419, 0, "o");
    (8420, 0, "n");
    (8421, 0, "t");
    (8422, 0, "-");
    (8423, 0, "s");
    (8424, 0, "i");
    (8425, 0, "z");
    (8426, 0, "e");
    (8427, 0, ":");
    (8428, 0, " ");
    (8429, 0, "2");
    (8430, 0, "0");
    (8431, 0, "0");
    (8432, 0, "%");
    (8433, 0, ";");
    (8429, 3, "1");
    (8430, 0, "4");
    (8431, 0, "0");
    (8432, 0, "%");
    (8432, 1, "");
    (8434, 0, "\n\t");
    (8436, 0, "m");
    (8437, 0, "a");
    (8438, 0, "r");
    (8439, 0, "g");
    (8440, 0, "i");
    (8441, 0, "n");
    (8442, 0, ":");
    (8443, 0, " ");
    (8444, 0, "1");
    (8445, 0, "0");
    (8446, 0, "p");
    (8447, 0, "x");
    (8448, 0, " ");
    (8449, 0, "0");
    (8450, 0, ";");
    (9096, 0, "\n");
    (9097, 0, "\n");
    (9098, 0, "s");
    (9099, 0, "u");
    (9100, 0, "m");
    (9101, 0, "m");
    (9102, 0, "a");
    (9103, 0, "r");
    (9104, 0, "y");
    (9105, 0, " ");
    (9106, 0, "{");
    (9107, 0, "\n\t");
    (9109, 0, "\n\t");
    (9108, 1, "");
    (9109, 1, "}");
    (9108, 0, "\t");
    (9109, 0, "t");
    (9110, 0, "e");
    (9111, 0, "x");
    (9112, 0, "t");
    (9113, 0, "-");
    (9114, 0, "d");
    (9115, 0, "e");
    (9116, 0, "c");
    (9117, 0, "o");
    (9118, 0, "r");
    (9119, 0, "a");
    (9120, 0, "t");
    (9109, 12, "text-decoration: ;");
    (9126, 0, "u");
    (9127, 0, "n");
    (9128, 0, "d");
    (9126, 3, "underline");
    (9136, 0, "\n\t");
    (9138, 0, "p");
    (9139, 0, "o");
    (9140, 0, "i");
    (9141, 0, "n");
    (9142, 0, "t");
    (9143, 0, "e");
    (9144, 0, "r");
    (9145, 0, ":");
    (9146, 0, " ");
    (9138, 9, "m");
    (9139, 0, "o");
    (9139, 1, "");
    (9138, 1, "");
    (9138, 0, "c");
    (9139, 0, "u");
    (9140, 0, "r");
    (9141, 0, "s");
    (9142, 0, "o");
    (9143, 0, "r");
    (9144, 0, ":");
    (9145, 0, " ");
    (9146, 0, "p");
    (9147, 0, "o");
    (9148, 0, "i");
    (9149, 0, "n");
    (9150, 0, "t");
    (9151, 0, "e");
    (9152, 0, "r");
    (9153, 0, ";");
    (9146, 7, "");
    (9146, 0, "grab");
    (9146, 4, "");
    (9146, 0, "pointer");
    (6792, 0, "\n\t\t\t");
    (6796, 0, "\n\t\t\t");
    (6793, 3, "");
    (6797, 0, "<");
    (6798, 0, "d");
    (6799, 0, "i");
    (6800, 0, "v");
    (6801, 0, ">");
    (6802, 0, "</div>");
    (6802, 0, "\n\t\t\t\t\n\t\t\t");
    (6807, 0, "T");
    (6808, 0, "h");
    (6809, 0, "i");
    (6810, 0, "s");
    (6811, 0, " ");
    (6812, 0, "w");
    (6813, 0, "i");
    (6814, 0, "l");
    (6815, 0, "l");
    (6816, 0, " ");
    (6817, 0, "d");
    (6817, 1, "m");
    (6818, 0, "o");
    (6819, 0, "d");
    (6820, 0, "i");
    (6821, 0, "f");
    (6822, 0, "y");
    (6823, 0, " ");
    (6824, 0, "t");
    (6825, 0, "h");
    (6826, 0, "e");
    (6827, 0, " ");
    (6828, 0, "g");
    (6829, 0, "a");
    (6830, 0, "m");
    (6831, 0, "e");
    (6832, 0, " ");
    (6817, 6, "c");
    (6818, 0, "o");
    (6819, 0, "n");
    (6820, 0, "t");
    (6821, 0, "r");
    (6822, 0, "o");
    (6823, 0, "l");
    (6834, 0, " ");
    (6834, 1, "");
    (6834, 0, "f");
    (6835, 0, "o");
    (6836, 0, "r");
    (6837, 0, " ");
    (6838, 0, "a");
    (6839, 0, "l");
    (6840, 0, "l");
    (6841, 0, " ");
    (6842, 0, "p");
    (6843, 0, "l");
    (6844, 0, "a");
    (6845, 0, "y");
    (6846, 0, "e");
    (6847, 0, "r");
    (6848, 0, "s");
    (6849, 0, ".");
    (6817, 8, "d");
    (6818, 0, "r");
    (6819, 0, "i");
    (6820, 0, "v");
    (6821, 0, "e");
    (6822, 0, " ");
    (6794, 66, "");
    (7109, 0, "\n\t\t\t");
    ( 7113,
      0,
      "\t\t\t<div>\n\
       \t\t\t\tThis will drive the game for all players.\n\
       \t\t\t</div>\n\n" );
    (7110, 6, "\t\t\t");
    (7175, 1, "");
    (7175, 0, "\n");
    (7110, 3, "\t\t\t\t\t\t");
    (7113, 66, "");
    (7109, 4, "");
    ( 6794,
      0,
      "\t\t\t<div>\n\
       \t\t\t\tThis will drive the game for all players.\n\
       \t\t\t</div>\n\n" );
    (9223, 0, "\n");
    (9223, 0, "\n");
    (9224, 0, "d");
    (9225, 0, "e");
    (9226, 0, "t");
    (9227, 0, "a");
    (9228, 0, "i");
    (9229, 0, "l");
    (9230, 0, "s");
    (9231, 0, " ");
    (9232, 0, ">");
    (9233, 0, " ");
    (9234, 0, "*");
    (9235, 0, " ");
    (9236, 0, "{");
    (9237, 0, "\n\t");
    (9239, 0, "\n\t");
    (9238, 1, "");
    (9239, 1, "}");
    (9238, 0, "\t");
    (9239, 0, "m");
    (9240, 0, "a");
    (9241, 0, "r");
    (9242, 0, "g");
    (9243, 0, "i");
    (9244, 0, "n");
    (9245, 0, "l");
    (9245, 1, "");
    (9245, 0, "-");
    (9246, 0, "e");
    (9247, 0, "f");
    (9247, 1, "");
    (9246, 1, "");
    (9246, 0, "l");
    (9247, 0, "e");
    (9248, 0, "f");
    (9249, 0, "t");
    (9250, 0, ":");
    (9251, 0, " ");
    (9252, 0, "2");
    (9253, 0, "e");
    (9254, 0, "m");
    (9255, 0, ";");
    (9234, 1, "");
    (9234, 0, ":");
    (9235, 0, "n");
    (9236, 0, "o");
    (9237, 0, "t");
    (9238, 0, "(");
    (9239, 0, "f");
    (9240, 0, "i");
    (9241, 0, "r");
    (9241, 1, "");
    (9240, 1, "");
    (9239, 1, "");
    (9239, 0, ":");
    (9240, 0, "f");
    (9241, 0, "i");
    (9242, 0, "r");
    (9239, 4, ":first-child");
    (9251, 0, ")");
    (9223, 0, "\n");
    (9224, 0, "d");
    (9225, 0, "e");
    (9226, 0, "t");
    (9227, 0, "i");
    (9228, 0, "l");
    (9229, 0, "a");
    (9229, 1, "");
    (9228, 1, "");
    (9227, 1, "");
    (9227, 0, "a");
    (9228, 0, "i");
    (9229, 0, "l");
    (9230, 0, "s");
    (9231, 0, ":");
    (9232, 0, " ");
    (9232, 1, "");
    (9231, 1, "");
    (9231, 0, "{");
    (9231, 1, "");
    (9231, 0, " ");
    (9232, 0, "{");
    (9233, 0, "\n\t");
    (9235, 0, "\n\t");
    (9234, 1, "");
    (9235, 1, "}");
    (9234, 0, "\t");
    (9235, 0, "p");
    (9236, 0, "a");
    (9237, 0, "d");
    (9238, 0, "d");
    (9239, 0, "i");
    (9240, 0, "n");
    (9241, 0, "g");
    (9242, 0, "-");
    (9243, 0, "t");
    (9244, 0, "o");
    (9245, 0, "p");
    (9246, 0, ":");
    (9247, 0, " ");
    (9248, 0, "2");
    (9249, 0, "e");
    (9250, 0, "m");
    (9251, 0, ";");
    (9223, 31, "");
    (9223, 0, "\ndetails {\n\tpadding-top: 2em;\n}");
    (9231, 0, " ");
    (9232, 0, ">");
    (9233, 0, " ");
    (9234, 0, ":");
    (9235, 0, "f");
    (9236, 0, "i");
    (9237, 0, "r");
    (9238, 0, "s");
    (9239, 0, "t");
    (9234, 6, ":first");
    (9240, 0, "-");
    (9241, 0, "c");
    (9242, 0, "h");
    (9243, 0, "i");
    (9244, 0, "l");
    (9245, 0, "d");
    (9234, 12, ":first-child");
    (9258, 3, "n");
    (9259, 0, "t");
    (9259, 1, "");
    (9258, 1, "");
    (9258, 0, "b");
    (9259, 0, "o");
    (9260, 0, "t");
    (9261, 0, "t");
    (9262, 0, "o");
    (9263, 0, "m");
    (9250, 7, "m");
    (9251, 0, "a");
    (9252, 0, "r");
    (9253, 0, "g");
    (9254, 0, "i");
    (9255, 0, "n");
    (9321, 0, " */");
    (9304, 0, "/* ");
    (9265, 1, "");
    (9265, 0, "1");
    (9280, 20, "");
    (9280, 0, "i");
    (9281, 0, "n");
    (9282, 0, "p");
    (9283, 0, "u");
    (9284, 0, "t");
    (9280, 5, "l");
    (9281, 0, "a");
    (9282, 0, "b");
    (9283, 0, "e");
    (9284, 0, "l");
    (9289, 23, "");
    (9289, 0, "w");
    (9290, 0, "i");
    (9291, 0, "d");
    (9292, 0, "t");
    (9293, 0, "h");
    (9294, 0, ":");
    (9295, 0, " ");
    (9289, 7, "m");
    (9290, 0, "i");
    (9291, 0, "n");
    (9292, 0, "-");
    (9293, 0, "w");
    (9294, 0, "i");
    (9295, 0, "d");
    (9296, 0, "t");
    (9297, 0, "h");
    (9298, 0, ":");
    (9299, 0, " ");
    (9300, 0, "1");
    (9301, 0, "0");
    (9302, 0, "e");
    (9303, 0, "m");
    (9304, 0, ";");
    (8075, 0, "\n\t\t\t\t");
    (7924, 0, "\n\t\t\t\t");
    (7769, 0, "\n\t\t\t\t");
    (7600, 0, "\n\t\t\t\t");
    (8095, 0, "<");
    (7939, 0, "<");
    (7779, 0, "<");
    (7605, 0, "<");
    (8099, 0, "s");
    (7942, 0, "s");
    (7781, 0, "s");
    (7606, 0, "s");
    (8103, 0, "p");
    (7945, 0, "p");
    (7783, 0, "p");
    (7607, 0, "p");
    (8107, 0, "a");
    (7948, 0, "a");
    (7785, 0, "a");
    (7608, 0, "a");
    (8111, 0, "n");
    (7951, 0, "n");
    (7787, 0, "n");
    (7609, 0, "n");
    (8115, 0, ">");
    (7954, 0, ">");
    (7789, 0, ">");
    (7610, 0, ">");
    (8135, 0, "<");
    (7973, 0, "<");
    (7808, 0, "<");
    (7649, 0, "<");
    (8139, 0, "/");
    (7976, 0, "/");
    (7810, 0, "/");
    (7650, 0, "/");
    (8143, 0, "s");
    (7979, 0, "s");
    (7812, 0, "s");
    (7651, 0, "s");
    (8147, 0, "p");
    (7982, 0, "p");
    (7814, 0, "p");
    (7652, 0, "p");
    (8151, 0, "a");
    (7985, 0, "a");
    (7816, 0, "a");
    (7653, 0, "a");
    (8155, 0, "n");
    (7988, 0, "n");
    (7818, 0, "n");
    (7654, 0, "n");
    (8159, 0, ">");
    (7991, 0, ">");
    (7820, 0, ">");
    (7655, 0, ">");
    (9352, 5, "");
    (9352, 0, "label");
    (9344, 8, "");
    (9349, 0, " ");
    (9350, 0, ">");
    (9351, 0, " ");
    (9352, 0, ":");
    (9353, 0, "f");
    (9354, 0, "i");
    (9355, 0, "r");
    (9352, 4, ":first-child");
    (9366, 0, "\n\t");
    (9368, 0, "d");
    (9369, 0, "i");
    (9370, 0, "s");
    (9371, 0, "p");
    (9372, 0, "l");
    (9373, 0, "a");
    (9374, 0, "y");
    (9375, 0, ":");
    (9376, 0, " ");
    (9377, 0, "i");
    (9378, 0, "n");
    (9379, 0, "l");
    (9380, 0, "i");
    (9381, 0, "n");
    (9382, 0, "e");
    (9377, 6, "inline-block");
    (9389, 0, ";");
    (7333, 0, "\n\t\t\t\t");
    (7338, 0, "<");
    (7339, 0, "s");
    (7340, 0, "p");
    (7341, 0, "a");
    (7342, 0, "n");
    (7343, 0, ">");
    (7349, 0, "<");
    (7350, 0, "/");
    (7351, 0, "s");
    (7352, 0, "p");
    (7353, 0, "a");
    (7354, 0, "n");
    (7355, 0, ">");
    (9422, 1, "");
    (9422, 0, "5");
    (9422, 1, "");
    (9422, 0, "2");
    (7629, 19, "M");
    (7630, 0, "e");
    (7631, 0, "d");
    (7632, 0, "i");
    (7633, 0, "t");
    (7634, 0, "a");
    (7635, 0, "t");
    (7636, 0, "e");
    (7650, 6, "");
    (7649, 1, "");
    (7649, 0, ":");
    (7649, 1, "");
    (8302, 0, " ");
    (8303, 0, "s");
    (8304, 0, "t");
    (8305, 0, "y");
    (8306, 0, "l");
    (8307, 0, "e");
    (8308, 0, "=");
    (8309, 0, "'");
    (8310, 0, "'");
    (8310, 0, "m");
    (8311, 0, "a");
    (8312, 0, "r");
    (8313, 0, "i");
    (8314, 0, "n");
    (8315, 0, "g");
    (8315, 1, "");
    (8314, 1, "");
    (8313, 1, "");
    (8313, 0, "g");
    (8314, 0, "i");
    (8315, 0, "n");
    (8316, 0, "-");
    (8317, 0, "t");
    (8318, 0, "o");
    (8319, 0, "p");
    (8320, 0, ":");
    (8321, 0, " ");
    (8322, 0, "1");
    (8323, 0, "e");
    (8324, 0, "m");
    (8325, 0, ";");
    (8484, 0, "\n\t");
    (8486, 0, "\n\t");
    (8485, 1, "");
    (8487, 0, "m");
    (8488, 0, "a");
    (8489, 0, "i");
    (8490, 0, "n");
    (8491, 0, " ");
    (8492, 0, "{");
    (8493, 0, "\n\t\t");
    (8496, 0, "\n\t\t");
    (8494, 2, "");
    (8495, 2, "\t}");
    (8495, 1, "");
    (8486, 1, "");
    (8493, 0, "\t");
    (8494, 0, "m");
    (8495, 0, "a");
    (8496, 0, "r");
    (8497, 0, "g");
    (8498, 0, "i");
    (8499, 0, "n");
    (8500, 0, "-");
    (8501, 0, "b");
    (8502, 0, "o");
    (8503, 0, "t");
    (8504, 0, "t");
    (8505, 0, "o");
    (8506, 0, "m");
    (8507, 0, ":");
    (8508, 0, " ");
    (8509, 0, "2");
    (8510, 0, "e");
    (8511, 0, "m");
    (8512, 0, ";");
    (8509, 1, "");
    (8509, 0, "3");
    (5479, 0, " -->");
    (5449, 0, "<!-- ");
    (5523, 0, "\n\t\t<h4>Topic: <em>{topic}</em></h4>");
    (5558, 0, " -->");
    (5526, 0, "<!-- ");
    (5521, 1, "");
    (5493, 1, "");
    (5520, 0, "1");
    (5493, 0, "1");
    (5495, 11, "");
    (5502, 4, "");
    (5502, 1, "");
    (5507, 0, " -->");
    (5491, 0, "<!-- ");
    (5560, 0, "\n\t\t<!-- <h4>Topic: <em>{topic}</em></h4> -->");
    (5556, 4, "");
    (5519, 5, "");
    (5549, 1, "");
    (5521, 1, "");
    (5548, 0, "1");
    (5521, 0, "1");
    (9547, 0, "\n");
    (9548, 0, "\n");
    (9549, 0, "i");
    (9550, 0, "n");
    (9551, 0, "p");
    (9552, 0, "u");
    (9553, 0, "t");
    (9554, 0, ":");
    (9555, 0, " ");
    (9555, 1, "");
    (9554, 1, "");
    (9554, 0, " ");
    (9555, 0, "{");
    (9556, 0, "\n\t");
    (9558, 0, "\n\t");
    (9557, 1, "");
    (9558, 1, "}");
    (9557, 0, "\t");
    (9558, 0, "h");
    (9559, 0, "e");
    (9560, 0, "i");
    (9561, 0, "g");
    (9562, 0, "h");
    (9563, 0, "t");
    (9564, 0, ":");
    (9565, 0, " ");
    (9558, 8, "w");
    (9559, 0, "i");
    (9560, 0, "d");
    (9561, 0, "t");
    (9562, 0, "h");
    (9563, 0, ":");
    (9564, 0, " ");
    (9565, 0, "2");
    (9566, 0, "e");
    (9567, 0, "m");
    (9567, 1, "");
    (9566, 1, "");
    (9565, 1, "");
    (9565, 0, "3");
    (9566, 0, "e");
    (9567, 0, "m");
    (9568, 0, ";");
    (9565, 1, "");
    (9565, 0, "1");
    (9566, 0, "0");
    (9570, 0, "\n\t");
    (9572, 0, "h");
    (9573, 0, "e");
    (9574, 0, "i");
    (9575, 0, "g");
    (9576, 0, "h");
    (9577, 0, "t");
    (9578, 0, ":");
    (9579, 0, " ");
    (9580, 0, "1");
    (9581, 0, ".");
    (9582, 0, "3");
    (9583, 0, ";");
    (9580, 1, "");
    (9580, 0, "1");
    (9581, 0, "0");
    (9584, 0, "p");
    (9585, 0, "x");
    (9572, 14, "f");
    (9573, 0, "o");
    (9574, 0, "n");
    (9575, 0, "t");
    (9576, 0, "-");
    (9577, 0, "s");
    (9578, 0, "i");
    (9579, 0, "z");
    (9580, 0, "e");
    (9581, 0, ":");
    (9582, 0, " ");
    (9583, 0, "1");
    (9584, 0, "6");
    (9585, 0, "p");
    (9586, 0, "x");
    (9480, 0, "\n");
    (9481, 0, "\n");
    (9482, 0, "s");
    (9483, 0, "u");
    (9484, 0, "m");
    (9485, 0, "m");
    (9486, 0, "a");
    (9487, 0, "r");
    (9488, 0, "y");
    (9489, 0, " ");
    (9490, 0, ">");
    (9491, 0, " ");
    (9492, 0, "l");
    (9493, 0, "a");
    (9494, 0, "b");
    (9495, 0, "e");
    (9496, 0, "l");
    (9497, 0, "{");
    (9498, 0, " ");
    (9498, 1, "");
    (9497, 1, "");
    (9497, 0, " ");
    (9498, 0, "{");
    (9499, 0, "\n\t");
    (9501, 0, "\n\t");
    (9500, 1, "");
    (9501, 1, "}");
    (9500, 0, "\t");
    (9501, 0, "m");
    (9502, 0, "a");
    (9503, 0, "r");
    (9504, 0, "g");
    (9505, 0, "i");
    (9506, 0, "n");
    (9501, 6, "l");
    (9501, 1, "");
    (9501, 0, "l");
    (9502, 0, "i");
    (9503, 0, "n");
    (9504, 0, "e");
    (9505, 0, "-");
    (9506, 0, "h");
    (9507, 0, "e");
    (9508, 0, "i");
    (9509, 0, "g");
    (9510, 0, "h");
    (9511, 0, "t");
    (9512, 0, ":");
    (9513, 0, " ");
    (9514, 0, "2");
    (9515, 0, ";");
    (9482, 10, "");
    (9491, 11, "m");
    (9492, 0, "a");
    (9493, 0, "r");
    (9494, 0, "g");
    (9495, 0, "i");
    (9496, 0, "n");
    (9497, 0, "t");
    (9497, 1, "");
    (9497, 0, "-");
    (9498, 0, "t");
    (9498, 1, "");
    (9498, 0, "b");
    (9499, 0, "o");
    (9500, 0, "t");
    (9501, 0, "t");
    (9502, 0, "o");
    (9503, 0, "m");
    (9506, 1, "");
    (9506, 0, "3");
    (9507, 0, "p");
    (9508, 0, "x");
    (6898, 18, "e");
    (6899, 0, "f");
    (6900, 0, "f");
    (6901, 0, "e");
    (6902, 0, "c");
    (6903, 0, "t");
    (7698, 20, "P");
    (7699, 0, "r");
    (7700, 0, "e");
    (7701, 0, "-");
    (7702, 0, "g");
    (7703, 0, "a");
    (7704, 0, "m");
    (7705, 0, "e");
    (7706, 0, "m");
    (7707, 0, " ");
    (7707, 1, "");
    (7706, 1, "");
    (7706, 0, " ");
    (7707, 0, "m");
    (7708, 0, "e");
    (7709, 0, "d");
    (7710, 0, "i");
    (7711, 0, "t");
    (7712, 0, "a");
    (7713, 0, "t");
    (7714, 0, "i");
    (7715, 0, "o");
    (7716, 0, "n");
    (9577, 0, "m");
    (9578, 0, "i");
    (9579, 0, "n");
    (9580, 0, "-");
    (9589, 1, "");
    (9588, 1, "");
    (9588, 0, "6");
    (9577, 4, "");
    (9584, 1, "");
    (9584, 0, "7");
    (9602, 1, "");
    (9602, 0, "5");
    (9602, 1, "");
    (9602, 0, "4");
    (9603, 0, "3");
    (9603, 1, "");
    (9606, 0, "\n\t");
    (9608, 0, "c");
    (9609, 0, "o");
    (9610, 0, "l");
    (9611, 0, "o");
    (9612, 0, "r");
    (9613, 0, ":");
    (9614, 0, " ");
    (9615, 0, "#330202");
    (9622, 0, ";");
    (8669, 46, "");
    (8668, 1, "");
    (9372, 0, "\nbutton {\n\tfont-size: 140%;\n\tmargin: 10px 0;\n}");
    (9418, 0, "\n");
    (9416, 0, "\n\t");
    (9418, 0, "color: #330202;");
    (9433, 0, " ");
    (9434, 0, "/");
    (9435, 0, "*");
    (9436, 0, " ");
    (9437, 0, "T");
    (9438, 0, "O");
    (9439, 0, "D");
    (9440, 0, "O");
    (9441, 0, ":");
    (9442, 0, " ");
    (9443, 0, "U");
    (9444, 0, "s");
    (9445, 0, "e");
    (9446, 0, " ");
    (9447, 0, "C");
    (9448, 0, "A");
    (9449, 0, "S");
    (9449, 1, "");
    (9448, 1, "");
    (9448, 0, "S");
    (9449, 0, "S");
    (9450, 0, " ");
    (9451, 0, "v");
    (9452, 0, "a");
    (9453, 0, "r");
    (9454, 0, "i");
    (9455, 0, "a");
    (9456, 0, "b");
    (9457, 0, "l");
    (9458, 0, "e");
    (9459, 0, " ");
    (9460, 0, "f");
    (9461, 0, "o");
    (9462, 0, "r");
    (9463, 0, " ");
    (9464, 0, "t");
    (9465, 0, "h");
    (9466, 0, "i");
    (9467, 0, "s");
    (9468, 0, " ");
    (9469, 0, "*");
    (9470, 0, "/");
    (1789, 1, "");
    (1782, 1, "");
    (8513, 0, "\n\t\t\t");
    (8517, 0, "\n\t\t\t");
    (8514, 3, "");
    (8518, 0, "<button on:click={upd('state', 'playing')}>Resume</button>");
    (8541, 5, "_");
    (8542, 0, "x");
    (8543, 0, "x");
    (8543, 1, "");
    (8542, 1, "");
    (8557, 6, "B");
    (8558, 0, "e");
    (8559, 0, "c");
    (8560, 0, "o");
    (8561, 0, "m");
    (8562, 0, "e");
    (8563, 0, " ");
    (8564, 0, "Magister Ludi");
    (8542, 0, "m");
    (8543, 0, "a");
    (8544, 0, "g");
    (8545, 0, "i");
    (8546, 0, "s");
    (8547, 0, "t");
    (8548, 0, "e");
    (8549, 0, "r");
    (8554, 7, "t");
    (8555, 0, "r");
    (8556, 0, "y");
    (8556, 1, "");
    (8556, 0, "u");
    (8557, 0, "e");
    (3330, 0, "// ");
    (6874, 0, "\n\t\t\t");
    (6878, 0, "\n\t\t\t");
    (6875, 3, "");
    (6879, 0, "<");
    (6880, 0, "d");
    (6881, 0, "i");
    (6882, 0, "v");
    (6883, 0, ">");
    (6884, 0, "\n\t\t\t\t");
    (6889, 0, "M");
    (6890, 0, "a");
    (6891, 0, "g");
    (6892, 0, "i");
    (6893, 0, "s");
    (6894, 0, "t");
    (6895, 0, "e");
    (6896, 0, "r");
    (6897, 0, " ");
    (6898, 0, "s");
    (6899, 0, "t");
    (6900, 0, "a");
    (6901, 0, "t");
    (6902, 0, "u");
    (6903, 0, "s");
    (6904, 0, ":");
    (6905, 0, " ");
    (6906, 0, "{");
    (6907, 0, "}");
    (6908, 0, "\n\t\t\t\t");
    (6913, 0, "<");
    (6914, 0, "/");
    (6915, 0, "d");
    (6916, 0, "i");
    (6917, 0, "v");
    (6909, 9, "\t\t\t</div>");
    (253, 0, "export let _active_sessions\n");
    (293, 15, "m");
    (294, 0, "a");
    (295, 0, "g");
    (296, 0, "i");
    (292, 5, "_magister");
    (6928, 0, "m");
    (6929, 0, "a");
    (6930, 0, "g");
    (6931, 0, "i");
    (6928, 4, "_magister");
    (6928, 0, "J");
    (6929, 0, "S");
    (6930, 0, "O");
    (6931, 0, "N");
    (6932, 0, ".");
    (6933, 0, "s");
    (6934, 0, "t");
    (6935, 0, "r");
    (6936, 0, "i");
    (6937, 0, "n");
    (6938, 0, "g");
    (6939, 0, "i");
    (6940, 0, "f");
    (6941, 0, "y");
    (6933, 9, "stringify");
    (6942, 0, "(");
    (6952, 0, ")");
    (6835, 0, "\n\t\t");
    (6838, 0, "{");
    (6839, 0, "#");
    (6840, 0, "if }\n\t\t\t\n\t\t{/if");
    (6843, 0, "_magister");
    (6852, 0, " ");
    (6853, 0, "=");
    (6854, 0, "=");
    (6855, 0, " ");
    (6856, 0, "n");
    (6857, 0, "u");
    (6858, 0, "l");
    (6859, 0, "l");
    (6860, 0, " ");
    (6861, 0, "|");
    (6862, 0, "|");
    (6863, 0, " ");
    (6864, 0, "_");
    (6865, 0, "m");
    (6866, 0, "a");
    (6867, 0, "g");
    (6864, 4, "_magister");
    (6873, 0, " ");
    (6874, 0, "=");
    (6875, 0, "=");
    (6876, 0, " ");
    (6877, 0, "f");
    (6878, 0, "a");
    (6879, 0, "l");
    (6879, 1, "");
    (6878, 1, "");
    (6877, 1, "");
    (6877, 0, "t");
    (6878, 0, "r");
    (6879, 0, "u");
    (6880, 0, "e");
    (6893, 0, "}");
    (6886, 0, "\n\t\t");
    (6889, 0, "{");
    (6890, 0, ":");
    (6891, 0, "e");
    (6892, 0, "l");
    (6893, 0, "s");
    (6894, 0, "e");
    (6895, 0, "}");
    (6896, 0, "\n\t\t");
    (6899, 0, "\t");
    (6900, 0, ",");
    (6900, 1, "");
    (6900, 0, "<");
    (6901, 0, "d");
    (6902, 0, "i");
    (6903, 0, "v");
    (6904, 0, ">");
    (6905, 0, "a");
    (6906, 0, "m");
    (6906, 1, "");
    (6905, 1, "");
    (6905, 0, "G");
    (6906, 0, "a");
    (6907, 0, "m");
    (6905, 3, "W");
    (6906, 0, "a");
    (6907, 0, "i");
    (6905, 3, "G");
    (6906, 0, "a");
    (6907, 0, "m");
    (6908, 0, "e");
    (6909, 0, " ");
    (6910, 0, "c");
    (6911, 0, "o");
    (6912, 0, "n");
    (6913, 0, "t");
    (6914, 0, "r");
    (6915, 0, "o");
    (6916, 0, "l");
    (6917, 0, "l");
    (6918, 0, "e");
    (6919, 0, "d");
    (6920, 0, " ");
    (6921, 0, "b");
    (6922, 0, "y");
    (6923, 0, " ");
    (6905, 19, "O");
    (6906, 0, "n");
    (6907, 0, "l");
    (6908, 0, "y");
    (6909, 0, " ");
    (6910, 0, "t");
    (6911, 0, "h");
    (6912, 0, "e");
    (6913, 0, " ");
    (6914, 0, "M");
    (6915, 0, "a");
    (6916, 0, "g");
    (6917, 0, "i");
    (6918, 0, "s");
    (6919, 0, "t");
    (6920, 0, "e");
    (6921, 0, "r");
    (6922, 0, " ");
    (6923, 0, "L");
    (6924, 0, "u");
    (6925, 0, "d");
    (6926, 0, "i");
    (6927, 0, " ");
    (6928, 0, "c");
    (6929, 0, "a");
    (6930, 0, "n");
    (6931, 0, " ");
    (6905, 6, "T");
    (6923, 4, "i");
    (6924, 0, "s");
    (6925, 0, " ");
    (6926, 0, "i");
    (6927, 0, "n");
    (6928, 0, " ");
    (6923, 6, "i");
    (6924, 0, "s");
    (6925, 0, " ");
    (6926, 0, "i");
    (6927, 0, "n");
    (6928, 0, " ");
    (6929, 0, "c");
    (6930, 0, "o");
    (6931, 0, "n");
    (6932, 0, "t");
    (6933, 0, "r");
    (6934, 0, "o");
    (6935, 0, "l");
    (6936, 0, " ");
    (6937, 0, "o");
    (6938, 0, "f");
    (6939, 0, " ");
    (6940, 0, "t");
    (6941, 0, "h");
    (6942, 0, "i");
    (6943, 0, "s");
    (6944, 0, " ");
    (6945, 0, "g");
    (6946, 0, "a");
    (6947, 0, "m");
    (6948, 0, "e");
    (6949, 0, "<");
    (6950, 0, "/");
    (6951, 0, "d");
    (6952, 0, "i");
    (6953, 0, "v");
    (6954, 0, ">");
    (6964, 1861, "");
    (6963, 1, "");
    ( 6886,
      0,
      "\t\t<details id='config'>\n\
       \t\t\t<summary>Game controls</summary>\n\n\
       \t\t\t<div>\n\
       \t\t\t\tMagister status: {JSON.stringify(_magister)}\n\
       \t\t\t</div>\n\n\
       \t\t\t<div>\n\
       \t\t\t\tThis will effect all players.\n\
       \t\t\t</div>\n\n\
       \t\t\t{#if internal_state == 'waiting'}\n\
       \t\t\t\t<button on:click={upd('state', 'playing')}>Start</button>\n\
       \t\t\t{:else if internal_state == 'playing'}\n\
       \t\t\t\t<button on:click={upd('state', 'paused')}>Pause</button>\n\
       \t\t\t{:else if internal_state == 'paused'}\n\
       \t\t\t\t<button on:click={upd('state', 'playing')}>Resume</button>\n\
       \t\t\t{/if}\n\n\
       \t\t\t{#if internal_state == 'paused' || internal_state == 'completed' }\n\
       \t\t\t\t<button on:click={upd('state', 'waiting')}>Reset game</button>\n\
       \t\t\t{/if}\n\n\
       \t\t\t<label>\n\
       \t\t\t\t<span>Topic</span>\n\
       \t\t\t\t<input disabled={settings_disabled} type='text' value={topic} \
       on:input={config('topic')} list='archetopics' >\n\
       \t\t\t\t<datalist id='archetopics'>\n\
       \t\t\t\t\t{#each ARCHETOPICS as topic}\n\
       \t\t\t\t\t\t<option value={topic}>\n\
       \t\t\t\t\t{/each}\n\
       \t\t\t\t</datalist>\n\
       \t\t\t</label>\n\n\
       \t\t\t<label>\n\
       \t\t\t\t<span>Pre-game meditation</span>\n\
       \t\t\t\t<input disabled={settings_disabled} type='checkbox' \
       checked={meditate} on:input={config('meditate')} >\n\
       \t\t\t</label>\n\n\
       \t\t\t<label>\n\
       \t\t\t\t<span>Number of players</span>\n\
       \t\t\t\t<input disabled={settings_disabled} type='number' \
       value={players} on:input={config('players')} min=1 max=12 >\n\
       \t\t\t</label>\n\n\
       \t\t\t<label>\n\
       \t\t\t\t<span>Number of rounds</span>\n\
       \t\t\t\t<input disabled={settings_disabled} type='number' \
       value={rounds} on:input={config('rounds')} min=1 max=20>\n\
       \t\t\t</label>\n\n\
       \t\t\t<label>\n\
       \t\t\t\t<span>Seconds per bead</span>\n\
       \t\t\t\t<input disabled={settings_disabled} type='number' \
       value={seconds_per_bead} on:input={config('seconds_per_bead')}>\n\
       \t\t\t</label>\n\n\
       \t\t\t<div style='margin-top: 1em;'>\n\
       \t\t\t\t(Total game length: {roundish(\n\
       \t\t\t\t\tgame_stages.reduce((x, s) => x + s.duration, 0) / 60\n\
       \t\t\t\t)} minutes)\n\
       \t\t\t</div>\n\n\
       \t\t\t<button on:click={upd('_magister', 'true')}>Become Magister \
       Ludi</button>\n\
       \t\t</details>" );
    (6883, 5, "\t\t");
    (8732, 2, "\t\t\t");
    (8655, 3, "\t\t\t\t");
    (8644, 3, "\t\t\t\t");
    (8628, 4, "\t\t\t\t\t");
    (8570, 5, "\t\t\t\t\t\t");
    (8535, 4, "\t\t\t\t\t");
    (8501, 3, "\t\t\t\t");
    (8488, 3, "\t\t\t\t");
    (8370, 4, "\t\t\t\t\t");
    (8336, 4, "\t\t\t\t\t");
    (8325, 3, "\t\t\t\t");
    (8312, 3, "\t\t\t\t");
    (8201, 4, "\t\t\t\t\t");
    (8167, 4, "\t\t\t\t\t");
    (8156, 3, "\t\t\t\t");
    (8143, 3, "\t\t\t\t");
    (8029, 4, "\t\t\t\t\t");
    (7994, 4, "\t\t\t\t\t");
    (7983, 3, "\t\t\t\t");
    (7970, 3, "\t\t\t\t");
    (7863, 4, "\t\t\t\t\t");
    (7826, 4, "\t\t\t\t\t");
    (7815, 3, "\t\t\t\t");
    (7802, 3, "\t\t\t\t");
    (7786, 4, "\t\t\t\t\t");
    (7773, 5, "\t\t\t\t\t\t");
    (7744, 6, "\t\t\t\t\t\t\t");
    (7710, 5, "\t\t\t\t\t\t");
    (7678, 4, "\t\t\t\t\t");
    (7564, 4, "\t\t\t\t\t");
    (7541, 4, "\t\t\t\t\t");
    (7530, 3, "\t\t\t\t");
    (7520, 3, "\t\t\t\t");
    (7453, 4, "\t\t\t\t\t");
    (7383, 3, "\t\t\t\t");
    (7373, 3, "\t\t\t\t");
    (7310, 4, "\t\t\t\t\t");
    (7269, 3, "\t\t\t\t");
    (7208, 4, "\t\t\t\t\t");
    (7166, 3, "\t\t\t\t");
    (7104, 4, "\t\t\t\t\t");
    (7067, 3, "\t\t\t\t");
    (7056, 3, "\t\t\t\t");
    (7022, 4, "\t\t\t\t\t");
    (7013, 3, "\t\t\t\t");
    (7002, 3, "\t\t\t\t");
    (6953, 4, "\t\t\t\t\t");
    (6944, 3, "\t\t\t\t");
    (6907, 3, "\t\t\t\t");
    (6883, 2, "\t\t\t");
    (6945, 72, "");
    (6835, 0, "\n\t\t");
    ( 6838,
      0,
      "\n\
       \t\t\t\t<div>\n\
       \t\t\t\t\tMagister status: {JSON.stringify(_magister)}\n\
       \t\t\t\t</div>\n" );
    (6836, 2, "");
    (6897, 4, "\t\t");
    (6847, 5, "\t\t\t");
    (6837, 4, "\t\t");
    (6902, 0, "\n\t\t");
    (8700, 0, "\n\t\t\t\t");
    (6903, 2, "");
    (8703, 0, "<");
    (8704, 0, "d");
    (8705, 0, "i");
    (8706, 0, "v");
    (8707, 0, ">");
    (8786, 0, "\n\t\t\t\t");
    (8791, 0, "<");
    (8792, 0, "/");
    (8793, 0, "d");
    (8794, 0, "i");
    (8795, 0, "v");
    (8796, 0, ">");
    (8713, 0, "\t");
    (8707, 0, " ");
    (8708, 0, "i");
    (8709, 0, "d");
    (8710, 0, "=");
    (8711, 0, "b");
    (8712, 0, "e");
    (8713, 0, "c");
    (8714, 0, "o");
    (8715, 0, "m");
    (8716, 0, "e");
    (8711, 6, "m");
    (8712, 0, "a");
    (8713, 0, "g");
    (8714, 0, "i");
    (8715, 0, "s");
    (8716, 0, "t");
    (8717, 0, "e");
    (8718, 0, "r");
    (8719, 0, "_");
    (8720, 0, "b");
    (8721, 0, "o");
    (8722, 0, "x");
    (8723, 0, "'");
    (8711, 0, "'");
    (8726, 0, "\n\t\t\t\t\t");
    (8732, 0, "T");
    (8733, 0, "h");
    (8734, 0, "e");
    (8734, 1, "");
    (8733, 1, "");
    (8732, 1, "");
    (8732, 0, "O");
    (8733, 0, "n");
    (8734, 0, "c");
    (8735, 0, "e");
    (8736, 0, " ");
    (8737, 0, "s");
    (8738, 0, "o");
    (8739, 0, "m");
    (8740, 0, "e");
    (8741, 0, "b");
    (8742, 0, "o");
    (8743, 0, "d");
    (8744, 0, "y");
    (8745, 0, " ");
    (8746, 0, "b");
    (8747, 0, "e");
    (8748, 0, "c");
    (8749, 0, "o");
    (8750, 0, "m");
    (8751, 0, "e");
    (8752, 0, "s");
    (8746, 7, "a");
    (8747, 0, "s");
    (8748, 0, "c");
    (8749, 0, "e");
    (8750, 0, "n");
    (8751, 0, "d");
    (8752, 0, "s");
    (8753, 0, " ");
    (8754, 0, "t");
    (8755, 0, "o");
    (8756, 0, " ");
    (8757, 0, "m");
    (8757, 1, "");
    (8757, 0, "M");
    (8758, 0, "a");
    (8759, 0, "g");
    (8760, 0, "i");
    (8761, 0, "s");
    (8762, 0, "t");
    (8763, 0, "e");
    (8764, 0, "r");
    (8765, 0, " ");
    (8766, 0, "L");
    (8767, 0, "u");
    (8768, 0, "d");
    (8769, 0, "i");
    (8770, 0, " ");
    (8771, 0, "o");
    (8772, 0, "f");
    (8773, 0, " ");
    (8774, 0, "t");
    (8775, 0, "h");
    (8776, 0, "e");
    (8777, 0, " ");
    (8778, 0, "g");
    (8779, 0, "a");
    (8780, 0, "m");
    (8781, 0, "e");
    (8782, 0, ",");
    (8783, 0, " ");
    (8784, 0, "a");
    (8785, 0, "l");
    (8786, 0, "l");
    (8787, 0, " ");
    (8788, 0, "o");
    (8789, 0, "t");
    (8790, 0, "h");
    (8791, 0, "e");
    (8792, 0, "r");
    (8793, 0, " ");
    (8794, 0, "u");
    (8795, 0, "s");
    (8796, 0, "e");
    (8797, 0, "r");
    (8798, 0, "s");
    (8799, 0, " ");
    (8794, 6, "p");
    (8795, 0, "l");
    (8796, 0, "a");
    (8797, 0, "y");
    (8798, 0, "e");
    (8799, 0, "r");
    (8800, 0, "s");
    (8801, 0, " ");
    (8802, 0, "l");
    (8803, 0, "o");
    (8803, 1, "");
    (8802, 1, "");
    (8802, 0, "a");
    (8803, 0, "r");
    (8804, 0, "e");
    (8805, 0, " ");
    (8806, 0, "l");
    (8807, 0, "o");
    (8808, 0, "c");
    (8809, 0, "k");
    (8810, 0, "e");
    (8811, 0, "d");
    (8812, 0, " ");
    (8813, 0, "o");
    (8814, 0, "u");
    (8815, 0, "t");
    (8816, 0, " ");
    (8817, 0, "o");
    (8818, 0, "f");
    (8819, 0, " ");
    (8784, 4, "");
    (8770, 14, ",");
    (8771, 0, " ");
    (8790, 14, "c");
    (8791, 0, "a");
    (8792, 0, "n");
    (8793, 0, " ");
    (8794, 0, "n");
    (8795, 0, "o");
    (8796, 0, " ");
    (8797, 0, "l");
    (8798, 0, "o");
    (8799, 0, "n");
    (8800, 0, "g");
    (8801, 0, "e");
    (8802, 0, "r");
    (8803, 0, " ");
    (8804, 0, "s");
    (8805, 0, "t");
    (8806, 0, "a");
    (8807, 0, "r");
    (8808, 0, "t");
    (8809, 0, " ");
    (8810, 0, "o");
    (8811, 0, "r");
    (8812, 0, " ");
    (8813, 0, "s");
    (8814, 0, "t");
    (8815, 0, "o");
    (8816, 0, "p");
    (8817, 0, " ");
    (8818, 0, "t");
    (8819, 0, "h");
    (8820, 0, "e");
    (8821, 0, " ");
    (8822, 0, "g");
    (8823, 0, "a");
    (8824, 0, "m");
    (8825, 0, "e");
    (8826, 0, ".");
    (8827, 0, " ");
    (8828, 0, "M");
    (8829, 0, "a");
    (8830, 0, "g");
    (8831, 0, "i");
    (8832, 0, "s");
    (8833, 0, "t");
    (8834, 0, "e");
    (8835, 0, "r");
    (8836, 0, " ");
    (8837, 0, "l");
    (8838, 0, "u");
    (8839, 0, "d");
    (8837, 3, "");
    (8828, 0, "T");
    (8829, 0, "h");
    (8830, 0, "e");
    (8831, 0, " ");
    (8841, 0, "L");
    (8842, 0, "u");
    (8843, 0, "d");
    (8844, 0, "i");
    (8845, 0, " ");
    (8846, 0, "w");
    (8847, 0, "i");
    (8848, 0, "l");
    (8849, 0, "l");
    (8850, 0, " ");
    (8851, 0, "l");
    (8852, 0, "o");
    (8853, 0, "s");
    (8854, 0, "e");
    (8855, 0, " ");
    (8856, 0, "o");
    (8856, 1, "");
    (8851, 5, "r");
    (8852, 0, "e");
    (8853, 0, "l");
    (8854, 0, "i");
    (8855, 0, "n");
    (8856, 0, "q");
    (8857, 0, "u");
    (8858, 0, "i");
    (8859, 0, "s");
    (8860, 0, "h");
    (8861, 0, " ");
    (8827, 35, "");
    (8770, 0, " ");
    (8771, 0, "s");
    (8772, 0, "t");
    (8773, 0, "a");
    (8774, 0, "t");
    (8775, 0, "u");
    (8776, 0, "s");
    (8793, 4, "");
    (9066, 31, "");
    (9066, 0, "\n\n#config {\n\tmargin-top: 2em;\n}");
    (9067, 58, "");
    (9066, 1, "");
    (10104, 0, "\n");
    ( 10105,
      0,
      "\n#config {\n\tmargin-top: 2em;\n}\n\nlabel {\n\tdisplay: block;\n}" );
    (10105, 30, "");
    (9898, 0, "\n#config {\n\tmargin-top: 2em;\n}");
    (9898, 0, "\n");
    (9929, 0, "\n");
    (9899, 0, "/");
    (9900, 0, "*");
    (9901, 0, " ");
    (9902, 0, "*");
    (9903, 0, "*");
    (9904, 0, "*");
    (9905, 0, "*");
    (9906, 0, " ");
    (9907, 0, "C");
    (9908, 0, "o");
    (9909, 0, "f");
    (9910, 0, "i");
    (9910, 1, "");
    (9909, 1, "");
    (9909, 0, "n");
    (9910, 0, "f");
    (9907, 4, "G");
    (9908, 0, "a");
    (9909, 0, "m");
    (9910, 0, "e");
    (9911, 0, " ");
    (9912, 0, "c");
    (9913, 0, "o");
    (9914, 0, "n");
    (9915, 0, "f");
    (9916, 0, "i");
    (9917, 0, "g");
    (9918, 0, " ");
    (9919, 0, "*");
    (9920, 0, "*");
    (9921, 0, "*");
    (9922, 0, "*");
    (9923, 0, "*");
    (9924, 0, " ");
    (9924, 1, "");
    (9924, 0, "/");
    (9901, 1, "");
    (9899, 26, "");
    (9737, 0, "/***** Game config *****/\n");
    (9925, 31, "");
    (9925, 0, "#config {\n\tmargin-top: 2em;\n}\n\n");
    (9925, 31, "");
    (9763, 0, "#config {\n\tmargin-top: 2em;\n}\n\n");
    (10162, 1, "");
    (10189, 0, "\n");
    (10190, 0, "\n");
    (10191, 0, ".");
    (10191, 1, "");
    (10191, 0, "#");
    (10192, 0, "m");
    (10193, 0, "a");
    (10194, 0, "g");
    (10195, 0, "i");
    (10196, 0, "s");
    (10197, 0, "t");
    (10198, 0, "e");
    (10199, 0, "r");
    (10200, 0, "_");
    (10201, 0, "b");
    (10202, 0, "o");
    (10203, 0, "x");
    (10204, 0, " ");
    (10205, 0, "{");
    (10206, 0, "\n\t");
    (10208, 0, "\n\t");
    (10207, 1, "");
    (10208, 1, "}");
    (10207, 0, "\t");
    (10208, 0, "b");
    (10209, 0, "o");
    (10210, 0, "r");
    (10211, 0, "d");
    (10212, 0, "e");
    (10213, 0, "r");
    (10214, 0, ":");
    (10215, 0, " ");
    (10216, 0, "1");
    (10217, 0, "p");
    (10218, 0, "x");
    (10219, 0, " ");
    (10220, 0, "d");
    (10221, 0, "a");
    (10222, 0, "s");
    (10223, 0, "h");
    (10224, 0, "e");
    (10225, 0, "d");
    (10226, 0, " ");
    (10226, 1, "");
    (10226, 0, " ");
    (10227, 0, "w");
    (10228, 0, "h");
    (10229, 0, "i");
    (10230, 0, "t");
    (10231, 0, "e");
    (10232, 0, ";");
    (10233, 0, "\n\t");
    (10235, 0, "m");
    (10236, 0, "a");
    (10237, 0, "r");
    (10238, 0, "g");
    (10239, 0, "i");
    (10240, 0, "n");
    (10241, 0, ":");
    (10242, 0, " ");
    (10243, 0, "2");
    (10243, 1, "");
    (10243, 0, "1");
    (10244, 0, "e");
    (10245, 0, "m");
    (10246, 0, " ");
    (10247, 0, "0");
    (10248, 0, ";");
    (10249, 0, "\n\t");
    (10251, 0, "p");
    (10252, 0, "w");
    (10253, 0, "d");
    (10254, 0, "i");
    (10254, 1, "");
    (10253, 1, "");
    (10252, 1, "");
    (10252, 0, "a");
    (10253, 0, "d");
    (10254, 0, "d");
    (10255, 0, "i");
    (10256, 0, "n");
    (10257, 0, "g");
    (10258, 0, ":");
    (10259, 0, " ");
    (10260, 0, "2");
    (10261, 0, "e");
    (10262, 0, "m");
    (10263, 0, ";");
    (10260, 1, "");
    (10260, 0, "0");
    (10261, 0, ".");
    (10262, 0, "5");
    (8880, 6, "A");
    (8881, 0, "s");
    (8882, 0, "c");
    (8883, 0, "e");
    (8884, 0, "n");
    (8885, 0, "d");
    (8886, 0, " ");
    (8887, 0, "t");
    (8888, 0, "o");
    (8889, 0, " ");
    (8890, 0, "t");
    (8891, 0, "h");
    (8892, 0, "e");
    (8893, 0, " ");
    (8894, 0, "t");
    (8895, 0, "h");
    (8896, 0, "r");
    (8897, 0, "o");
    (8898, 0, "n");
    (8899, 0, "e");
    (8900, 0, " ");
    (8901, 0, "o");
    (8902, 0, "f");
    (10285, 0, "\n");
    (10286, 0, "\n");
    (10287, 0, "#magister_box");
    (10300, 0, ">");
    (10301, 0, " ");
    (10302, 0, "b");
    (10303, 0, "u");
    (10304, 0, "t");
    (10304, 1, "");
    (10303, 1, "");
    (10302, 1, "");
    (10301, 1, "");
    (10300, 1, "");
    (10300, 0, " ");
    (10301, 0, ">");
    (10302, 0, " ");
    (10303, 0, "b");
    (10304, 0, "u");
    (10305, 0, "t");
    (10306, 0, "t");
    (10307, 0, "o");
    (10308, 0, "n");
    (10309, 0, " ");
    (10310, 0, "{");
    (10311, 0, "\n\t");
    (10313, 0, "\n\t");
    (10312, 1, "");
    (10313, 1, "}");
    (10312, 0, "\t");
    (10313, 0, "d");
    (10314, 0, "i");
    (10315, 0, "s");
    (10316, 0, "p");
    (10317, 0, "l");
    (10318, 0, "a");
    (10319, 0, "y");
    (10320, 0, ":");
    (10321, 0, " ");
    (10322, 0, "b");
    (10323, 0, "l");
    (10324, 0, "o");
    (10325, 0, "c");
    (10326, 0, "k");
    (10327, 0, ";");
    (10328, 0, "\n\t");
    (10329, 1, "");
    (10283, 0, "\n\t");
    (10285, 0, "m");
    (10286, 0, "a");
    (10287, 0, "x");
    (10288, 0, "-");
    (10289, 0, "w");
    (10290, 0, "i");
    (10291, 0, "d");
    (10292, 0, "t");
    (10293, 0, "h");
    (10294, 0, ":");
    (10295, 0, " ");
    (10296, 0, "3");
    (10297, 0, "0");
    (10298, 0, "0");
    (10299, 0, "p");
    (10300, 0, "x");
    (10301, 0, ";");
    (10296, 1, "");
    (10296, 0, "5");
    ( 8926,
      0,
      "\n\
       \t\t\t\t\tOnce somebody ascends to Magister Ludi status, other players \
       can no longer start or stop the game." );
    (8727, 104, "");
    (8776, 23, "A");
    (8777, 0, "s");
    (8778, 0, "s");
    (8779, 0, "u");
    (8780, 0, "m");
    (8781, 0, "e");
    (8782, 0, " ");
    (8783, 0, "t");
    (8784, 0, "h");
    (8785, 0, "e");
    (8786, 0, " ");
    (8787, 0, "m");
    (8788, 0, "a");
    (8789, 0, "n");
    (8790, 0, "t");
    (8791, 0, "l");
    (8792, 0, "e");
    (8793, 0, " ");
    (8794, 0, "o");
    (8795, 0, "f");
    (8830, 8, "a");
    (8831, 0, " ");
    (8832, 0, "p");
    (8833, 0, "l");
    (8834, 0, "a");
    (8835, 0, "y");
    (8836, 0, "e");
    (8837, 0, "r");
    (8900, 23, "c");
    (8901, 0, "o");
    (8902, 0, "n");
    (8903, 0, "t");
    (8904, 0, "r");
    (8905, 0, "o");
    (8906, 0, "l");
    (8907, 0, " ");
    (8908, 0, "t");
    (8909, 0, "h");
    (8910, 0, "e");
    (8825, 86, "I");
    (8826, 0, "F");
    (8827, 0, " ");
    (8828, 0, "a");
    (8829, 0, " ");
    (8829, 1, "");
    (8828, 1, "");
    (8827, 1, "");
    (8826, 1, "");
    (8826, 0, "f");
    (8827, 0, " ");
    (8828, 0, "a");
    (8829, 0, " ");
    (8830, 0, "m");
    (8831, 0, "a");
    (8832, 0, "s");
    (8833, 0, "t");
    (8834, 0, "e");
    (8835, 0, "r");
    (8836, 0, " ");
    (8837, 0, "o");
    (8838, 0, "f");
    (8839, 0, " ");
    (8840, 0, "t");
    (8841, 0, "h");
    (8842, 0, "e");
    (8843, 0, " ");
    (8844, 0, "g");
    (8845, 0, "a");
    (8846, 0, "m");
    (8847, 0, "e");
    (8848, 0, "s");
    (8849, 0, " ");
    (8850, 0, "i");
    (8851, 0, "s");
    (8852, 0, " ");
    (8853, 0, "p");
    (8854, 0, "r");
    (8855, 0, "e");
    (8856, 0, "s");
    (8857, 0, "e");
    (8858, 0, "n");
    (8859, 0, "t");
    (8860, 0, ",");
    (8861, 0, " ");
    (8862, 0, "o");
    (8863, 0, "t");
    (8864, 0, "h");
    (8865, 0, "e");
    (8866, 0, "r");
    (8867, 0, " ");
    (8868, 0, "p");
    (8869, 0, "l");
    (8870, 0, "a");
    (8871, 0, "y");
    (8872, 0, "e");
    (8873, 0, "r");
    (8874, 0, "s");
    (8875, 0, " ");
    (8876, 0, "c");
    (8877, 0, "a");
    (8878, 0, "n");
    (8879, 0, "n");
    (8880, 0, "o");
    (8881, 0, "t");
    (8882, 0, " ");
    (8883, 0, "a");
    (8884, 0, "c");
    (8885, 0, "c");
    (8886, 0, "e");
    (8887, 0, "s");
    (8888, 0, "s");
    (8889, 0, " ");
    (8890, 0, "t");
    (8891, 0, "h");
    (8892, 0, "e");
    (8893, 0, " ");
    (8894, 0, "g");
    (8895, 0, "a");
    (8896, 0, "m");
    (8897, 0, "e");
    (8898, 0, "'");
    (8899, 0, "s");
    (8900, 0, " ");
    (8901, 0, "c");
    (8902, 0, "o");
    (8903, 0, "n");
    (8904, 0, "t");
    (8905, 0, "r");
    (8906, 0, "o");
    (8907, 0, "l");
    (8908, 0, "s");
    (8909, 0, ".");
    (8876, 6, "l");
    (8877, 0, "o");
    (8878, 0, "s");
    (8879, 0, "e");
    (10330, 0, "\t");
    (10331, 0, "f");
    (10332, 0, "o");
    (10333, 0, "n");
    (10334, 0, "t");
    (10335, 0, "-");
    (10336, 0, "x");
    (10336, 1, "");
    (10336, 0, "s");
    (10337, 0, "i");
    (10338, 0, "z");
    (10339, 0, "e");
    (10340, 0, ":");
    (10341, 0, " ");
    (10342, 0, "8");
    (10343, 0, "0");
    (10344, 0, "%");
    (10345, 0, ";");
    (10342, 1, "");
    (10342, 0, "1");
    (10343, 0, "0");
    (10284, 0, "\n\t");
    (10286, 0, "b");
    (10287, 0, "a");
    (10288, 0, "c");
    (10289, 0, "k");
    (10290, 0, "g");
    (10291, 0, "r");
    (10292, 0, "o");
    (10293, 0, "u");
    (10294, 0, "n");
    (10295, 0, "d");
    (10296, 0, "-");
    (10297, 0, "c");
    (10298, 0, "o");
    (10299, 0, "l");
    (10300, 0, "o");
    (10301, 0, "r");
    (10302, 0, ":");
    (10303, 0, " ");
    (10304, 0, "b");
    (10305, 0, "l");
    (10306, 0, "a");
    (10307, 0, "c");
    (10308, 0, "k");
    (10309, 0, ";");
    (10310, 0, "\n\t");
    (10312, 0, "b");
    (10313, 0, "l");
    (10314, 0, "e");
    (10315, 0, "n");
    (10316, 0, "d");
    (10317, 0, "-");
    (10318, 0, "m");
    (10319, 0, "o");
    (10320, 0, "d");
    (10321, 0, "e");
    (10312, 10, "background-blend-mode: ;");
    (10335, 0, "darken");
    (10304, 5, "w");
    (10305, 0, "h");
    (10306, 0, "i");
    (10307, 0, "t");
    (10308, 0, "e");
    (10342, 0, "\n\t");
    (10344, 0, "b");
    (10345, 0, "l");
    (10346, 0, "e");
    (10347, 0, "n");
    (10348, 0, "d");
    (10349, 0, "-");
    (10350, 0, "m");
    (10351, 0, "o");
    (10344, 8, "mix-blend-mode: ;");
    (10360, 0, "d");
    (10361, 0, "a");
    (10362, 0, "r");
    (10363, 0, "k");
    (10364, 0, "e");
    (10365, 0, "n");
    (10343, 24, "");
    (10342, 1, "");
    (10312, 30, "");
    (10311, 1, "");
    (10310, 1, "");
    (10309, 1, "");
    (10309, 0, ";");
    (10310, 0, " */");
    (10286, 0, "/* ");
    (10313, 3, "");
    (10286, 3, "");
    (10304, 5, "#1c0303");
    (10375, 0, "\n\t");
    (10377, 0, "w");
    (10378, 0, "i");
    (10379, 0, "d");
    (10380, 0, "t");
    (10381, 0, "h");
    (10382, 0, ":");
    (10383, 0, " ");
    (10384, 0, "1");
    (10385, 0, "0");
    (10386, 0, "0");
    (10387, 0, "%");
    (10388, 0, ";");
    (10389, 0, "\n\t");
    (10391, 0, "m");
    (10392, 0, "a");
    (10393, 0, "r");
    (10394, 0, "g");
    (10395, 0, "i");
    (10396, 0, "n");
    (10397, 0, ":");
    (10398, 0, " ");
    (10399, 0, "0");
    (10400, 0, " ");
    (10401, 0, "2");
    (10402, 0, "e");
    (10403, 0, "m");
    (10404, 0, ";");
    (10390, 15, "");
    (10389, 1, "");
    (8825, 4, "W");
    (8826, 0, "h");
    (8827, 0, "e");
    (8828, 0, "n");
    (8829, 0, " ");
    (8830, 0, "t");
    (8831, 0, "h");
    (8832, 0, "e");
    (8879, 24, " ");
    (8880, 0, "c");
    (8881, 0, "a");
    (8882, 0, "n");
    (8883, 0, "n");
    (8884, 0, "o");
    (8885, 0, "t");
    (8886, 0, " ");
    (8894, 1, "");
    (8894, 0, " ");
    (8895, 0, "t");
    (8896, 0, "h");
    (8897, 0, "e");
    (8898, 0, " ");
    (8899, 0, "g");
    (8900, 0, "a");
    (8901, 0, "m");
    (8902, 0, "e");
    (8904, 0, " -->");
    (8825, 0, "<!-- ");
    (8819, 0, "\n\t\t\t\t\t");
    (8825, 0, "W");
    (8826, 0, "h");
    (8827, 0, "e");
    (8828, 0, "n");
    (8829, 0, " ");
    (8830, 0, "p");
    (8831, 0, "r");
    (8832, 0, "e");
    (8833, 0, "s");
    (8834, 0, "e");
    (8835, 0, "n");
    (8836, 0, "t");
    (8837, 0, ",");
    (8838, 0, " ");
    (8839, 0, "o");
    (8840, 0, "n");
    (8841, 0, "l");
    (8842, 0, "y");
    (8843, 0, " ");
    (8844, 0, "t");
    (8845, 0, "h");
    (8846, 0, "e");
    (8847, 0, " ");
    (8848, 0, "m");
    (8848, 1, "");
    (8848, 0, "M");
    (8849, 0, "a");
    (8850, 0, "s");
    (8851, 0, "t");
    (8852, 0, "e");
    (8853, 0, "r");
    (8854, 0, " ");
    (8855, 0, "o");
    (8856, 0, "f");
    (8857, 0, " ");
    (8858, 0, "t");
    (8859, 0, "h");
    (8860, 0, "e");
    (8861, 0, " ");
    (8862, 0, "G");
    (8863, 0, "A");
    (8864, 0, "m");
    (8865, 0, "e");
    (8866, 0, "s");
    (8866, 1, "");
    (8865, 1, "");
    (8864, 1, "");
    (8863, 1, "");
    (8863, 0, "a");
    (8864, 0, "m");
    (8865, 0, "e");
    (8866, 0, " ");
    (8866, 1, "");
    (8866, 0, "s");
    (8867, 0, " ");
    (8868, 0, "c");
    (8869, 0, "a");
    (8870, 0, "n");
    (8871, 0, " ");
    (8872, 0, "c");
    (8873, 0, "o");
    (8874, 0, "n");
    (8875, 0, "t");
    (8876, 0, "r");
    (8877, 0, "o");
    (8878, 0, "l");
    (8879, 0, " ");
    (8880, 0, "t");
    (8881, 0, "h");
    (8882, 0, "e");
    (8882, 1, "");
    (8881, 1, "");
    (8881, 0, "h");
    (8882, 0, "i");
    (8883, 0, "s");
    (8884, 0, " ");
    (8885, 0, "g");
    (8886, 0, "a");
    (8887, 0, "m");
    (8888, 0, "e");
    (8889, 0, ".");
    (8879, 6, " ");
    (8880, 0, "h");
    (8881, 0, "e");
    (8881, 1, "");
    (8880, 1, "");
    (8880, 0, "t");
    (8881, 0, "h");
    (8882, 0, "e");
    (8883, 0, " ");
    (8888, 0, " ");
    (8889, 0, "t");
    (8890, 0, "i");
    (8891, 0, "m");
    (8892, 0, "e");
    (8893, 0, "r");
    (10470, 0, "\n\t");
    (10472, 0, "m");
    (10473, 0, "a");
    (10474, 0, "r");
    (10475, 0, "g");
    (10476, 0, "i");
    (10477, 0, "n");
    (10478, 0, "-");
    (10479, 0, "t");
    (10480, 0, "o");
    (10481, 0, "p");
    (10482, 0, ":");
    (10483, 0, " ");
    (10484, 0, "0");
    (10485, 0, ";");
    (10340, 0, "1");
    (10340, 1, "");
    (10342, 1, "");
    (10342, 0, "8");
    (10486, 0, "\n\t");
    (10488, 0, "m");
    (10489, 0, "a");
    (10490, 0, "r");
    (10490, 1, "");
    (10489, 1, "");
    (10488, 1, "");
    (10488, 0, "p");
    (10489, 0, "a");
    (10490, 0, "d");
    (10491, 0, "d");
    (10492, 0, "i");
    (10493, 0, "n");
    (10494, 0, "g");
    (10495, 0, ":");
    (10496, 0, " ");
    (10497, 0, "2");
    (10498, 0, "p");
    (10499, 0, "x");
    (10500, 0, " ");
    (10501, 0, "a");
    (10502, 0, "u");
    (10503, 0, "d");
    (10504, 0, "o");
    (10505, 0, ";");
    (10505, 1, "");
    (10504, 1, "");
    (10503, 1, "");
    (10503, 0, "t");
    (10504, 0, "o");
    (10505, 0, ";");
    (10498, 0, "0");
    (10499, 0, "0");
    (10487, 21, "");
    (10486, 1, "");
    (10486, 0, "\n\t");
    (10488, 0, "p");
    (10489, 0, "a");
    (10490, 0, "d");
    (10491, 0, "d");
    (10492, 0, "i");
    (10493, 0, "n");
    (10494, 0, "g");
    (10495, 0, ":");
    (10496, 0, " ");
    (10497, 0, "3");
    (10497, 1, "");
    (10497, 0, "4");
    (10498, 0, "p");
    (10499, 0, "x");
    (10500, 0, " ");
    (10501, 0, "0");
    (10502, 0, ";");
    (10497, 1, "");
    (10497, 0, "3");
    (8868, 26, "h");
    (8869, 0, "a");
    (8870, 0, "s");
    (8871, 0, " ");
    (8872, 0, "a");
    (8873, 0, "c");
    (8874, 0, "c");
    (8875, 0, "e");
    (8876, 0, "s");
    (8877, 0, "s");
    (8878, 0, " ");
    (8879, 0, "t");
    (8880, 0, "o");
    (8881, 0, " ");
    (8882, 0, "t");
    (8883, 0, "h");
    (8884, 0, "e");
    (8885, 0, " ");
    (8886, 0, "g");
    (8887, 0, "a");
    (8888, 0, "m");
    (8889, 0, "e");
    (8890, 0, " ");
    (8891, 0, "c");
    (8892, 0, "o");
    (8893, 0, "n");
    (8894, 0, "t");
    (8895, 0, "r");
    (8896, 0, "o");
    (8897, 0, "l");
    (8898, 0, "s");
    (7058, 0, " ");
    (7059, 0, "W");
    (7060, 0, "i");
    (7061, 0, "l");
    (7062, 0, "l");
    (7063, 0, " ");
    (7064, 0, "y");
    (7065, 0, "o");
    (7066, 0, "u");
    (7067, 0, " ");
    (7068, 0, "b");
    (7069, 0, "o");
    (7070, 0, "r");
    (7071, 0, "r");
    (7072, 0, "o");
    (7073, 0, "w");
    (7074, 0, " ");
    (7075, 0, "p");
    (7076, 0, "o");
    (7077, 0, "w");
    (7078, 0, "e");
    (7079, 0, "r");
    (7080, 0, ",");
    (7081, 0, " ");
    (7082, 0, "o");
    (7083, 0, "r");
    (7084, 0, " ");
    (7085, 0, "s");
    (7086, 0, "t");
    (7087, 0, "e");
    (7088, 0, "a");
    (7089, 0, "l");
    (7090, 0, " ");
    (7091, 0, "i");
    (7092, 0, "t");
    (7093, 0, "?");
    (7549, 5, "R");
    (7550, 0, "e");
    (7551, 0, "s");
    (7552, 0, "t");
    (7553, 0, "a");
    (7554, 0, "r");
    (7555, 0, "t");
    (9159, 0, "\n");
    (9159, 0, "\n");
    (9160, 0, "b");
    (9161, 0, "o");
    (9162, 0, "d");
    (9163, 0, "y");
    (9164, 0, " ");
    (9165, 0, "{");
    (9166, 0, "\n\t");
    (9168, 0, "\n\t");
    (9167, 1, "");
    (9168, 1, "}");
    (9167, 0, "\t");
    (9168, 0, "c");
    (9169, 0, "o");
    (9170, 0, "l");
    (9171, 0, "o");
    (9172, 0, "r");
    (9173, 0, ":");
    (9174, 0, " ");
    (9175, 0, "r");
    (9176, 0, "e");
    (9177, 0, "d");
    (9178, 0, ";");
    (9168, 5, "b");
    (9169, 0, "c");
    (9170, 0, "k");
    (9170, 1, "");
    (9169, 1, "");
    (9169, 0, "a");
    (9170, 0, "c");
    (9168, 3, "background-color");
    (9159, 33, "");
    (9158, 1, "");
    (9187, 0, "\n\t");
    (9189, 0, "b");
    (9190, 0, "a");
    (9191, 0, "c");
    (9192, 0, "k");
    (9193, 0, "g");
    (9194, 0, "r");
    (9195, 0, "o");
    (9196, 0, "u");
    (9197, 0, "n");
    (9198, 0, "d");
    (9199, 0, "-");
    (9200, 0, "c");
    (9201, 0, "o");
    (9202, 0, "l");
    (9203, 0, "o");
    (9204, 0, "r");
    (9205, 0, ":");
    (9206, 0, " ");
    (9207, 0, "r");
    (9208, 0, "e");
    (9209, 0, "d");
    (9210, 0, ";");
    (9188, 23, "");
    (9187, 1, "");
    (8764, 0, "\n\t\t\t\t\t");
    (8770, 0, "#");
    (8771, 0, "{");
    (8771, 1, "");
    (8770, 1, "");
    (8770, 0, "{");
    (8771, 0, "#");
    (8772, 0, "i");
    (8773, 0, "f");
    ( 8772,
      2,
      "await }\n\
       \t\t\t\t\t\t\n\
       \t\t\t\t\t{:then } \n\
       \t\t\t\t\t\t\n\
       \t\t\t\t\t{/await" );
    (8772, 49, "if");
    (8772, 2, "if }\n\t\t\t\t\t\t\n\t\t\t\t\t{/if");
    (8775, 0, "_");
    (8776, 0, "m");
    (8777, 0, "a");
    (8778, 0, "g");
    (8779, 0, "i");
    (8780, 0, "e");
    (8781, 0, "r");
    (8781, 1, "");
    (8780, 1, "");
    (8775, 5, "_magister");
    (8784, 0, " ");
    (8785, 0, "=");
    (8786, 0, "=");
    (8787, 0, " ");
    (8788, 0, "n");
    (8789, 0, "u");
    (8790, 0, "l");
    (8791, 0, "l");
    (8810, 0, "}");
    (8986, 93, "");
    (8985, 1, "");
    (8985, 0, "\n\t\t\t\t\t{/if}");
    (8801, 11, "");
    (8974, 0, "\n\t\t\t\t\t\t");
    (8794, 7, "");
    (8887, 5, "\t\t\t\t\t\t");
    (8794, 5, "\t\t\t\t\t\t");
    (8970, 6, "");
    (8969, 1, "");
    (8969, 0, "\n\t\t\t\t\t\t");
    (8976, 0, "{");
    (8977, 0, ":");
    (8978, 0, "else if");
    (8970, 6, "\t\t\t\t\t");
    (8984, 0, " ");
    (8985, 0, "_");
    (8986, 0, "m");
    (8987, 0, "a");
    (8988, 0, "g");
    (8985, 4, "_magister");
    (8994, 0, " ");
    (8995, 0, "=");
    (8996, 0, "=");
    (8997, 0, " ");
    (8998, 0, "t");
    (8999, 0, "r");
    (9000, 0, "u");
    (9001, 0, "e");
    (9002, 0, "}");
    (9003, 0, "\n\t\t\t\t\t");
    (9004, 5, "");
    ( 9004,
      0,
      "\t\t\t\t\t\t<button on:click={upd('_magister', 'true')}>Assume the \
       mantle of Magister Ludi</button>\n\
       \t\t\t\t\t\tWhen present, only the Master of the Games has access to \
       the game controls.\n" );
    (9098, 6, "\t\t\t\t\t");
    (9004, 6, "\t\t\t\t\t");
    (9177, 1, "");
    (9097, 5, "\t\t\t\t\t\t");
    (9004, 5, "\t\t\t\t\t\t");
    (9046, 4, "n");
    (9047, 0, "u");
    (9048, 0, "l");
    (9049, 0, "l");
    (9054, 34, "A");
    (9055, 0, "b");
    (9056, 0, "d");
    (9057, 0, "i");
    (9058, 0, "c");
    (9059, 0, "a");
    (9060, 0, "t");
    (9061, 0, "e");
    (9062, 0, " ");
    (9063, 0, "M");
    (9064, 0, "a");
    (9065, 0, "g");
    (9066, 0, "i");
    (9067, 0, "s");
    (9068, 0, "t");
    (9069, 0, "e");
    (9070, 0, "r");
    (9071, 0, " ");
    (9072, 0, "L");
    (9073, 0, "u");
    (9074, 0, "d");
    (9075, 0, "i");
    (9076, 0, " ");
    (9077, 0, "s");
    (9078, 0, "t");
    (9079, 0, "a");
    (9080, 0, "t");
    (9081, 0, "u");
    (9082, 0, "s");
    (9099, 75, "Y");
    (9100, 0, "o");
    (9101, 0, "u");
    (9102, 0, " ");
    (9103, 0, "a");
    (9104, 0, "r");
    (9105, 0, "e");
    (9106, 0, " ");
    (9107, 0, "t");
    (9108, 0, "h");
    (9109, 0, "e");
    (9110, 0, " ");
    (9111, 0, "a");
    (9111, 1, "");
    (9111, 0, "m");
    (9112, 0, "a");
    (9113, 0, "s");
    (9114, 0, "t");
    (9115, 0, "e");
    (9116, 0, "r");
    (9117, 0, " ");
    (9118, 0, "o");
    (9119, 0, "f");
    (9120, 0, " ");
    (9121, 0, "t");
    (9122, 0, "h");
    (9123, 0, "e");
    (9124, 0, " ");
    (9125, 0, "g");
    (9126, 0, "a");
    (9127, 0, "m");
    (9128, 0, "e");
    (9129, 0, "s");
    (9130, 0, ".");
    (9131, 0, " ");
    (9132, 0, "N");
    (9133, 0, "o");
    (9134, 0, " ");
    (9135, 0, "o");
    (9136, 0, "t");
    (9137, 0, "h");
    (9138, 0, "e");
    (9139, 0, "r");
    (9140, 0, " ");
    (9141, 0, "p");
    (9142, 0, "l");
    (9143, 0, "a");
    (9144, 0, "y");
    (9145, 0, "e");
    (9146, 0, "r");
    (9147, 0, "s");
    (9148, 0, " ");
    (9149, 0, "c");
    (9150, 0, "a");
    (9151, 0, "n");
    (9152, 0, " ");
    (9153, 0, "a");
    (9154, 0, "c");
    (9155, 0, "c");
    (9156, 0, "e");
    (9157, 0, "s");
    (9158, 0, "s");
    (9159, 0, " ");
    (9160, 0, "t");
    (9161, 0, "h");
    (9162, 0, "i");
    (9163, 0, "s");
    (9164, 0, " ");
    (9165, 0, "r");
    (9166, 0, "o");
    (9167, 0, "o");
    (9168, 0, "m");
    (9169, 0, "'");
    (9170, 0, "s");
    (9171, 0, " ");
    (9172, 0, "c");
    (9173, 0, "o");
    (9174, 0, "n");
    (9175, 0, "t");
    (9176, 0, "r");
    (9177, 0, "o");
    (9178, 0, "l");
    (9179, 0, "s");
    (9180, 0, ".");
    (8894, 0, "<");
    (8895, 0, "d");
    (8896, 0, "i");
    (8897, 0, "v");
    (8898, 0, ">");
    (8974, 0, "<");
    (8975, 0, "/");
    (8976, 0, "d");
    (8977, 0, "i");
    (8978, 0, "v");
    (8979, 0, ">");
    (9110, 0, "<");
    (9111, 0, "d");
    (9112, 0, "i");
    (9113, 0, "v");
    (9114, 0, ">");
    (9115, 0, "</div>");
    (9115, 6, "");
    (9115, 0, "\n\t\t\t\t\t\t\t");
    (9205, 0, "\n\t\t\t\t\t\t\t");
    (9213, 0, "</div>");
    (9206, 7, "\t\t\t\t\t\t");
    (9205, 0, " ");
    (9206, 0, "Y");
    (9207, 0, "o");
    (9208, 0, "u");
    (9209, 0, " ");
    (9210, 0, "w");
    (9211, 0, "i");
    (9212, 0, "l");
    (9213, 0, "l");
    (9214, 0, " ");
    (9215, 0, "l");
    (9216, 0, "o");
    (9217, 0, "s");
    (9218, 0, "e");
    (9219, 0, " ");
    (9220, 0, "e");
    (9221, 0, "x");
    (9222, 0, "c");
    (9223, 0, "l");
    (9224, 0, "u");
    (9225, 0, "s");
    (9226, 0, "i");
    (9227, 0, "v");
    (9228, 0, "e");
    (9229, 0, " ");
    (9230, 0, "r");
    (9231, 0, "i");
    (9232, 0, "g");
    (9233, 0, "h");
    (9234, 0, "t");
    (9235, 0, " ");
    (9219, 17, " ");
    (9220, 0, "t");
    (9221, 0, "h");
    (9222, 0, "i");
    (9223, 0, "s");
    (9224, 0, " ");
    (9225, 0, "s");
    (9226, 0, "t");
    (9227, 0, "a");
    (9228, 0, "t");
    (9229, 0, "u");
    (9230, 0, "s");
    (9231, 0, " ");
    (9232, 0, "i");
    (9233, 0, "f");
    (9234, 0, " ");
    (9235, 0, "y");
    (9236, 0, "o");
    (9237, 0, "u");
    (9238, 0, " ");
    (9239, 0, "c");
    (9240, 0, "l");
    (9241, 0, "o");
    (9242, 0, "s");
    (9243, 0, "e");
    (9244, 0, " ");
    (9245, 0, "t");
    (9246, 0, "h");
    (9247, 0, "i");
    (9248, 0, "s");
    (9249, 0, " ");
    (9250, 0, "b");
    (9251, 0, "r");
    (9252, 0, "o");
    (9253, 0, "w");
    (9254, 0, "s");
    (9255, 0, "e");
    (9256, 0, "r");
    (9257, 0, " ");
    (9258, 0, "w");
    (9259, 0, "i");
    (9260, 0, "n");
    (9261, 0, "d");
    (9262, 0, "o");
    (9263, 0, "w");
    (9264, 0, ".");
    (8835, 1, "");
    (8839, 1, "");
    (9054, 6, "n");
    (9055, 0, "u");
    (9056, 0, "l");
    (9057, 0, "l");
    (9200, 1, "");
    (9200, 0, ".");
    (9201, 0, "\n\t\t\t\t\t\t\t");
    (9209, 1, "");
    ( 9100,
      101,
      "\t\t\t\t\t\t<div> You are the master of the games. No other players can \
       access this room's controls." );
    (9111, 1, "");
    (9193, 0, "<");
    (9194, 0, "/");
    (9195, 0, "d");
    (9196, 0, "i");
    (9197, 0, "v");
    (9198, 0, ">");
    (9206, 1, "");
    (9205, 1, "");
    (9205, 0, "\t");
    (9206, 0, "<");
    (9207, 0, "d");
    (9208, 0, "i");
    (9209, 0, "v");
    (9210, 0, ">");
    ( 9200,
      83,
      "\t\t\t\t\t\t<div>You will lose this status if you close this browser \
       window. </div>" );
    (9270, 1, "");
    (9272, 3, "p");
    (9207, 3, "p");
    (9195, 3, "p");
    (9107, 3, "p");
    (6974, 0, " ");
    (6975, 0, "b");
    (6976, 0, "i");
    (6977, 0, "n");
    (6978, 0, "d");
    (6979, 0, ":");
    (6980, 0, "o");
    (6981, 0, "p");
    (6982, 0, "e");
    (6983, 0, "n");
    (6984, 0, "=");
    (6985, 0, "{");
    (6986, 0, "}");
    (6986, 0, "c");
    (6987, 0, "o");
    (6988, 0, "n");
    (6989, 0, "f");
    (6990, 0, "i");
    (6991, 0, "g");
    (6992, 0, "_");
    (6993, 0, "o");
    (6994, 0, "p");
    (6995, 0, "e");
    (6996, 0, "n");
    (5163, 0, "\n");
    (5164, 0, "\n");
    (5164, 0, "l");
    (5165, 0, "e");
    (5166, 0, "t");
    (5167, 0, " ");
    (5168, 0, "c");
    (5169, 0, "o");
    (5170, 0, "n");
    (5171, 0, "f");
    (5172, 0, "i");
    (5173, 0, "g");
    (5174, 0, "_");
    (5175, 0, "o");
    (5176, 0, "p");
    (5168, 9, "config_open");
    (5179, 0, "\n");
    (5180, 0, "\n");
    (5181, 0, "$");
    (5182, 0, ":");
    (5183, 0, " ");
    (5184, 0, "c");
    (5185, 0, "o");
    (5186, 0, "n");
    (5187, 0, "s");
    (5188, 0, "o");
    (5189, 0, "l");
    (5190, 0, "e");
    (5184, 7, "console");
    (5191, 0, ".");
    (5192, 0, "l");
    (5193, 0, "o");
    (5194, 0, "g");
    (5192, 3, "log");
    (5195, 0, "(");
    (5196, 0, "'");
    (5197, 0, "c");
    (5198, 0, "o");
    (5199, 0, "n");
    (5200, 0, "f");
    (5201, 0, "i");
    (5202, 0, "g");
    (5203, 0, "'");
    (5204, 0, ",");
    (5205, 0, " ");
    (5206, 0, "c");
    (5207, 0, "o");
    (5208, 0, "n");
    (5209, 0, "g");
    (5210, 0, "i");
    (5211, 0, "f");
    (5211, 1, "");
    (5210, 1, "");
    (5209, 1, "");
    (5209, 0, "f");
    (5210, 0, "i");
    (5211, 0, "g");
    (5212, 0, "_");
    (5206, 7, "config_open");
    (5217, 0, ")");
    (5184, 34, "i");
    (5185, 0, "f");
    (5186, 0, " ");
    (5187, 0, "(");
    (5188, 0, "m");
    (5189, 0, "a");
    (5190, 0, "g");
    (5191, 0, "s");
    (5192, 0, "t");
    (5188, 5, "_magister");
    (5197, 0, " ");
    (5198, 0, "=");
    (5199, 0, "=");
    (5200, 0, " ");
    (5201, 0, "t");
    (5202, 0, "r");
    (5203, 0, "u");
    (5204, 0, "e");
    (5205, 0, ")");
    (5206, 0, " ");
    (5207, 0, "c");
    (5208, 0, "o");
    (5209, 0, "n");
    (5210, 0, "f");
    (5211, 0, "i");
    (5212, 0, "g");
    (5213, 0, "_");
    (5207, 7, "config_open");
    (5218, 0, " ");
    (5219, 0, "=");
    (5220, 0, " ");
    (5221, 0, "t");
    (5222, 0, "r");
    (5223, 0, "u");
    (5224, 0, "e");
    (5181, 0, "$: if (_magister == true) config_open = true\n");
    (5233, 9, "_");
    (5234, 0, "a");
    (5235, 0, "c");
    (5236, 0, "t");
    (5237, 0, "i");
    (5233, 5, "_active_sessions");
    (5179, 0, " ");
    (5180, 0, "=");
    (5181, 0, " ");
    (5182, 0, "f");
    (5183, 0, "a");
    (5184, 0, "l");
    (5185, 0, "s");
    (5186, 0, "e");
    (5187, 1, "");
    (5232, 0, "\n");
    (5233, 0, "/");
    (5234, 0, "/");
    (5235, 0, " ");
    (5236, 0, "T");
    (5237, 0, "h");
    (5238, 0, "e");
    (5239, 0, " ");
    (5240, 0, "f");
    (5241, 0, "i");
    (5242, 0, "r");
    (5243, 0, "s");
    (5244, 0, "t");
    (5245, 0, " ");
    (5246, 0, "y");
    (5247, 0, "s");
    (5248, 0, "e");
    (5249, 0, "r");
    (5246, 4, "u");
    (5247, 0, "s");
    (5248, 0, "e");
    (5249, 0, " ");
    (5249, 1, "");
    (5249, 0, "r");
    (5250, 0, " ");
    (5251, 0, "h");
    (5252, 0, "a");
    (5253, 0, "s");
    (5254, 0, " ");
    (5255, 0, "t");
    (5256, 0, "h");
    (5257, 0, "e");
    (5258, 0, " ");
    (5259, 0, "c");
    (5260, 0, "o");
    (5261, 0, "n");
    (5262, 0, "f");
    (5263, 0, "i");
    (5264, 0, "g");
    (5265, 0, " ");
    (5266, 0, "o");
    (5267, 0, "p");
    (5268, 0, "e");
    (5269, 0, "n");
    (5270, 0, " ");
    (5271, 0, "b");
    (5272, 0, "y");
    (5273, 0, " ");
    (5274, 0, "d");
    (5275, 0, "e");
    (5276, 0, "f");
    (5277, 0, "a");
    (5278, 0, "u");
    (5279, 0, "l");
    (5280, 0, "t");
    (5281, 0, ".");
    (5232, 0, "\n");
    (5187, 0, "\n");
    (10301, 0, " */");
    (10277, 0, "/* ");
    (10307, 0, "\n\t");
    (10309, 0, "b");
    (10310, 0, "a");
    (10311, 0, "c");
    (10312, 0, "k");
    (10313, 0, "g");
    (10314, 0, "r");
    (10315, 0, "o");
    (10316, 0, "u");
    (10317, 0, "n");
    (10318, 0, "d");
    (10319, 0, "0");
    (10320, 0, "c");
    (10320, 1, "");
    (10319, 1, "");
    (10319, 0, "-");
    (10320, 0, "c");
    (10321, 0, "o");
    (10322, 0, "l");
    (10323, 0, "o");
    (10324, 0, "r");
    (10325, 0, ":");
    (10326, 0, " ");
    (10327, 0, "w");
    (10328, 0, "h");
    (10329, 0, "i");
    (10330, 0, "t");
    (10331, 0, "e");
    (10332, 0, ";");
    (10333, 0, "\n\t");
    (10335, 0, "c");
    (10336, 0, "o");
    (10337, 0, "l");
    (10338, 0, "o");
    (10339, 0, "r");
    (10340, 0, ":");
    (10341, 0, " ");
    (10342, 0, "color: #330202;");
    (10335, 7, "");
    (9117, 0, " ");
    (9118, 0, "M");
    (9119, 0, "a");
    (9120, 0, "g");
    (9121, 0, "i");
    (9122, 0, "s");
    (9123, 0, "t");
    (9124, 0, "e");
    (9125, 0, "r");
    (9126, 0, " ");
    (9127, 0, "L");
    (9128, 0, "u");
    (9129, 0, "d");
    (9130, 0, "i");
    (9131, 0, " ");
    (9132, 0, "(");
    (9133, 1, "");
    (9133, 1, "");
    (9133, 0, "m");
    (9147, 1, "");
    (9147, 0, "g");
    (9152, 0, ")");
    (9109, 6, "t");
    (9153, 6, "e");
    (9154, 0, "x");
    (9155, 0, "c");
    (9156, 0, "l");
    (9157, 0, "u");
    (9158, 0, "i");
    (9158, 1, "");
    (9158, 0, "s");
    (9159, 0, "i");
    (9160, 0, "v");
    (9161, 0, "e");
    (9162, 13, " ");
    (9170, 1, "");
    (9170, 0, " ");
    (9171, 0, "o");
    (9172, 0, "f");
    (9173, 0, " ");
    (9174, 0, "t");
    (9175, 0, "h");
    (9176, 0, "e");
    (9177, 0, " ");
    (9178, 0, "g");
    (9179, 0, "a");
    (9180, 0, "m");
    (9181, 0, "e");
    (9374, 27, "");
    (9353, 21, "O");
    (9354, 0, "t");
    (9355, 0, "h");
    (9356, 0, "e");
    (9357, 0, "r");
    (9358, 0, " ");
    (9359, 0, "p");
    (9360, 0, "l");
    (9361, 0, "a");
    (9362, 0, "y");
    (9363, 0, "e");
    (9364, 0, "r");
    (9365, 0, "s");
    (9366, 0, " ");
    (9367, 0, "c");
    (9368, 0, "a");
    (9369, 0, "n");
    (9370, 0, "n");
    (9371, 0, "o");
    (9372, 0, "t");
    (9373, 0, " ");
    (9374, 0, "p");
    (9375, 0, "l");
    (9376, 0, "a");
    (9377, 0, "y");
    (9378, 0, "/");
    (9379, 0, "p");
    (9380, 0, "a");
    (9381, 0, "u");
    (9382, 0, "s");
    (9383, 0, "e");
    (9384, 0, " ");
    (9385, 0, "c");
    (9386, 0, "o");
    (9387, 0, "n");
    (9387, 1, "");
    (9386, 1, "");
    (9385, 1, "");
    (9385, 0, "o");
    (9386, 0, "r");
    (9387, 0, " ");
    (9388, 0, "c");
    (9389, 0, "o");
    (9390, 0, "n");
    (9391, 0, "f");
    (9392, 0, "i");
    (9393, 0, "g");
    (9394, 0, "u");
    (9395, 0, "r");
    (9396, 0, "e");
    (9397, 0, " ");
    (9398, 0, "t");
    (9399, 0, "h");
    (9400, 0, "i");
    (9401, 0, "s");
    (9402, 0, " ");
    (9403, 0, "g");
    (9404, 0, "a");
    (9405, 0, "m");
    (9406, 0, "e");
    (9426, 22, "");
    (9425, 1, "");
    (9425, 0, "r");
    (9426, 0, " ");
    (9427, 0, "p");
    (9428, 0, "o");
    (9429, 0, "w");
    (9430, 0, "e");
    (9431, 0, "r");
    (9432, 0, " ");
    (9433, 0, "w");
    (9434, 0, "i");
    (9435, 0, "l");
    (9436, 0, "l");
    (9437, 0, " ");
    (9438, 0, "b");
    (9439, 0, "e");
    (9440, 0, " ");
    (9441, 0, "l");
    (9442, 0, "o");
    (9443, 0, "s");
    (9444, 0, "t");
    (9445, 0, " ");
    (9582, 0, ".");
    ( 9189,
      0,
      "\n\
       \t\t\t\t\t\t<div>When present, the Magister Ludi (master of the games) \
       has exclusive control of the game.</div>" );
    (9291, 3, "p");
    (9197, 3, "p");
    (9185, 3, "p");
    (9091, 3, "p");
    (9093, 88, "");
    (9093, 0, "<");
    (9094, 0, "i");
    (9095, 0, ">");
    (9096, 0, "A");
    (9097, 0, "d");
    (9098, 0, "v");
    (9099, 0, "a");
    (9100, 0, "n");
    (9101, 0, "c");
    (9102, 0, "e");
    (9103, 0, "d");
    (9104, 0, "<");
    (9105, 0, "/");
    (9106, 0, "i");
    (9107, 0, ">");
    (9104, 0, " ");
    (9105, 0, "-");
    (9106, 0, " ");
    (9107, 0, "f");
    (9108, 0, "o");
    (9109, 0, "r");
    (9110, 0, " ");
    (9111, 0, "l");
    (9112, 0, "a");
    (9113, 0, "r");
    (9114, 0, "g");
    (9115, 0, "e");
    (9116, 0, " ");
    (9117, 0, "g");
    (9118, 0, "a");
    (9119, 0, "m");
    (9120, 0, "e");
    (9121, 0, "s");
    (10468, 0, "\n\t");
    (10470, 0, "o");
    (10471, 0, "p");
    (10472, 0, "a");
    (10473, 0, "c");
    (10474, 0, "i");
    (10475, 0, "t");
    (10476, 0, "y");
    (10477, 0, ":");
    (10478, 0, " ");
    (10479, 0, "5");
    (10480, 0, "0");
    (10480, 1, "");
    (10479, 1, "");
    (10479, 0, "4");
    (10480, 0, "0");
    (10481, 0, "%");
    (10482, 0, ";");
    (10469, 14, "");
    (10468, 1, "");
    (10991, 0, "\n\t");
    (10993, 0, "\topacity: 40%;");
    (10992, 2, "\t");
    (10992, 14, "");
    (10991, 1, "");
    (10993, 0, "\n");
    (10994, 0, "\n");
    (10995, 0, "\topacity: 40%;");
    (10995, 1, "");
    (10994, 0, "\n");
    (10994, 1, "");
    (10995, 0, "\t");
    (10995, 14, "");
    (10994, 1, "");
    (10993, 1, "");
    (10991, 0, "\n");
    (10992, 0, "\topacity: 40%;");
    (11006, 0, "\n\t");
    (11008, 0, "a");
    (11009, 0, "n");
    (11010, 0, "i");
    (11011, 0, "m");
    (11012, 0, "a");
    (11013, 0, "t");
    (11014, 0, "e");
    (11015, 0, ":");
    (11016, 0, " ");
    (11008, 9, "t");
    (11009, 0, "r");
    (11010, 0, "a");
    (11011, 0, "n");
    (11012, 0, "s");
    (11013, 0, "i");
    (11014, 0, "t");
    (11015, 0, "i");
    (11016, 0, "o");
    (11017, 0, "n");
    (11018, 0, ":");
    (11019, 0, " ");
    (11020, 0, "o");
    (11021, 0, "p");
    (11022, 0, "a");
    (11020, 3, "opacity");
    (11027, 0, " ");
    (11028, 0, "1");
    (11029, 0, "s");
    (11030, 0, " ");
    (11031, 0, "f");
    (11032, 0, "a");
    (11033, 0, "d");
    (11034, 0, "e");
    (11030, 5, "");
    (11030, 0, ";");
    (11033, 0, "\n");
    (11034, 0, "\n");
    (11035, 0, "#magister_box");
    (11048, 0, ":");
    (11049, 0, "h");
    (11050, 0, "o");
    (11051, 0, "v");
    (11052, 0, "e");
    (11053, 0, "r");
    (11054, 0, " ");
    (11055, 0, "{");
    (11056, 0, "\n\t");
    (11058, 0, "\n\t");
    (11057, 1, "");
    (11058, 1, "}");
    (11057, 0, " ");
    (11057, 1, "");
    (11057, 0, "\t");
    (11058, 0, "o");
    (11059, 0, "p");
    (11060, 0, "a");
    (11061, 0, "c");
    (11062, 0, "i");
    (11063, 0, "t");
    (11064, 0, "y");
    (11065, 0, ":");
    (11066, 0, " ");
    (11067, 0, "1");
    (11068, 0, "0");
    (11069, 0, "0");
    (11070, 0, "%");
    (11071, 0, ";");
    (11028, 1, "");
    (11028, 0, "0");
    (11029, 0, ".");
    (11030, 0, "2");
    (11030, 1, "");
    (11030, 0, "4");
    (11032, 0, " ");
    (11033, 0, "ease-in-out;");
    (11044, 1, "");
    (11040, 4, "");
    (11039, 1, "");
    (11038, 1, "");
    (11038, 0, "o");
    (11039, 0, "i");
    (11040, 0, "t");
    (11040, 1, "");
    (11039, 1, "");
    (11039, 0, "u");
    (11040, 0, "t");
    (11030, 1, "");
    (11030, 0, "3");
    (11044, 0, "\n");
    (11045, 0, "#magister_box");
    (11058, 0, ".");
    (11059, 0, "o");
    (11060, 0, "p");
    (11061, 0, "a");
    (11062, 0, "q");
    (11063, 0, "u");
    (11064, 0, "e");
    (11065, 0, " ");
    (11066, 0, "{");
    (11067, 0, "\n\t");
    (11069, 0, "\n\t");
    (11068, 1, "");
    (11069, 1, "}");
    (11068, 0, "opacity: 40%;");
    (11068, 0, "\t");
    (11078, 1, "");
    (11078, 0, "1");
    (11079, 0, "0");
    (8961, 0, " ");
    (8962, 0, "c");
    (8963, 0, "l");
    (8964, 0, "a");
    (8965, 0, "s");
    (8966, 0, "s");
    (8967, 0, ":");
    (11066, 0, "m");
    (11067, 0, "a");
    (11068, 0, "g");
    (11069, 0, "i");
    (11070, 0, "s");
    (11071, 0, "t");
    (11072, 0, "e");
    (11073, 0, "r");
    (11074, 0, "_");
    (8968, 0, "m");
    (8969, 0, "a");
    (8970, 0, "g");
    (8971, 0, "i");
    (8972, 0, "s");
    (8973, 0, "t");
    (8974, 0, "e");
    (8975, 0, "r");
    (8976, 0, "_");
    (8977, 0, "o");
    (8978, 0, "p");
    (8979, 0, "a");
    (8980, 0, "u");
    (8980, 1, "");
    (8980, 0, "q");
    (8981, 0, "u");
    (8982, 0, "e");
    (5337, 0, "\n");
    (5337, 0, "\n");
    (5338, 0, "magister_opaque");
    (5338, 0, "l");
    (5339, 0, "e");
    (5340, 0, "t");
    (5341, 0, " ");
    (5357, 0, " ");
    (5358, 0, "=");
    (5359, 0, " ");
    (5360, 0, "f");
    (5361, 0, "a");
    (5362, 0, "l");
    (5363, 0, "s");
    (5364, 0, "e");
    (5365, 0, "\n");
    (5366, 0, "$");
    (5367, 0, ":");
    (5368, 0, " ");
    (5369, 0, "m");
    (5370, 0, "a");
    (5371, 0, "g");
    (5372, 0, "i");
    (5369, 4, "magister_opaque");
    (5384, 0, " ");
    (5385, 0, "=");
    (5386, 0, " ");
    (5387, 0, "t");
    (5388, 0, "r");
    (5389, 0, "u");
    (5390, 0, "e");
    (5338, 0, "// ");
    (5389, 0, " ");
    (5390, 0, "_");
    (5391, 0, "m");
    (5392, 0, "a");
    (5393, 0, "s");
    (5393, 1, "");
    (5393, 0, "g");
    (5394, 0, "i");
    (5395, 0, "s");
    (5396, 0, "t");
    (5397, 0, "e");
    (5398, 0, "r");
    (5399, 0, " ");
    (5400, 0, "=");
    (5401, 0, "=");
    (5402, 0, "=");
    (5403, 0, " ");
    (5404, 0, "t");
    (5405, 0, "r");
    (5406, 0, "u");
    (5407, 0, "e");
    (5408, 0, " ");
    (5409, 0, "|");
    (5410, 0, "|");
    (5411, 0, " ");
    (5208, 0, "=");
    (5310, 0, "=");
    (5414, 0, "_");
    (5415, 0, "a");
    (5416, 0, "c");
    (5417, 0, "t");
    (5418, 0, "i");
    (5419, 0, "v");
    (5414, 6, "_active_sessions");
    (5314, 4, "1");
    (5427, 0, " ");
    (5428, 0, ">");
    (5429, 0, " ");
    (5430, 0, "6");
    (5431, 5, "");
    (5430, 1, "");
    (5430, 0, "1");
    (5430, 1, "");
    (5430, 0, "6");
    (5429, 0, "=");
    (5337, 30, "");
    (5337, 0, "/");
    (5338, 0, "/");
    (5339, 0, " ");
    (5340, 0, "M");
    (5341, 0, "A");
    (5342, 0, "k");
    (5343, 0, "e");
    (5344, 0, " ");
    (5345, 0, "t");
    (5346, 0, "h");
    (5347, 0, "e");
    (5348, 0, " ");
    (5341, 1, "");
    (5341, 0, "a");
    (5349, 0, "m");
    (5350, 0, "a");
    (5351, 0, "g");
    (5352, 0, "i");
    (5353, 0, "s");
    (5354, 0, "t");
    (5355, 0, "e");
    (5356, 0, "r");
    (5357, 0, " ");
    (5358, 0, "b");
    (5359, 0, "o");
    (5360, 0, "x");
    (5361, 0, " ");
    (5362, 0, "f");
    (5363, 0, "u");
    (5364, 0, "l");
    (5365, 0, "l");
    (5366, 0, "y");
    (5367, 0, " ");
    (5368, 0, "v");
    (5369, 0, "i");
    (5370, 0, "s");
    (5371, 0, "i");
    (5372, 0, "b");
    (5373, 0, "l");
    (5374, 0, "e");
    (5375, 0, " ");
    (5376, 0, "o");
    (5377, 0, "n");
    (5378, 0, "c");
    (5379, 0, "e");
    (5380, 0, " ");
    (5381, 0, "t");
    (5382, 0, "h");
    (5383, 0, "e");
    (5384, 0, "r");
    (5385, 0, "e");
    (5386, 0, "'");
    (5387, 0, "s");
    (5388, 0, " ");
    (5389, 0, "e");
    (5390, 0, "n");
    (5391, 0, "o");
    (5392, 0, "u");
    (5393, 0, "h");
    (5394, 0, "g");
    (5395, 0, " ");
    (5396, 0, "p");
    (5397, 0, "l");
    (5389, 9, "a");
    (5390, 0, " ");
    (5391, 0, "c");
    (5392, 0, "r");
    (5393, 0, "i");
    (5394, 0, "t");
    (5395, 0, "i");
    (5396, 0, "c");
    (5397, 0, "a");
    (5398, 0, "l");
    (5399, 0, " ");
    (5400, 0, "m");
    (5401, 0, "a");
    (5402, 0, "s");
    (5403, 0, "s");
    (5404, 0, " ");
    (5405, 0, "o");
    (5406, 0, "f");
    (5407, 0, " ");
    (5408, 0, "p");
    (5409, 0, "l");
    (5410, 0, "a");
    (5411, 0, "y");
    (5412, 0, "e");
    (5413, 0, "r");
    (5414, 0, "s");
    (5415, 0, " ");
    (5416, 0, "i");
    (5417, 0, "n");
    (5418, 0, " ");
    (5419, 0, "t");
    (5420, 0, "h");
    (5421, 0, "e");
    (5422, 0, " ");
    (5423, 0, "r");
    (5424, 0, "o");
    (5425, 0, "o");
    (5426, 0, "m");
    (5340, 6, "T");
    (5356, 0, " ");
    (5357, 0, "i");
    (5358, 0, "s");
    (9831, 0, "\n");
    (9832, 0, "<svelte:body/>");
    (9844, 1, "");
    (9844, 0, " ");
    (9845, 0, "/");
    (9844, 0, " ");
    (9845, 0, "c");
    (9846, 0, "l");
    (9847, 0, "a");
    (9848, 0, "s");
    (9849, 0, "s");
    (9850, 0, "=");
    (9845, 6, "s");
    (9846, 0, "t");
    (9847, 0, "y");
    (9848, 0, "l");
    (9849, 0, "e");
    (9850, 0, "=");
    (9851, 0, "\"");
    (9852, 0, "b");
    (9853, 0, "a");
    (9854, 0, "c");
    (9855, 0, "k");
    (9856, 0, "g");
    (9857, 0, "r");
    (9858, 0, "o");
    (9859, 0, "u");
    (9860, 0, "n");
    (9861, 0, "d");
    (9862, 0, "-");
    (9863, 0, "c");
    (9864, 0, "o");
    (9865, 0, "l");
    (9866, 0, "o");
    (9867, 0, "r");
    (9868, 0, ":");
    (9869, 0, " ");
    (9870, 0, "r");
    (9871, 0, "e");
    (9872, 0, "d");
    (9873, 0, ";");
    (9874, 0, "\"");
    (9845, 30, "l");
    (9845, 1, "");
    (9845, 0, "c");
    (9846, 0, "l");
    (9847, 0, "a");
    (9848, 0, "s");
    (9849, 0, "s");
    (9850, 0, "=");
    (9851, 0, "\"");
    (9852, 0, "f");
    (9853, 0, "o");
    (9854, 0, "o");
    (9855, 0, "\"");
    (9868, 0, "\n\t");
    (9870, 0, "\n\t");
    (9869, 1, "");
    (9870, 1, "");
    (9870, 0, ".");
    (9871, 0, "f");
    (9872, 0, "o");
    (9873, 0, "o");
    (9874, 0, " ");
    (9875, 0, "{");
    (9876, 0, "}");
    (9876, 0, " ");
    (9877, 0, "c");
    (9878, 0, "o");
    (9879, 0, "l");
    (9880, 0, "o");
    (9881, 0, "r");
    (9882, 0, ":");
    (9883, 0, " ");
    (9884, 0, "r");
    (9885, 0, "e");
    (9886, 0, "d");
    (9887, 0, ";");
    (9888, 0, " ");
    (9889, 0, "b");
    (9890, 0, "a");
    (9891, 0, "c");
    (9892, 0, "k");
    (9893, 0, "g");
    (9894, 0, "r");
    (9895, 0, "o");
    (9896, 0, "u");
    (9897, 0, "n");
    (9898, 0, "d");
    (9899, 0, "-");
    (9900, 0, "c");
    (9901, 0, "o");
    (9902, 0, "l");
    (9903, 0, "o");
    (9904, 0, "r");
    (9905, 0, ":");
    (9906, 0, " ");
    (9907, 0, "r");
    (9908, 0, "e");
    (9909, 0, "d");
    (9910, 0, ";");
    (9869, 43, "");
    (9832, 28, "");
    (9841, 1, "");
    (9572, 20, "Y");
    (9573, 0, "o");
    (9574, 0, "u");
    (9575, 0, " ");
    (9576, 0, "a");
    (9577, 0, "r");
    (9578, 0, "e");
    (9579, 0, " ");
    (9580, 0, "r");
    (9581, 0, "s");
    (9582, 0, "p");
    (9583, 0, "o");
    (9583, 1, "");
    (9582, 1, "");
    (9581, 1, "");
    (9581, 0, "e");
    (9582, 0, "s");
    (9583, 0, "p");
    (9584, 0, "o");
    (9585, 0, "n");
    (9586, 0, "s");
    (9587, 0, "i");
    (9588, 0, "b");
    (9589, 0, "l");
    (9590, 0, "e");
    (9591, 0, " ");
    (9592, 0, "f");
    (9593, 0, "o");
    (9594, 0, "r");
    (9600, 0, "i");
    (9601, 0, "n");
    (9602, 0, "g");
    (9603, 1, "");
    (9603, 0, ",");
    (9604, 0, " ");
    (9609, 1, "");
    (9609, 0, "i");
    (9610, 0, "n");
    (9611, 0, "g");
    (9613, 3, "a");
    (9614, 0, "n");
    (9615, 0, "d");
    (9616, 0, " ");
    (9625, 1, "");
    (9625, 0, "i");
    (9626, 0, "n");
    (9627, 0, "g");
    (9576, 15, "");
    (9576, 0, "h");
    (9577, 0, "a");
    (9578, 0, "v");
    (9579, 0, "e");
    (9580, 0, " ");
    (9581, 0, "e");
    (9582, 0, "x");
    (9583, 0, "c");
    (9584, 0, "l");
    (9585, 0, "u");
    (9586, 0, "s");
    (9587, 0, "i");
    (9588, 0, "v");
    (9589, 0, "e");
    (9590, 0, " ");
    (9591, 0, "c");
    (9592, 0, "o");
    (9593, 0, "n");
    (9594, 0, "t");
    (9595, 0, "r");
    (9596, 0, "o");
    (9597, 0, "l");
    (9598, 0, " ");
    (9599, 0, "o");
    (9600, 0, "v");
    (9601, 0, "e");
    (9602, 0, "r");
    (9603, 4, "");
    (9666, 5, "c");
    (9667, 0, "r");
    (9668, 0, "w");
    (9668, 1, "");
    (9668, 0, "o");
    (9669, 0, "w");
    (9670, 0, "n");
    (9666, 5, "c");
    (9667, 0, "o");
    (9668, 0, "n");
    (9669, 0, "t");
    (9670, 0, "r");
    (9671, 0, "o");
    (9672, 0, "l");
    (9661, 28, "D");
    (9662, 0, "o");
    (9663, 0, " ");
    (9664, 0, "o");
    (9664, 1, "");
    (9664, 0, "n");
    (9665, 0, "o");
    (9666, 0, "t");
    (9667, 4, "");
    (9693, 0, " ");
    (9694, 0, "o");
    (9695, 0, "r");
    (9696, 0, " ");
    (9697, 0, "y");
    (9698, 0, "o");
    (9699, 0, "u");
    (9700, 0, " ");
    (9701, 0, "w");
    (9702, 0, "i");
    (9703, 0, "l");
    (9704, 0, "l");
    (9705, 0, " ");
    (9706, 0, "b");
    (9707, 0, "e");
    (9708, 0, " ");
    (9709, 0, "d");
    (9710, 0, "e");
    (9711, 0, "t");
    (9712, 0, "h");
    (9713, 0, "r");
    (9714, 0, "o");
    (9715, 0, "n");
    (9716, 0, "e");
    (9717, 0, "d");
    (7365, 0, "\n\t\t\t\t");
    (7370, 0, "{#if _magister == null");
    (7392, 0, "}");
    (7475, 4, "\t\t\t\t\t");
    (7404, 5, "\t\t\t\t\t\t");
    (7394, 4, "\t\t\t\t\t");
    (7477, 5, "\t\t\t\t");
    (7405, 6, "\t\t\t\t\t");
    (7394, 5, "\t\t\t\t");
    (7393, 10, "");
    (7366, 4, "\t\t\t\t\t");
    (7366, 0, "\t\t\t\t<div>\n");
    (7410, 0, "\t");
    (7476, 0, "\n\t\t\t\t\t\t");
    (7483, 0, "<");
    (7483, 1, "");
    (7483, 0, "{");
    (7484, 0, ":");
    (7485, 0, "s");
    (7486, 0, "e");
    (7486, 1, "");
    (7485, 1, "");
    (7485, 0, "e");
    (7486, 0, "l");
    (7487, 0, "s");
    (7488, 0, "e");
    (7489, 0, "}");
    (7490, 0, "\n\t\t\t\t\t\t");
    (7497, 0, "{");
    (7498, 0, "/");
    (7499, 0, "e");
    (7499, 1, "");
    (7499, 0, "i");
    (7500, 0, "f");
    (7501, 0, "}");
    (7491, 6, "\t\t\t\t\t");
    (7477, 6, "\t\t\t\t\t");
    (7489, 0, "\n\t\t\t\t\t");
    (7495, 0, "\t");
    (7496, 0, "Y");
    (7497, 0, "o");
    (7498, 0, "u");
    (7499, 0, " ");
    (7500, 0, "a");
    (7501, 0, "r");
    (7502, 0, "e");
    (7503, 0, " ");
    (7504, 0, "m");
    (7505, 0, "a");
    (7506, 0, "g");
    (7507, 0, "i");
    (7508, 0, "s");
    (7509, 0, "t");
    (7510, 0, "e");
    (7511, 0, "r");
    (7512, 0, " ");
    (7513, 0, "l");
    (7514, 0, "u");
    (7504, 11, "M");
    (7505, 0, "a");
    (7506, 0, "g");
    (7507, 0, "i");
    (7508, 0, "s");
    (7509, 0, "t");
    (7510, 0, "e");
    (7511, 0, "r");
    (7512, 0, " ");
    (7513, 0, "L");
    (7514, 0, "u");
    (7515, 0, "d");
    (7516, 0, "i");
    (7517, 0, " ");
    (7518, 0, "-");
    (7519, 0, " ");
    (7520, 0, "m");
    (7521, 0, "a");
    (7522, 0, "s");
    (7523, 0, "t");
    (7524, 0, "e");
    (7525, 0, "r");
    (7526, 0, " ");
    (7527, 0, "o");
    (7528, 0, "f");
    (7529, 0, " ");
    (7530, 0, "t");
    (7531, 0, "h");
    (7532, 0, "e");
    (7533, 0, " ");
    (7534, 0, "g");
    (7535, 0, "a");
    (7536, 0, "m");
    (7537, 0, "e");
    (7538, 0, "s");
    (7539, 0, ".");
    (7540, 0, " ");
    (7530, 3, "t");
    (7531, 0, "h");
    (7532, 0, "i");
    (7533, 0, "s");
    (7539, 1, "");
    (7540, 1, "");
    (11131, 7, "var(--bg-color)");
    (10886, 7, "var(--bg-color)");
    (10705, 7, "var(--bg-color)");
    (10230, 7, "var(--bg-color)");
    (11318, 6, "var(--bg-color)");
    (11317, 1, "");
    (11326, 5, "h");
    (11327, 0, "i");
    (11328, 0, "g");
    (11329, 0, "h");
    (11330, 0, "l");
    (11331, 0, "i");
    (11332, 0, "g");
    (11333, 0, "h");
    (11334, 0, "t");
    (10788, 0, "\n");
    (10789, 0, "\n");
    (10790, 0, "#");
    (10791, 0, "c");
    (10792, 0, "i");
    (10793, 0, "n");
    (10793, 1, "");
    (10792, 1, "");
    (10792, 0, "o");
    (10793, 0, "n");
    (10794, 0, "f");
    (10795, 0, "i");
    (10796, 0, "g");
    (10797, 0, ".");
    (10798, 0, "m");
    (10799, 0, "a");
    (10800, 0, "g");
    (10801, 0, "i");
    (10802, 0, "s");
    (10803, 0, "t");
    (10804, 0, "e");
    (10805, 0, "r");
    (10806, 0, " ");
    (10807, 0, "{");
    (10808, 0, "\n\t");
    (10810, 0, "\n\t");
    (10809, 1, "");
    (10810, 1, "}");
    (10809, 0, "var(--bg-color)");
    (10809, 0, "\t");
    (10810, 0, "b");
    (10811, 0, "g");
    (10811, 1, "");
    (10811, 0, "a");
    (10812, 0, "c");
    (10813, 0, "k");
    (10814, 0, "g");
    (10815, 0, "r");
    (10816, 0, "o");
    (10817, 0, "u");
    (10818, 0, "n");
    (10819, 0, "d");
    (10820, 0, "-");
    (10821, 0, "c");
    (10822, 0, "o");
    (10823, 0, "l");
    (10824, 0, "o");
    (10825, 0, "r");
    (10826, 0, ":");
    (10827, 0, " ");
    (10843, 0, ";");
    (10842, 0, "-");
    (10843, 0, "h");
    (10844, 0, "i");
    (10837, 8, "h");
    (10838, 0, "i");
    (10839, 0, "g");
    (10840, 0, "h");
    (10832, 9, "--bg-highlight");
    (11543, 0, " */");
    (11504, 0, "/* ");
    (11482, 0, " ");
    (11482, 1, "");
    (11482, 0, ",");
    (11483, 0, " ");
    (11484, 0, "#magister_box:hover");
    (11524, 46, "");
    (11523, 1, "");
    (11452, 0, "\n");
    (10798, 0, "_");
    (7302, 0, " ");
    (7303, 0, "c");
    (7304, 0, "l");
    (7305, 0, "a");
    (7306, 0, "s");
    (7307, 0, "s");
    (7308, 0, ":");
    (7309, 0, "m");
    (7309, 1, "");
    (7309, 0, "m");
    (7310, 0, "a");
    (7311, 0, "g");
    (7312, 0, "i");
    (7313, 0, "s");
    (7314, 0, "t");
    (7315, 0, "e");
    (7316, 0, "r");
    (7317, 0, "=");
    (7318, 0, "{");
    (7319, 0, "m");
    (7320, 0, "a");
    (7321, 0, "g");
    (7322, 0, "i");
    (7323, 0, "s");
    (7324, 0, "t");
    (7325, 0, "e");
    (7326, 0, "r");
    (7327, 0, "}");
    (7319, 0, "_");
    (10825, 1, "");
    (10024, 0, "\n");
    (10025, 0, "\n");
    (10026, 0, "m");
    (10027, 0, "a");
    (10028, 0, "i");
    (10029, 0, "n");
    (10030, 0, " ");
    (10031, 0, ">");
    (10032, 0, " ");
    (10033, 0, "*");
    (10032, 1, "");
    (10030, 1, "");
    (10032, 0, " ");
    (10033, 0, "{");
    (10034, 0, "\n\t");
    (10036, 0, "\n\t");
    (10035, 1, "");
    (10036, 1, "}");
    (10035, 0, "\t");
    (10036, 0, "m");
    (10037, 0, "a");
    (10038, 0, "r");
    (10039, 0, "g");
    (10040, 0, "i");
    (10041, 0, "n");
    (10042, 0, "=");
    (10042, 1, "");
    (10042, 0, "-");
    (10022, 0, " */");
    (10003, 0, "/* ");
    (10048, 1, "");
    (10048, 0, ":");
    (10049, 0, " ");
    (10049, 1, "");
    (10048, 1, "");
    (10048, 0, "l");
    (10049, 0, "e");
    (10050, 0, "f");
    (10050, 1, "");
    (10049, 1, "");
    (10048, 1, "");
    (10048, 0, "-");
    (10049, 0, "l");
    (10050, 0, "e");
    (10051, 0, "f");
    (10052, 0, "t");
    (10053, 0, ":");
    (10054, 0, " ");
    (10055, 0, "2");
    (10056, 0, "e");
    (10057, 0, "m");
    (10058, 0, ";");
    (10055, 1, "");
    (10055, 0, "3");
    (10031, 30, "");
    (10030, 1, "");
    (7585, 3, "p");
    (7398, 3, "p");
    ( 7521,
      44,
      "\t\t\t\t\t\t<p>You are the master of the games. You have exclusive \
       control over playing, pausing and configuring this game.</p>\n\
       \t\t\t\t\t\t<p>Do not close this browser window or you will be \
       dethroned.</p>\n" );
    (7643, 6, "\t\t\t\t\t");
    (7515, 12, "\t\t\t\t\t");
    (7641, 3, "");
    (7520, 3, "");
    (7699, 1, "");
    (7631, 1, "");
    (7697, 1, "");
    (7630, 1, "");
    (7695, 1, "");
    (7629, 1, "");
    (7693, 1, "");
    (7628, 1, "");
    (7553, 75, "");
    (7553, 0, "Y");
    (7554, 0, "o");
    (7555, 0, "u");
    (7556, 0, " ");
    (7557, 0, "a");
    (7558, 0, "r");
    (7559, 0, "e");
    (7560, 0, " ");
    (7561, 0, "t");
    (7562, 0, "h");
    (7563, 0, "e");
    (7564, 0, " ");
    (7565, 0, "o");
    (7566, 0, "n");
    (7567, 0, "l");
    (7568, 0, "y");
    (7569, 0, " ");
    (7570, 0, "p");
    (7571, 0, "l");
    (7572, 0, "a");
    (7573, 0, "y");
    (7574, 0, "e");
    (7575, 0, "r");
    (7576, 0, " ");
    (7577, 0, "w");
    (7578, 0, "h");
    (7579, 0, "o");
    (7579, 1, "");
    (7578, 1, "");
    (7577, 1, "");
    (7577, 0, "w");
    (7578, 0, "i");
    (7579, 0, "t");
    (7580, 0, "h");
    (7581, 0, " ");
    (7561, 21, "i");
    (7562, 0, "n");
    (7563, 0, " ");
    (7564, 0, "c");
    (7565, 0, "h");
    (7566, 0, "a");
    (7567, 0, "r");
    (7568, 0, "g");
    (7569, 0, "e");
    (7570, 0, " ");
    (7571, 0, "o");
    (7572, 0, "f");
    (7573, 0, " ");
    (7574, 0, "t");
    (7575, 0, "h");
    (7576, 0, "e");
    (7577, 0, "s");
    (7578, 0, "e");
    (7579, 0, " ");
    (7580, 0, "c");
    (7581, 0, "o");
    (7582, 0, "n");
    (7583, 0, "t");
    (7584, 0, "r");
    (7585, 0, "o");
    (7586, 0, "l");
    (7587, 0, "s");
    (7588, 0, ".");
    (7589, 64, "");
    (7589, 1, "");
    (7520, 0, "\t");
    (7554, 36, "T");
    (7555, 0, "h");
    (7556, 0, "e");
    (7557, 0, "s");
    (7558, 0, "e");
    (7559, 0, " ");
    (7560, 0, "c");
    (7561, 0, "o");
    (7562, 0, "n");
    (7563, 0, "t");
    (7564, 0, "r");
    (7565, 0, "o");
    (7566, 0, "l");
    (7567, 0, "s");
    (7568, 0, " ");
    (7569, 0, "a");
    (7570, 0, "r");
    (7571, 0, "e");
    (7572, 0, " ");
    (7573, 0, "y");
    (7574, 0, "o");
    (7575, 0, "u");
    (7576, 0, "r");
    (7577, 0, "s");
    (7578, 0, ".");
    (7529, 4, "");
    (9276, 0, " -->");
    (9231, 0, "<!-- ");
    (9281, 4, "");
    (9231, 5, "");
    (9254, 21, "");
    (9253, 1, "");
    (9254, 0, " ");
    (9226, 0, "\n\t\t\t\t");
    (9231, 0, "class:magister_opaque");
    (9252, 0, " -->");
    (9231, 0, "<!-- ");
    (9257, 4, "");
    (9231, 5, "");
    (9231, 21, "");
    (9226, 5, "");
    (9254, 1, "");
    (9253, 0, " ");
    (9254, 0, "class:magister_opaque");
    (7303, 27, "");
    (7523, 7, "C");
    (7523, 0, "T");
    (7524, 0, "h");
    (7525, 0, "e");
    (7526, 0, "s");
    (7527, 0, "e");
    (7528, 0, " ");
    (7529, 1, "");
    (7529, 0, "c");
    (7547, 0, " ");
    (7548, 0, "a");
    (7549, 0, "l");
    (7550, 0, "o");
    (7551, 0, "n");
    (7552, 0, "e");
    (7548, 5, "t");
    (7549, 0, "o");
    (7550, 0, " ");
    (7551, 0, "w");
    (7552, 0, "e");
    (7553, 0, "i");
    (7553, 1, "");
    (7552, 1, "");
    (7552, 0, "i");
    (7553, 0, "e");
    (7554, 0, "l");
    (7555, 0, "d");
    (7548, 8, "a");
    (7549, 0, "l");
    (7550, 0, "o");
    (7551, 0, "n");
    (7552, 0, "e");
    (7229, 0, " -->");
    (7164, 0, "<!-- ");
    (7234, 4, "");
    (7164, 5, "");
    (7548, 5, "to wield");
    (7552, 4, "");
    (7552, 0, "ei");
    (7550, 4, "");
    (7548, 2, "alone");
    (7547, 6, "");
    (7529, 1, "");
    (7529, 0, "C");
    (7528, 1, "");
    (7523, 5, "");
    (7523, 1, "These c");
    (7303, 0, "class:magister={_magister} ");
    (7529, 0, "the ");
    (7529, 4, "");
    (7303, 27, "");
    (7303, 0, "class:magister={_magister} ");
    (7303, 27, "");
    (7523, 7, "C");
    (7523, 0, "These");
    (7528, 0, " ");
    (7529, 1, "");
    (7529, 0, "c");
    (7547, 0, " alone");
    (7548, 5, "to");
    (7550, 0, " wei");
    (7552, 2, "");
    (7552, 0, "ield");
    (7548, 8, "alone");
    (7229, 0, " -->");
    (7164, 0, "<!-- ");
    (5508, 0, " ");
    (5509, 0, "class:magister={_magister} ");
    (5535, 1, "");
    (10844, 7, "");
    (10844, 54, "");
    (10843, 1, "");
    (10052, 0, ".magister {\n\tbackground-color: var(--bg-highlight);\n}\n");
    (10052, 0, "\n");
    (5491, 0, "\n");
    (5492, 0, "\n");
    ( 5492,
      0,
      "<svelte:head>\n\
      \   {#if isModal}\n\
      \      <style>\n\
      \         body {\n\
      \            overflow: hidden;\n\
      \         }\n\
      \      </style>\n\
      \   {/if}\n\
       </svelte:head>\t" );
    (5492, 141, "");
    (5492, 1, "");
    (5503, 0, "\n");
    (5503, 0, "\n");
    ( 5504,
      0,
      "<svelte:head>\n\
      \   {#if isModal}\n\
      \      <style>\n\
      \         body {\n\
      \            overflow: hidden;\n\
      \         }\n\
      \      </style>\n\
      \   {/if}\n\
       </svelte:head>\t" );
    (5647, 0, "<main class:magister={_magister}>\n");
    (5680, 0, " -->");
    (5647, 0, "<!-- ");
    (5696, 26, "");
    (5695, 1, "");
    (5526, 7, "_");
    (5527, 0, "m");
    (5528, 0, "a");
    (5529, 0, "g");
    (5526, 4, "_magister");
    (5579, 17, "background-color: var(--bg-highlight);");
    (5567, 12, "\t\t\t\t\t");
    (5572, 0, "\t");
    (10155, 3, "p");
    (10104, 3, "p");
    (7504, 2, "c");
    (7505, 0, "l");
    (7506, 0, "a");
    (7507, 0, "s");
    (7508, 0, "s");
    (11044, 1, "");
    (11044, 0, ".");
    (10108, 0, " ");
    (10109, 0, "c");
    (10110, 0, "l");
    (10111, 0, "a");
    (10112, 0, "s");
    (10113, 0, "s");
    (10114, 0, "=");
    (10115, 0, "c");
    (10116, 0, "o");
    (10117, 0, "n");
    (10118, 0, "f");
    (10119, 0, "i");
    (10120, 0, "g");
    (10121, 0, "'");
    (10115, 0, "'");
    (10142, 26, "w");
    (10143, 0, "i");
    (10144, 0, "l");
    (10145, 0, "l");
    (10146, 0, " ");
    (10147, 0, "s");
    (10148, 0, "t");
    (10149, 0, "a");
    (10150, 0, "r");
    (10151, 0, "t");
    (10152, 0, " ");
    (10152, 1, "");
    (10146, 6, "");
    (10142, 4, "is in control of this game");
    (10142, 26, "i");
    (10143, 0, "s");
    (10144, 0, " ");
    (10145, 0, "m");
    (10146, 0, "a");
    (10147, 0, "n");
    (10148, 0, "a");
    (10149, 0, "g");
    (10150, 0, "i");
    (10151, 0, "n");
    (10152, 0, "g");
    (10153, 0, " ");
    (10154, 0, "t");
    (10155, 0, "h");
    (10156, 0, "i");
    (10157, 0, "s");
    (10158, 0, " ");
    (10159, 0, "g");
    (10160, 0, "a");
    (10161, 0, "m");
    (10162, 0, "e");
    (10124, 4, "");
    (7676, 0, "?");
    (7677, 0, " ");
    (7678, 0, "W");
    (7679, 0, "i");
    (7680, 0, "l");
    (7681, 0, "l");
    (7682, 0, " ");
    (7683, 0, "y");
    (7684, 0, "o");
    (7685, 0, "u");
    (7686, 4, "");
    (5638, 3, "\t");
    (5623, 6, "\t\t");
    (5612, 9, "\t\t\t\t");
    (5567, 6, "\t\t\t\t\t");
    (5551, 9, "\t\t\t\t");
    (5537, 6, "\t\t");
    (5518, 3, "\t");
    (5617, 1, "");
    (5606, 2, "\t");
    (5600, 4, "\t\t\t");
    (5556, 5, "\t\t\t\t");
    (5545, 4, "\t\t\t");
    (5535, 2, "\t");
    (5518, 1, "");
    (5611, 0, "\t");
    (5601, 1, "\t\t");
    (5596, 3, "\t\t\t\t");
    (5553, 4, "\t\t\t\t\t");
    (5543, 3, "\t\t\t\t");
    (5534, 1, "\t\t");
    (5518, 0, "\t");
    (5606, 2, "\t");
    (5600, 4, "\t\t\t");
    (5556, 5, "\t\t\t\t");
    (5545, 4, "\t\t\t");
    (5535, 2, "\t");
    (5602, 1, "");
    (5597, 3, "\t\t");
    (5554, 4, "\t\t\t");
    (5544, 3, "\t\t");
    (5535, 1, "");
    (5598, 0, "\t");
    (5594, 2, "\t\t\t");
    (5552, 3, "\t\t\t\t");
    (5543, 2, "\t\t\t");
    (5535, 0, "\t");
    (5602, 1, "\t\t");
    (5597, 3, "\t\t\t\t");
    (5554, 4, "\t\t\t\t\t");
    (5544, 3, "\t\t\t\t");
    (5535, 1, "\t\t");
    (5600, 4, "\t\t\t");
    (5556, 5, "\t\t\t\t");
    (5545, 4, "\t\t\t");
    (5598, 3, "\t\t");
    (5555, 4, "\t\t\t");
    (5545, 3, "\t\t");
    (5596, 2, "\t");
    (5554, 3, "\t\t");
    (5545, 2, "\t");
    (5594, 1, "");
    (5553, 2, "\t");
    (5545, 1, "");
    (301, 0, "\n");
    (302, 0, "_clock_offset: 0,");
    (302, 0, "e");
    (303, 0, "x");
    (304, 0, "p");
    (305, 0, "o");
    (306, 0, "r");
    (307, 0, "t");
    (308, 0, " ");
    (309, 0, "l");
    (310, 0, "e");
    (311, 0, "t");
    (312, 0, " ");
    (329, 1, "");
    (328, 1, "");
    (327, 1, "");
    (326, 1, "");
    (2636, 0, " ");
    (2637, 0, "+");
    (2638, 0, " ");
    (2639, 0, "o");
    (2640, 0, "f");
    (2641, 0, "f");
    (2641, 1, "");
    (2640, 1, "");
    (2639, 1, "");
    (2639, 0, "_");
    (2640, 0, "o");
    (2640, 1, "");
    (2640, 0, "c");
    (2641, 0, "l");
    (2642, 0, "o");
    (2639, 4, "_clock_offset");
    (9561, 20, "B");
    (9562, 0, "e");
    (9563, 0, "c");
    (9564, 0, "o");
    (9565, 0, "m");
    (9566, 0, "e");
    (11586, 0, " */");
    (11569, 0, "/* ");
    (11589, 3, "");
    (11569, 3, "");
    (11567, 0, " */");
    (11552, 0, "/* ");
    (11570, 3, "");
    (11552, 3, "");
    (11826, 0, " */");
    (11814, 0, "/* ");
    (11829, 3, "");
    (11814, 3, "");
    (11821, 3, "8");
    (11822, 0, "0");
    (11821, 2, "100");
    (11814, 0, "m");
    (11814, 1, "");
    (11826, 0, " */");
    (11814, 0, "/* ");
    (11848, 0, "\n\t");
    (11848, 2, "");
    (11865, 0, "\n\t");
    (11867, 0, "\n\t");
    (11866, 1, "");
    (11868, 0, "p");
    (11869, 0, "o");
    (11870, 0, "s");
    (11871, 0, "i");
    (11872, 0, "t");
    (11873, 0, "i");
    (11874, 0, "o");
    (11875, 0, "n");
    (11876, 0, ":");
    (11877, 0, " ");
    (11878, 0, "a");
    (11879, 0, "b");
    (11880, 0, "s");
    (11881, 0, "o");
    (11882, 0, "l");
    (11883, 0, "u");
    (11884, 0, "t");
    (11885, 0, "e");
    (11886, 0, ";");
    (11887, 0, "\n\t");
    (11889, 0, "l");
    (11890, 0, "e");
    (11891, 0, "f");
    (11892, 0, "t");
    (11893, 0, ":");
    (11894, 0, " ");
    (11895, 0, "0");
    (11896, 0, ";");
    (11897, 0, " ");
    (11898, 0, "r");
    (11899, 0, "i");
    (11900, 0, "g");
    (11901, 0, "t");
    (11901, 1, "");
    (11901, 0, "h");
    (11902, 0, "t");
    (11903, 0, ":");
    (11904, 0, " ");
    (11905, 0, "0");
    (11906, 0, ";");
    (11878, 8, "r");
    (11879, 0, "e");
    (11880, 0, "l");
    (11881, 0, "a");
    (11882, 0, "t");
    (11883, 0, "i");
    (11884, 0, "v");
    (11885, 0, "e");
    (11878, 8, "a");
    (11879, 0, "b");
    (11880, 0, "s");
    (11881, 0, "o");
    (11882, 0, "l");
    (11883, 0, "u");
    (11884, 0, "t");
    (11885, 0, "e");
    (11677, 0, "\n\t");
    (11679, 0, "p");
    (11680, 0, "o");
    (11681, 0, "s");
    (11682, 0, "i");
    (11683, 0, "t");
    (11684, 0, "i");
    (11685, 0, "o");
    (11686, 0, "n");
    (11687, 0, ":");
    (11688, 0, " ");
    (11689, 0, "r");
    (11690, 0, "e");
    (11691, 0, "l");
    (11692, 0, "a");
    (11693, 0, "t");
    (11694, 0, "i");
    (11695, 0, "v");
    (11696, 0, "e");
    (11697, 0, ";");
    (11887, 41, "");
    (11886, 1, "");
    (11678, 20, "");
    (11677, 1, "");
    (11829, 3, "");
    (11814, 3, "");
    (11826, 0, " */");
    (11814, 0, "/* ");
    (11832, 0, "\n\t");
    (11834, 0, "p");
    (11835, 0, "a");
    (11836, 0, "d");
    (11837, 0, "d");
    (11838, 0, "i");
    (11839, 0, "n");
    (11840, 0, "g");
    (11841, 0, ":");
    (11842, 0, " ");
    (11843, 0, "0");
    (11844, 0, " ");
    (11845, 0, "a");
    (11846, 0, "u");
    (11847, 0, "t");
    (11848, 0, "o");
    (11849, 0, ";");
    (11845, 4, "2");
    (11846, 0, "e");
    (11847, 0, "m");
    (11846, 0, "0");
    (11833, 17, "");
    (11832, 1, "");
    (11863, 1, "");
    (11863, 0, "a");
    (11864, 0, "u");
    (11865, 0, "t");
    (11866, 0, "o");
    (11863, 4, "");
    (11863, 0, "0");
    (11829, 3, "");
    (11814, 3, "");
    (8847, 0, " ");
    (8848, 0, "p");
    (8849, 0, "a");
    (8850, 0, "t");
    (8851, 0, "t");
    (8852, 0, "e");
    (8853, 0, "r");
    (8854, 0, "n");
    (8855, 0, "=");
    (8856, 0, "'");
    (8857, 0, "d");
    (8858, 0, "*");
    (8859, 0, "'");
    (8857, 1, "");
    (8857, 0, "[");
    (8858, 0, "0");
    (8859, 0, "-");
    (8860, 0, "9");
    (8861, 0, "]");
    (9041, 0, "pattern='[0-9]*'");
    (9057, 0, " ");
    (9231, 0, "pattern='[0-9]*'");
    (9247, 0, " ");
    (9612, 20, "Assume the mantle of Magister Ludi");
    (426, 0, "\n");
    (427, 0, "\n");
    (428, 0, "l");
    (429, 0, "e");
    (430, 0, "t");
    (431, 0, " ");
    (432, 0, "a");
    (433, 0, "u");
    (434, 0, "d");
    (435, 0, "i");
    (436, 0, "o");
    (437, 0, "_");
    (438, 0, "w");
    (439, 0, "o");
    (440, 0, "r");
    (441, 0, "k");
    (442, 0, "s");
    (443, 0, " ");
    (444, 0, "=");
    (445, 0, " ");
    (446, 0, "f");
    (447, 0, "a");
    (448, 0, "l");
    (449, 0, "s");
    (450, 0, "e");
    (446, 5, "false");
    (451, 0, "\n");
    (452, 0, "\"");
    (453, 0, "$");
    (453, 1, "");
    (452, 1, "");
    (452, 0, "$");
    (452, 1, "");
    (452, 0, ":");
    (453, 0, " ");
    (454, 0, "$");
    (454, 1, "");
    (453, 1, "");
    (453, 0, "$");
    (454, 0, " ");
    (455, 0, "{");
    (456, 0, "\n\t");
    (458, 0, "\n\t");
    (457, 1, "");
    (458, 1, "}");
    (453, 1, "");
    (452, 1, "");
    (452, 0, "$");
    (453, 0, ":");
    (457, 0, "\t");
    (458, 0, "l");
    (459, 0, "e");
    (460, 0, "t");
    (461, 0, " ");
    (462, 0, "a");
    (463, 0, "=");
    (464, 0, " ");
    (464, 1, "");
    (463, 1, "");
    (463, 0, " ");
    (464, 0, "=");
    (465, 0, " ");
    (466, 0, "n");
    (467, 0, "e");
    (468, 0, "w");
    (469, 0, " ");
    (470, 0, "A");
    (471, 0, "u");
    (472, 0, "d");
    (473, 0, "i");
    (474, 0, "o");
    (470, 5, "Audio");
    (475, 0, "(");
    (476, 0, ")");
    (477, 0, "\n\t");
    (479, 0, "a");
    (480, 0, ".");
    (481, 0, "p");
    (482, 0, "l");
    (483, 0, "a");
    (484, 0, "y");
    (481, 4, "play");
    (485, 0, "(");
    (486, 0, ")");
    (487, 0, ".");
    (488, 0, "t");
    (489, 0, "h");
    (490, 0, "e");
    (491, 0, "n");
    (488, 4, "then");
    (492, 0, "(");
    (493, 0, "(");
    (494, 0, ")");
    (495, 0, " ");
    (496, 0, "=");
    (497, 0, ">");
    (498, 0, " ");
    (499, 0, "{");
    (500, 0, "a");
    (501, 0, "u");
    (502, 0, "d");
    (503, 0, "i");
    (504, 0, "o");
    (505, 0, "_");
    (506, 0, "w");
    (507, 0, "o");
    (500, 8, "audio_works");
    (511, 0, " ");
    (512, 0, "=");
    (513, 0, " ");
    (514, 0, "t");
    (515, 0, "r");
    (516, 0, "u");
    (517, 0, "e");
    (518, 0, "}");
    (493, 0, "\n\t\t");
    (522, 0, ",");
    (523, 0, "\n\t\t");
    (524, 2, "");
    (494, 0, "\t\t() => {audio_works = true},\n");
    (533, 18, "");
    (533, 0, "\n\t\t\t\n\t\t");
    (537, 0, "c");
    (538, 0, "o");
    (539, 0, "n");
    (540, 0, "s");
    (541, 0, "o");
    (542, 0, "l");
    (537, 6, "console");
    (544, 0, ".");
    (544, 1, "");
    (544, 0, ".");
    (545, 0, "l");
    (546, 0, "o");
    (547, 0, "g");
    (545, 3, "log");
    (548, 0, "(");
    (549, 0, "'");
    (550, 0, "A");
    (551, 0, "u");
    (552, 0, "d");
    (553, 0, "i");
    (554, 0, "o");
    (555, 0, " ");
    (556, 0, "d");
    (557, 0, "o");
    (558, 0, "e");
    (559, 0, "s");
    (560, 0, " ");
    (561, 0, "n");
    (562, 0, "o");
    (563, 0, "t");
    (564, 0, " ");
    (565, 0, "w");
    (566, 0, "o");
    (567, 0, "r");
    (568, 0, "k");
    (569, 0, "'");
    (570, 0, ")");
    (575, 1, "");
    (575, 0, "\n\t\t");
    (576, 2, "\t)");
    (451, 0, "\n");
    (452, 0, "\n");
    (453, 0, "f");
    (454, 0, "u");
    (455, 0, "n");
    (456, 0, "c");
    (457, 0, "t");
    (458, 0, "i");
    (459, 0, "o");
    (460, 0, "n");
    (461, 0, " ");
    (462, 0, "t");
    (463, 0, "e");
    (464, 0, "s");
    (465, 0, "t");
    (466, 0, "_");
    (467, 0, "a");
    (468, 0, "u");
    (469, 0, "d");
    (470, 0, "i");
    (471, 0, "o");
    (472, 0, "(");
    (473, 0, ")");
    (474, 0, " ");
    (475, 0, "{");
    (476, 0, "\n\t");
    (478, 0, "\n\t");
    (477, 1, "");
    (478, 1, "}");
    (606, 0, "\n$: {");
    (604, 1, "");
    (600, 2, "\t");
    (562, 3, "\t\t");
    (552, 2, "\t");
    (522, 2, "\t");
    (506, 1, "");
    (485, 1, "");
    (480, 5, "");
    (594, 0, "\n}");
    (593, 0, "\t");
    (590, 1, "\t\t");
    (553, 2, "\t\t\t");
    (544, 1, "\t\t");
    (515, 1, "\t\t");
    (500, 0, "\t");
    (480, 0, "\t");
    (478, 2, "");
    (599, 0, "\n");
    (477, 1, "");
    (599, 1, "");
    (601, 8, "");
    (601, 0, "t");
    (602, 0, "e");
    (603, 0, "s");
    (604, 0, "t");
    (605, 0, "_");
    (606, 0, "a");
    (607, 0, "u");
    (601, 7, "test_audio");
    (611, 0, "(");
    (612, 0, ")");
    (614, 21, "");
    (614, 0, "\n");
    (553, 0, "\n\t\t\t");
    (557, 0, "audio_works = true");
    (571, 4, "f");
    (572, 0, "a");
    (573, 0, "l");
    (574, 0, "s");
    (575, 0, "e");
    (6405, 0, "\n\t\t");
    (6408, 0, "\n\t\t");
    (6406, 2, "");
    (6409, 0, "<");
    (6410, 0, "d");
    (6411, 0, "i");
    (6412, 0, "v");
    (6413, 0, ">");
    (6414, 0, "\n\t\t\t");
    (6418, 0, "<");
    (6419, 0, "/");
    (6420, 0, "d");
    (6421, 0, "i");
    (6422, 0, "v");
    (6415, 8, "\t\t</div>");
    (6406, 0, "\n\t\t");
    (6409, 0, "{");
    (6410, 0, "#");
    (6411, 0, "i");
    (6412, 0, "f");
    (6413, 0, " ");
    (6414, 0, "!");
    (6415, 0, "a");
    (6416, 0, "u");
    (6417, 0, "d");
    (6418, 0, "i");
    (6419, 0, "o");
    (6420, 0, "_");
    (6415, 6, "audio_works");
    (6426, 0, "}");
    (6444, 0, "\n\t\t");
    (6447, 0, "{");
    (6448, 0, "/");
    (6449, 0, "i");
    (6450, 0, "f");
    (6451, 0, "}");
    (6435, 0, "\n\t\t\t");
    (6439, 0, "A");
    (6440, 0, "u");
    (6441, 0, "d");
    (6442, 0, "i");
    (6443, 0, "o");
    (6444, 0, " ");
    (6445, 0, "d");
    (6446, 0, "o");
    (6447, 0, "e");
    (6448, 0, "s");
    (6449, 0, " ");
    (6450, 0, "n");
    (6451, 0, "o");
    (6452, 0, "t");
    (6453, 0, " ");
    (6454, 0, "w");
    (6455, 0, "o");
    (6456, 0, "r");
    (6457, 0, "k");
    (6458, 0, "\n\t\t\t");
    (6462, 0, "<");
    (6463, 0, "b");
    (6464, 0, "u");
    (6465, 0, "t");
    (6466, 0, "t");
    (6467, 0, "o");
    (6468, 0, "n");
    (6469, 0, " ");
    (6470, 0, "o");
    (6471, 0, "n");
    (6472, 0, ":");
    (6473, 0, "c");
    (6474, 0, "l");
    (6475, 0, "o");
    (6475, 1, "");
    (6475, 0, "i");
    (6476, 0, "c");
    (6477, 0, "k");
    (6478, 0, "=");
    (623, 0, "\n");
    (624, 0, "f");
    (625, 0, "u");
    (626, 0, "n");
    (627, 0, "c");
    (628, 0, "t");
    (629, 0, "i");
    (630, 0, "o");
    (631, 0, "n");
    (632, 0, " ");
    (633, 0, "f");
    (634, 0, "i");
    (635, 0, "x");
    (636, 0, "_");
    (637, 0, "a");
    (638, 0, "u");
    (639, 0, "d");
    (640, 0, "i");
    (641, 0, "o");
    (642, 0, "(");
    (643, 0, ")");
    (644, 0, "{");
    (645, 0, " ");
    (645, 1, "");
    (644, 1, "");
    (644, 0, " ");
    (645, 0, "{");
    (646, 0, "\n\t");
    (648, 0, "\n\t");
    (647, 1, "");
    (648, 1, "]");
    (648, 1, "");
    (648, 0, "}");
    (647, 0, "\t");
    (647, 1, "");
    (643, 0, "e");
    (6506, 0, "f");
    (6506, 1, "");
    (6506, 0, "{");
    (6507, 0, "f");
    (6508, 0, "i");
    (6509, 0, "x");
    (6510, 0, "_");
    (6511, 0, "a");
    (6512, 0, "u");
    (6513, 0, "d");
    (6507, 7, "fix_audio");
    (6516, 0, "}");
    (6517, 0, ">");
    (6518, 0, "F");
    (6519, 0, "i");
    (6520, 0, "x");
    (6521, 0, "<");
    (6522, 0, "/");
    (6522, 1, "/button>");
    (648, 0, "\t");
    (649, 0, "t");
    (650, 0, "e");
    (651, 0, "s");
    (652, 0, "t");
    (653, 0, "_");
    (649, 5, "test_audio");
    (659, 0, ")");
    (659, 1, "");
    (659, 0, "(");
    (660, 0, ")");
    (523, 0, "\n\t\t\t");
    (545, 0, "\n\t\t");
    (545, 0, "\n\t\t\t");
    (549, 0, "console.log('Audio does not work')");
    (568, 13, "w");
    (569, 0, "o");
    (570, 0, "r");
    (571, 0, "k");
    (572, 0, "s");
    (684, 0, "\n\t");
    (686, 0, "c");
    (687, 0, "o");
    (688, 0, "n");
    (689, 0, "s");
    (690, 0, "o");
    (691, 0, "l");
    (692, 0, "e");
    (686, 7, "console");
    (693, 0, ".");
    (694, 0, "l");
    (695, 0, "o");
    (696, 0, "g");
    (694, 3, "log");
    (697, 0, "(");
    (698, 0, "'");
    (699, 0, "x");
    (700, 0, "x");
    (701, 0, "'");
    (702, 0, ")");
    (685, 18, "");
    (684, 1, "");
    (684, 0, "\n");
    (685, 0, "\tconsole.log('xx')");
    (497, 0, "\n\t");
    (499, 0, "a");
    (499, 1, "a");
    (500, 0, ".");
    (501, 0, "s");
    (502, 0, "r");
    (503, 0, "c");
    (504, 0, " ");
    (505, 0, "=");
    (506, 0, " ");
    (507, 0, "'");
    (508, 0, "/lo-metal-tone.mp3");
    (526, 0, "'");
    (497, 0, "\n\t");
    (499, 0, "a");
    (500, 0, ".");
    (501, 0, "v");
    (502, 0, "o");
    (501, 2, "volume");
    (507, 0, " ");
    (508, 0, "=");
    (509, 0, " ");
    (510, 0, "0");
    (764, 0, "s");
    (765, 0, "e");
    (766, 0, "t");
    (767, 0, "T");
    (768, 0, "i");
    (769, 0, "m");
    (770, 0, "e");
    (771, 0, "o");
    (772, 0, "u");
    (773, 0, "t");
    (774, 0, "(");
    (786, 1, "");
    (785, 1, "");
    (785, 0, ",");
    (786, 0, " ");
    (787, 0, "0");
    (788, 0, ")");
    (787, 1, "");
    (787, 0, "1");
    (788, 0, "0");
    (789, 0, "0");
    (790, 0, "\n");
    (790, 1, "");
    (511, 0, ".");
    (512, 0, "1");
    (790, 1, "");
    (789, 1, "");
    (11722, 1, "");
    (11721, 1, "");
    (11721, 0, "f");
    (11722, 0, "g");
    (766, 0, "// ");
    (764, 0, "// ");
    (750, 0, "// ");
    (731, 0, "// ");
    (707, 0, "// ");
    (705, 0, "// ");
    (702, 0, "// ");
    (698, 0, "// ");
    (660, 0, "// ");
    (637, 0, "// ");
    (627, 0, "// ");
    (622, 0, "// ");
    (592, 0, "// ");
    (570, 0, "// ");
    (560, 0, "// ");
    (544, 0, "// ");
    (514, 0, "// ");
    (498, 0, "// ");
    (477, 0, "// ");
    (453, 0, "// ");
    (428, 0, "// ");
    (6738, 0, " -->");
    (6627, 0, "<!-- ");
    (12124, 5, "v");
    (12125, 0, "a");
    (12126, 0, "r");
    (12127, 0, "(");
    (12128, 0, "-");
    (12129, 0, "-");
    (12130, 0, "b");
    (12131, 0, "g");
    (12132, 0, "-");
    (12132, 1, "");
    (12131, 1, "");
    (12130, 1, "");
    (12130, 0, "f");
    (12131, 0, "g");
    (12128, 4, "--fg-color");
    (12138, 0, ")");
    (11033, 5, "v");
    (11034, 0, "a");
    (11035, 0, "r");
    (11036, 0, "(");
    (11037, 0, "-");
    (11038, 0, "-");
    (11039, 0, "f");
    (11040, 0, "g");
    (11037, 4, "--fg-color");
    (11047, 0, ")");
    (11292, 5, "var(--fg-color)");
    (11153, 16, "h");
    (11153, 1, "");
    (11153, 0, "w");
    (11154, 0, "h");
    (11155, 0, "i");
    (11156, 0, "t");
    (11157, 0, "e");
    (11592, 5, "v");
    (11593, 0, "a");
    (11594, 0, "r");
    (11595, 0, "(");
    (11596, 0, "-");
    (11597, 0, "-");
    (11598, 0, "f");
    (11599, 0, "g");
    (11600, 0, "-");
    (11601, 0, "c");
    (11596, 6, "--fg-color");
    (11606, 0, ")");
    (7561, 0, "\n\t\t\t");
    (7565, 0, "<");
    (7566, 0, "d");
    (7567, 0, "i");
    (7568, 0, "v");
    (7569, 0, ">");
    (7570, 0, "</div>");
    (7570, 6, "");
    (7654, 0, "\n\t\t\t\t");
    (7659, 0, "</div>");
    (7655, 4, "\t\t\t");
    (7655, 3, "\t\t\t\t");
    (7571, 4, "\t\t\t\t\t");
    (7562, 3, "\t\t\t\t");
    (7652, 3, "s");
    (7578, 3, "s");
    (7651, 0, "p");
    (7579, 0, "p");
    (7653, 0, "a");
    (7580, 0, "a");
    (7655, 0, "n");
    (7581, 0, "n");
    (11657, 0, "\n\t");
    (11659, 0, "p");
    (11660, 0, "a");
    (11661, 0, "d");
    (11662, 0, "d");
    (11663, 0, "i");
    (11664, 0, "n");
    (11665, 0, "g");
    (11666, 0, ":");
    (11667, 0, " ");
    (11668, 0, "2");
    (11669, 0, "p");
    (11670, 0, "x");
    (11671, 0, ";");
    (11668, 1, "");
    (11668, 0, "3");
    (11658, 14, "");
    (11657, 1, "");
    (11434, 1, "");
    (11434, 0, "2");
    (11435, 0, "p");
    (11436, 0, "x");
    (7590, 0, "'");
    (7591, 0, "b");
    (7592, 0, "e");
    (7593, 0, "a");
    (7594, 0, "d");
    (7595, 0, "'");
    (7595, 1, "");
    (7595, 0, " ");
    (7596, 0, "'");
    (7597, 0, " ");
    (7598, 0, " ");
    (7599, 0, "+");
    (7599, 1, "");
    (7598, 1, "");
    (7598, 0, "+");
    (7599, 0, " ");
    (11446, 1, "");
    (11445, 1, "");
    (11444, 1, "");
    (11444, 0, "0");
    (11444, 1, "");
    (11444, 0, "2px");
    (12111, 0, "\n\t");
    (12113, 0, "b");
    (12114, 0, "o");
    (12115, 0, "r");
    (12116, 0, "d");
    (12117, 0, "e");
    (12118, 0, "r");
    (12119, 0, ":");
    (12120, 0, " ");
    (12121, 0, "2");
    (12122, 0, "p");
    (12123, 0, "x");
    (12124, 0, " ");
    (12125, 0, "s");
    (12126, 0, "o");
    (12127, 0, "l");
    (12128, 0, "i");
    (12129, 0, "d");
    (12130, 0, " ");
    (12131, 0, "f");
    (12132, 0, "g");
    (12133, 0, "-");
    (12131, 3, "v");
    (12132, 0, "a");
    (12133, 0, "r");
    (12134, 0, "(");
    (12135, 0, "-");
    (12136, 0, "-");
    (12137, 0, "f");
    (12135, 3, "--fg-color");
    (12145, 0, ")");
    (12146, 0, ";");
    (12131, 15, "");
    (12131, 0, "#");
    (12132, 0, "e");
    (12133, 0, "e");
    (12134, 0, "e");
    (12134, 1, "");
    (12133, 1, "");
    (12132, 1, "");
    (12132, 0, "3");
    (12133, 0, "3");
    (12134, 0, "3");
    (12121, 14, "2px solid #686868");
    (12111, 0, " */");
    (12088, 0, "/* ");
    (12082, 1, "");
    (12082, 0, "6");
    (12082, 1, "");
    (12082, 0, "4");
    (12082, 1, "");
    (12082, 0, "6");
    (12147, 0, "\n");
    (12148, 0, "\n");
    (12149, 0, "i");
    (12150, 0, "n");
    (12151, 0, "p");
    (12152, 0, "u");
    (12153, 0, "t");
    (12154, 0, ":");
    (12154, 1, "");
    (12154, 0, "[");
    (12155, 0, "t");
    (12156, 0, "y");
    (12157, 0, "p");
    (12158, 0, "e");
    (12159, 0, "=");
    (12160, 0, "c");
    (12161, 0, "h");
    (12162, 0, "e");
    (12163, 0, "c");
    (12164, 0, "k");
    (12165, 0, "b");
    (12166, 0, "o");
    (12167, 0, "x");
    (12168, 0, "]");
    (12169, 0, " ");
    (12170, 0, "{");
    (12171, 0, "\n\t");
    (12173, 0, "\n\t");
    (12172, 1, "");
    (12173, 1, "}");
    (12172, 0, "\t");
    (12173, 0, "d");
    (12174, 0, "i");
    (12175, 0, "s");
    (12176, 0, "p");
    (12177, 0, "l");
    (12178, 0, "a");
    (12179, 0, "y");
    (12180, 0, ":");
    (12181, 0, "h");
    (12182, 0, "i");
    (12183, 0, "d");
    (12184, 0, "d");
    (12184, 1, "");
    (12183, 1, "");
    (12182, 1, "");
    (12181, 1, "");
    (12181, 0, " ");
    (12182, 0, "d");
    (12183, 0, "i");
    (12183, 1, "");
    (12182, 1, "");
    (12182, 0, "h");
    (12183, 0, "i");
    (12184, 0, "d");
    (12184, 1, "");
    (12183, 1, "");
    (12182, 1, "");
    (12182, 0, "n");
    (12183, 0, "o");
    (12184, 0, "n");
    (12185, 0, "e");
    (12186, 0, ";");
    (12173, 14, "");
    (12173, 0, "h");
    (12174, 0, "e");
    (12175, 0, "i");
    (12176, 0, "g");
    (12177, 0, "h");
    (12178, 0, "t");
    (12179, 0, ":");
    (12180, 0, " ");
    (12181, 0, "2");
    (12182, 0, "0");
    (12183, 0, "p");
    (12184, 0, "x");
    (12185, 0, ";");
    (12181, 2, "1");
    (12182, 0, ".");
    (12183, 0, "5");
    (12184, 0, "e");
    (12185, 0, "m");
    (12186, 2, "");
    (12183, 1, "");
    (12183, 0, "2");
    (12183, 1, "");
    (12182, 1, "");
    (7590, 10, "");
    (7529, 9, "p");
    (7530, 0, "r");
    (7531, 0, "o");
    (7532, 0, "g");
    (7533, 0, "r");
    (7534, 0, "e");
    (7535, 0, "s");
    (7536, 0, "s");
    (7528, 9, "");
    (428, 3, "");
    (6740, 4, "");
    (6624, 5, "");
    (823, 3, "");
    (818, 3, "");
    (801, 3, "");
    (779, 3, "");
    (752, 3, "");
    (747, 3, "");
    (741, 3, "");
    (734, 3, "");
    (693, 3, "");
    (667, 3, "");
    (654, 3, "");
    (646, 3, "");
    (613, 3, "");
    (588, 3, "");
    (575, 3, "");
    (556, 3, "");
    (523, 3, "");
    (504, 3, "");
    (480, 3, "");
    (453, 3, "");
    (766, 0, "// ");
    (764, 0, "// ");
    (750, 0, "// ");
    (731, 0, "// ");
    (707, 0, "// ");
    (705, 0, "// ");
    (702, 0, "// ");
    (698, 0, "// ");
    (660, 0, "// ");
    (637, 0, "// ");
    (627, 0, "// ");
    (622, 0, "// ");
    (592, 0, "// ");
    (570, 0, "// ");
    (560, 0, "// ");
    (544, 0, "// ");
    (514, 0, "// ");
    (498, 0, "// ");
    (477, 0, "// ");
    (453, 0, "// ");
    (446, 5, "t");
    (447, 0, "r");
    (448, 0, "u");
    (449, 0, "e");
    (452, 3, "");
    (452, 0, "// ");
    (751, 3, "");
    (814, 3, "");
    (11854, 0, ");");
    (11849, 5, "");
    (11844, 3, "");
    (11843, 0, "(--fg-co");
    (11840, 3, "");
    (11828, 8, "");
    (11827, 0, "color");
    (11823, 4, "");
    (11820, 0, "\n\t");
    (11819, 1, "");
    (11810, 0, "b");
    (11809, 1, "");
    (6614, 115, "");
    (832, 13, "");
    (807, 23, "");
    (802, 4, "");
    (783, 18, "");
    (726, 56, "");
    (625, 99, "");
    (615, 8, "");
    (608, 6, "");
    (602, 5, "");
    (562, 38, "");
    (561, 0, "x");
    (515, 46, "");
    (506, 8, "");
    (483, 20, "");
    (428, 54, "");
    ( 428,
      5789,
      "let audio_works = true\n\n\
       // function test_audio() {\n\
       // \tlet a = new Audio()\n\
       // \ta.volume = 0.1\n\
       // \ta.src = '/lo-metal-tone.mp3'\n\
       // \ta.play().then(\n\
       // \t\t() => {\n\
       // \t\t\taudio_works = true\n\
       // \t\t\tconsole.log('Audio works')\n\
       // \t\t},\n\
       // \t\t() => {\n\
       // \t\t\taudio_works = false\n\
       // \t\t\tconsole.log('Audio does not work')\n\
       // \t\t}\n\
       // \t)\n\
       // }\n\
       function fix_audio(e) {\n\
       // \tconsole.log('xx')\n\
       // \ttest_audio()\n\
       }\n\
       // setTimeout(test_audio, 0)\n\n\n\
       const ARCHETOPICS = [\n\
      \  'Truth', 'Human', 'Energy', 'Beauty', 'Beginning', 'End', 'Birth', \
       'Death',\n\
      \  'Ego', 'Attention', 'Art', 'Empathy', 'Eutopia', 'Future', 'Game', \
       'Gift',\n\
      \  'History', 'Cosmos', 'Time', 'Life', 'Addiction', 'Paradox', \
       'Shadow', 'Society'\n\
       ]\n\n\
       // Could make configurable. Eh.\n\
       const MEDITATION_SECONDS = 60\n\n\
       let game_stages = []\n\
       $: {\n\
       \tgame_stages = [{\n\
       \t\tlabel: `${meditate ? 'Meditation' : 'Game'} is about to start`,\n\
       \t\tduration: 3,\n\
       \t\tno_sound: true\n\
       \t}]\n\
       \tif (meditate) game_stages.push({\n\
       \t\tlabel: 'Meditate',\n\
       \t\ttype: 'meditate',\n\
       \t\tduration: MEDITATION_SECONDS,\n\
       \t})\n\
       \tfor (let r = 0; r < rounds; r++) {\n\
       \t\tfor (let p = 0; p < players; p++) {\n\
       \t\t\tgame_stages.push({\n\
       \t\t\t\tlabel: `Round ${r+1} player ${p+1}`,\n\
       \t\t\t\tduration: seconds_per_bead,\n\
       \t\t\t\ttype: 'bead', r, p\n\
       \t\t\t})\n\
       \t\t}\n\
       \t}\n\
       }\n\n\n\
       const update_state = async patch => {\n\
       \tawait fetch(`${room}/configure`, {\n\
       \t\tmethod: 'POST',\n\
       \t\tmode: 'same-origin',\n\
       \t\theaders: {\n\
       \t\t\t'content-type': 'application/json',\n\
       \t\t},\n\
       \t\tbody: JSON.stringify(patch)\n\
       \t})\n\
       }\n\n\
       const upd = (k, v) => () => update_state({[k]: v})\n\n\
       const config = k => e => {\n\
       \t// console.log('k', k, e.data, e.value, e.target.value, e.target.type)\n\
       \tconst raw_value = e.target.value\n\
       \tconst value = e.target.type === 'number' ? raw_value|0\n\
       \t\t: e.target.type === 'checkbox' ? e.target.checked\n\
       \t\t: raw_value\n\
       \tupdate_state({[k]: value})\n\
       }\n\n\
       const roundish = x => Math.round(x * 10) / 10\n\n\n\
       const waiting_stage = { label: 'Waiting for game to start', duration: \
       Infinity }\n\
       const complete_stage = { label: 'Game complete', type: 'complete' }\n\
       const get_current_stage = (offset_ms) => {\n\
       \tif (state === 'waiting') return {stage: waiting_stage, offset_ms: 0}\n\n\
       \tlet offset_sec = Math.round(offset_ms / 1000)\n\
       \tfor (let s = 0; s < game_stages.length; s++) {\n\
       \t\tlet stage = game_stages[s]\n\
       \t\tif (stage.duration > offset_sec) {\n\
       \t\t\treturn {stage, offset_sec}\n\
       \t\t}\n\
       \t\toffset_sec -= stage.duration\n\
       \t}\n\
       \treturn {\n\
       \t\tstage: complete_stage, offset_sec\n\
       \t}\n\
       }\n\n\
       let current_stage = null, offset_sec\n\
       $: console.log('current stage', current_stage)\n\n\n\
       const tick = (play_audio) => {\n\
       \tconsole.log('tick')\n\
       \t// console.log('state', state, 'completed', state && state.complete)\n\n\
       \tconst time = state === 'playing' ? Date.now() + _clock_offset - \
       start_time\n\
       \t\t: state === 'paused' ? paused_progress\n\
       \t\t: 0\n\
       \tconst {stage: new_stage, offset_sec: new_offs} = \
       get_current_stage(time)\n\
       \t// state_label = state.label\n\
       \t\n\
       \toffset_sec = new_offs\n\
       \tif (new_stage !== current_stage) {\n\
       \t\tconsole.log('state changed', new_stage.label, new_stage.type === \
       'complete')\n\
       \t\tcurrent_stage = new_stage\n\
       \t\t// completed = new_game_state.complete\n\
       \t\t// if (!state.complete) round_audio.play()\n\n\
       \t\tif (play_audio && !new_stage.no_sound) {\n\
       \t\t\tif (current_stage.type === 'complete') complete_audio.play()\n\
       \t\t\telse round_audio.play()\n\
       \t\t}\n\
       \t}\n\
       }\n\n\
       let timer\n\
       $: {\n\
       \t// Sadly we can't use internal_state here because it generates a \
       cyclic dependancy.\n\
       \tlet completed = current_stage ? current_stage.type === 'complete' : \
       false\n\
       \t// console.log('xx', state, timer, completed, current_stage)\n\n\
       \t// if (state !== 'loading') tick(false)\n\n\
       \tif (state === 'playing' && timer == null && !completed) {\n\
       \t\t// setTimeout needed to get around some weird race condition.\n\
       \t\t// There's probably better ways to structure this :/\n\
       \t\tsetTimeout(() => tick(false))\n\
       \t\ttimer = setInterval(() => {\n\
       \t\t\ttick(true)\n\
       \t\t}, 1000)\n\
       \t} else if ((completed || state !== 'playing') && timer != null) {\n\
       \t\tconsole.log('cancelled interval timer')\n\
       \t\tclearInterval(timer)\n\
       \t\ttimer = null\n\
       \t} else if (state === 'waiting' || state === 'paused') {\n\
       \t\tsetTimeout(() => tick(false))\n\
       \t}\n\
       }\n\n\
       let game_completed\n\
       $: {\n\
       \t// console.log('updating game_completed', current_stage)\n\
       \tgame_completed = (state !== 'playing' || current_stage == null) ? false\n\
       \t: (current_stage.type === 'complete')\n\
       }\n\n\
       let internal_state\n\
       $: internal_state = game_completed ? 'completed' : state\n\n\
       let bar_width = 0\n\
       $: bar_width = current_stage == null ? 0\n\
       \t: state === 'waiting' ? 0\n\
       \t: current_stage.type === 'complete' ? 100\n\
       \t: 100 * offset_sec / current_stage.duration\n\n\
       let stage_label\n\
       $: stage_label = internal_state === 'waiting' ? 'Waiting for game to \
       start'\n\
       \t: current_stage == null ? 'unknown' : current_stage.label\n\n\
       const order = ['meditate', 'bead', 'complete']\n\
       const class_for = x => x < 0 ? 'done'\n\
       \t: x > 0 ? 'waiting'\n\
       \t: 'active'\n\n\
       const progress_class = (stage, type, r, p) => {\n\
       \tif (stage == null) return ''\n\n\
       \tconst current_o = order.indexOf(stage.type)\n\
       \tconst element_o = order.indexOf(type)\n\n\
       \t// const o_diff = element_o - current_o\n\
       \treturn type === 'bead' && stage.type === 'bead'\n\
       \t\t? (r === stage.r ? class_for(p - stage.p) : class_for(r - stage.r))\n\
       \t\t: class_for(element_o - current_o)\n\
       }\n\n\
       // This will get more complex in time. For now, pause the game to fiddle.\n\
       $: settings_disabled = state === 'playing'\n\n\
       let config_open = false\n\n\
       $: if (_magister === true) config_open = true\n\n\
       // The first user has the config open by default.\n\
       $: if (_active_sessions === 1) config_open = true\n\n\
       // The magister box is fully visible once there's a critical mass of \
       players in the room\n\
       $: magister_opaque = _magister === true || _active_sessions >= 6\n\n\n\
       </script>\n\n\
       <svelte:head>\n\
       \t{#if _magister}\n\
       \t\t<style>\n\
       body {\n\
       \tbackground-color: var(--bg-highlight);\n\
       }\n\
       \t\t</style>\n\
       \t{/if}\n\
       </svelte:head>\t\n\n\
       <!-- <main class:magister={_magister}> -->\n\
       <main>\n\
       \t<audio bind:this={round_audio} src=\"/lo-metal-tone.mp3\" \
       preload=\"auto\"><track kind=\"captions\"></audio>\n\
       \t<audio bind:this={complete_audio} src=\"/hi-metal-tone.mp3\" \
       preload=\"auto\"><track kind=\"captions\"></audio>\n\n\
       \t{#if internal_state === 'loading'}\n\
       \t\t<h1>Loading game state</h1>\n\
       \t{:else}\n\
       \t\t<!-- <h1>Glass Bead Game Timer</h1> -->\n\
       \t\t<!-- <h1>{topic}</h1> -->\n\
       \t\t<h1>Topic: <em>{topic}</em></h1>\n\
       \t\t<!-- <h4>Topic: <em>{topic}</em></h4> -->\n\
       \t\t<h4>Room: <em>{room}</em> <a href=\"../..\">(leave)</a></h4>\n\n\
       \t\t{#if !audio_works}\n\
       \t\t<div>\n\
       \t\t\tAudio does not work\n\
       \t\t\t<button on:click={fix_audio}>Fix</button>\n\
       \t\t</div>\n\
       \t\t{/if}\n" );
    (746, 3, "");
    (740, 3, "");
    (733, 3, "");
    (692, 3, "");
    (666, 3, "");
    (653, 3, "");
    (645, 3, "");
    (612, 3, "");
    (587, 3, "");
    (574, 3, "");
    (555, 3, "");
    (522, 3, "");
    (503, 3, "");
    (479, 3, "");
    (452, 3, "");
    (771, 3, "");
    (729, 0, "\n\t");
    (754, 3, "");
    (730, 1, "");
    (514, 0, "// ");
    (513, 0, "\t// a.src = '/lo-metal-tone.mp3'\n");
    (547, 3, "");
    (556, 18, "");
    (556, 0, "/");
    (557, 0, "s");
    (558, 0, "i");
    (559, 0, "l");
    (560, 0, "e");
    (561, 0, "n");
    (562, 0, "c");
    (563, 0, "e");
    (564, 0, ".");
    (565, 0, "m");
    (566, 0, "l");
    (566, 1, "");
    (566, 0, "p");
    (567, 0, "3");
    (513, 33, "");
    ( 428,
      6245,
      "\t// export let state\n\n\
       const ARCHETOPICS = [\n\
      \  'Truth', 'Human', 'Energy', 'Beauty', 'Beginning', 'End', 'Birth', \
       'Death',\n\
      \  'Ego', 'Attention', 'Art', 'Empathy', 'Eutopia', 'Future', 'Game', \
       'Gift',\n\
      \  'History', 'Cosmos', 'Time', 'Life', 'Addiction', 'Paradox', \
       'Shadow', 'Society'\n\
       ]\n\n\
       // Could make configurable. Eh.\n\
       const MEDITATION_SECONDS = 60\n\n\
       let game_stages = []\n\
       $: {\n\
       \tgame_stages = [{\n\
       \t\tlabel: `${meditate ? 'Meditation' : 'Game'} is about to start`,\n\
       \t\tduration: 3,\n\
       \t\tno_sound: true\n\
       \t}]\n\
       \tif (meditate) game_stages.push({\n\
       \t\tlabel: 'Meditate',\n\
       \t\ttype: 'meditate',\n\
       \t\tduration: MEDITATION_SECONDS,\n\
       \t})\n\
       \tfor (let r = 0; r < rounds; r++) {\n\
       \t\tfor (let p = 0; p < players; p++) {\n\
       \t\t\tgame_stages.push({\n\
       \t\t\t\tlabel: `Round ${r+1} player ${p+1}`,\n\
       \t\t\t\tduration: seconds_per_bead,\n\
       \t\t\t\ttype: 'bead', r, p\n\
       \t\t\t})\n\
       \t\t}\n\
       \t}\n\
       }\n\n\n\
       const update_state = async patch => {\n\
       \tawait fetch(`${room}/configure`, {\n\
       \t\tmethod: 'POST',\n\
       \t\tmode: 'same-origin',\n\
       \t\theaders: {\n\
       \t\t\t'content-type': 'application/json',\n\
       \t\t},\n\
       \t\tbody: JSON.stringify(patch)\n\
       \t})\n\
       }\n\n\
       const upd = (k, v) => () => update_state({[k]: v})\n\n\
       const config = k => e => {\n\
       \t// console.log('k', k, e.data, e.value, e.target.value, e.target.type)\n\
       \tconst raw_value = e.target.value\n\
       \tconst value = e.target.type === 'number' ? raw_value|0\n\
       \t\t: e.target.type === 'checkbox' ? e.target.checked\n\
       \t\t: raw_value\n\
       \tupdate_state({[k]: value})\n\
       }\n\n\
       const roundish = x => Math.round(x * 10) / 10\n\n\n\
       const waiting_stage = { label: 'Waiting for game to start', duration: \
       Infinity }\n\
       const complete_stage = { label: 'Game complete', type: 'complete' }\n\
       const get_current_stage = (offset_ms) => {\n\
       \tif (state === 'waiting') return {stage: waiting_stage, offset_ms: 0}\n\n\
       \tlet offset_sec = Math.round(offset_ms / 1000)\n\
       \tfor (let s = 0; s < game_stages.length; s++) {\n\
       \t\tlet stage = game_stages[s]\n\
       \t\tif (stage.duration > offset_sec) {\n\
       \t\t\treturn {stage, offset_sec}\n\
       \t\t}\n\
       \t\toffset_sec -= stage.duration\n\
       \t}\n\
       \treturn {\n\
       \t\tstage: complete_stage, offset_sec\n\
       \t}\n\
       }\n\n\
       let current_stage = null, offset_sec\n\
       $: console.log('current stage', current_stage)\n\n\n\
       const tick = (play_audio) => {\n\
       \tconsole.log('tick')\n\
       \t// console.log('state', state, 'completed', state && state.complete)\n\n\
       \tconst time = state === 'playing' ? Date.now() + _clock_offset - \
       start_time\n\
       \t\t: state === 'paused' ? paused_progress\n\
       \t\t: 0\n\
       \tconst {stage: new_stage, offset_sec: new_offs} = \
       get_current_stage(time)\n\
       \t// state_label = state.label\n\
       \t\n\
       \toffset_sec = new_offs\n\
       \tif (new_stage !== current_stage) {\n\
       \t\tconsole.log('state changed', new_stage.label, new_stage.type === \
       'complete')\n\
       \t\tcurrent_stage = new_stage\n\
       \t\t// completed = new_game_state.complete\n\
       \t\t// if (!state.complete) round_audio.play()\n\n\
       \t\tif (play_audio && !new_stage.no_sound) {\n\
       \t\t\tif (current_stage.type === 'complete') complete_audio.play()\n\
       \t\t\telse round_audio.play()\n\
       \t\t}\n\
       \t}\n\
       }\n\n\
       let timer\n\
       $: {\n\
       \t// Sadly we can't use internal_state here because it generates a \
       cyclic dependancy.\n\
       \tlet completed = current_stage ? current_stage.type === 'complete' : \
       false\n\
       \t// console.log('xx', state, timer, completed, current_stage)\n\n\
       \t// if (state !== 'loading') tick(false)\n\n\
       \tif (state === 'playing' && timer == null && !completed) {\n\
       \t\t// setTimeout needed to get around some weird race condition.\n\
       \t\t// There's probably better ways to structure this :/\n\
       \t\tsetTimeout(() => tick(false))\n\
       \t\ttimer = setInterval(() => {\n\
       \t\t\ttick(true)\n\
       \t\t}, 1000)\n\
       \t} else if ((completed || state !== 'playing') && timer != null) {\n\
       \t\tconsole.log('cancelled interval timer')\n\
       \t\tclearInterval(timer)\n\
       \t\ttimer = null\n\
       \t} else if (state === 'waiting' || state === 'paused') {\n\
       \t\tsetTimeout(() => tick(false))\n\
       \t}\n\
       }\n\n\
       let game_completed\n\
       $: {\n\
       \t// console.log('updating game_completed', current_stage)\n\
       \tgame_completed = (state !== 'playing' || current_stage == null) ? false\n\
       \t: (current_stage.type === 'complete')\n\
       }\n\n\
       let internal_state\n\
       $: internal_state = game_completed ? 'completed' : state\n\n\
       let bar_width = 0\n\
       $: bar_width = current_stage == null ? 0\n\
       \t: state === 'waiting' ? 0\n\
       \t: current_stage.type === 'complete' ? 100\n\
       \t: 100 * offset_sec / current_stage.duration\n\n\
       let stage_label\n\
       $: stage_label = internal_state === 'waiting' ? 'Waiting for game to \
       start'\n\
       \t: current_stage == null ? 'unknown' : current_stage.label\n\n\
       const order = ['meditate', 'bead', 'complete']\n\
       const class_for = x => x < 0 ? 'done'\n\
       \t: x > 0 ? 'waiting'\n\
       \t: 'active'\n\n\
       const progress_class = (stage, type, r, p) => {\n\
       \tif (stage == null) return ''\n\n\
       \tconst current_o = order.indexOf(stage.type)\n\
       \tconst element_o = order.indexOf(type)\n\n\
       \t// const o_diff = element_o - current_o\n\
       \treturn type === 'bead' && stage.type === 'bead'\n\
       \t\t? (r === stage.r ? class_for(p - stage.p) : class_for(r - stage.r))\n\
       \t\t: class_for(element_o - current_o)\n\
       }\n\n\
       // This will get more complex in time. For now, pause the game to fiddle.\n\
       $: settings_disabled = state === 'playing'\n\n\
       let config_open = false\n\n\
       $: if (_magister === true) config_open = true\n\n\
       // The first user has the config open by default.\n\
       $: if (_active_sessions === 1) config_open = true\n\n\
       // The magister box is fully visible once there's a critical mass of \
       players in the room\n\
       $: magister_opaque = _magister === true || _active_sessions >= 6\n\n\n\
       </script>\n\n\
       <svelte:head>\n\
       \t{#if _magister}\n\
       \t\t<style>\n\
       body {\n\
       \tbackground-color: var(--bg-highlight);\n\
       }\n\
       \t\t</style>\n\
       \t{/if}\n\
       </svelte:head>\t\n\n\
       <!-- <main class:magister={_magister}> -->\n\
       <main>\n\
       \t<audio bind:this={round_audio} src=\"/lo-metal-tone.mp3\" \
       preload=\"auto\"><track kind=\"captions\"></audio>\n\
       \t<audio bind:this={complete_audio} src=\"/hi-metal-tone.mp3\" \
       preload=\"auto\"><track kind=\"captions\"></audio>\n\n\
       \t{#if internal_state === 'loading'}\n\
       \t\t<h1>Loading game state</h1>\n\
       \t{:else}\n\
       \t\t<!-- <h1>Glass Bead Game Timer</h1> -->\n\
       \t\t<!-- <h1>{topic}</h1> -->\n\
       \t\t<h1>Topic: <em>{topic}</em></h1>\n\
       \t\t<!-- <h4>Topic: <em>{topic}</em></h4> -->\n\
       \t\t<h4>Room: <em>{room}</em> <a href=\"../..\">(leave)</a></h4>\n" );
    (8, 0, "\n\t");
    (10, 0, "i");
    (11, 0, "m");
    (12, 0, "p");
    (13, 0, "o");
    (14, 0, "r");
    (15, 0, "t");
    (16, 0, " ");
    (17, 0, "*");
    (18, 0, " ");
    (19, 0, "a");
    (20, 0, "s");
    (21, 0, " ");
    (22, 0, "t");
    (23, 0, "o");
    (24, 0, "p");
    (25, 0, "i");
    (26, 0, "c");
    (27, 0, "s");
    (28, 0, " ");
    (29, 0, "f");
    (30, 0, "r");
    (31, 0, "o");
    (32, 0, "m");
    (33, 0, " ");
    (34, 0, "'");
    (35, 0, ".");
    (36, 0, "/");
    (37, 0, "t");
    (38, 0, "o");
    (39, 0, "p");
    (40, 0, "i");
    (41, 0, "c");
    (42, 0, "s");
    (43, 0, ".");
    (44, 0, "j");
    (45, 0, "s");
    (46, 0, "o");
    (47, 0, "n");
    (48, 0, "'");
    (9, 1, "");
    (431, 0, "\n");
    (432, 0, "c");
    (433, 0, "o");
    (434, 0, "n");
    (435, 0, "s");
    (436, 0, "o");
    (437, 0, "l");
    (438, 0, "e");
    (439, 0, ".");
    (440, 0, "l");
    (441, 0, "o");
    (442, 0, "g");
    (440, 3, "log");
    (443, 0, "(");
    (444, 0, "t");
    (445, 0, "o");
    (446, 0, "p");
    (447, 0, "i");
    (448, 0, "c");
    (449, 0, "s");
    (450, 0, ")");
    (6171, 0, "\n\t\t");
    (6174, 0, "\n\t\t");
    (6172, 2, "");
    (6175, 0, "<");
    (6176, 0, "i");
    (6177, 0, "m");
    (6178, 0, "g");
    (6179, 0, ">");
    (6180, 0, "<");
    (6181, 0, "/");
    (6182, 0, "i");
    (6183, 0, "m");
    (6184, 0, "g");
    (6185, 0, ">");
    (6180, 6, "");
    (6179, 0, " ");
    (6180, 0, "i");
    (6181, 0, "d");
    (6182, 0, "=");
    (6183, 0, " ");
    (6184, 0, "/");
    (6183, 0, "'");
    (6184, 0, "a");
    (6185, 0, "s");
    (6186, 0, "d");
    (6187, 0, "f");
    (6184, 4, "t");
    (6185, 0, "o");
    (6186, 0, "p");
    (6187, 0, "i");
    (6188, 0, "c");
    (6189, 0, "'");
    (6193, 0, "\n\t\t");
    (6194, 2, "");
    (6191, 1, "");
    (6190, 1, "");
    (772, 0, "\n");
    (772, 0, "\n");
    (773, 0, "$");
    (774, 0, ":");
    (775, 0, " ");
    (776, 0, "{");
    (777, 0, "\n\t");
    (779, 0, "\n\t");
    (778, 1, "");
    (779, 1, "}");
    (778, 0, "\t");
    (6190, 10, "bind:this={round_audio}");
    (778, 1, "");
    (6200, 11, "t");
    (6201, 0, "o");
    (6202, 0, "p");
    (6203, 0, "i");
    (6204, 0, "c");
    (6205, 0, "_");
    (6206, 0, "i");
    (6207, 0, "m");
    (6208, 0, "g");
    (486, 0, "\n");
    (487, 0, "l");
    (488, 0, "e");
    (489, 0, "t");
    (490, 0, " ");
    (491, 0, "t");
    (492, 0, "o");
    (493, 0, "p");
    (494, 0, "i");
    (495, 0, "c");
    (496, 0, "_");
    (497, 0, "i");
    (498, 0, "m");
    (499, 0, "g");
    (792, 0, "\t");
    (793, 0, "t");
    (794, 0, "o");
    (795, 0, "p");
    (796, 0, "i");
    (797, 0, "c");
    (798, 0, "_");
    (799, 0, "i");
    (800, 0, "m");
    (801, 0, "g");
    (6209, 3, "d");
    (6210, 0, "i");
    (6211, 0, "v");
    (6235, 0, "<");
    (6236, 0, "/");
    (6237, 0, "d");
    (6238, 0, "i");
    (6239, 0, "v");
    (6240, 0, ">");
    (802, 0, "/");
    (802, 1, "");
    (802, 0, ".");
    (803, 0, "i");
    (804, 0, "n");
    (805, 0, "n");
    (806, 0, "e");
    (807, 0, "r");
    (808, 0, "H");
    (809, 0, "T");
    (810, 0, "M");
    (811, 0, "L");
    (812, 0, " ");
    (813, 0, "=");
    (814, 0, " ");
    (815, 0, "t");
    (816, 0, "o");
    (817, 0, "p");
    (818, 0, "i");
    (819, 0, "c");
    (820, 0, "s");
    (821, 0, "[");
    (822, 0, "t");
    (823, 0, "o");
    (824, 0, "p");
    (825, 0, "i");
    (826, 0, "c");
    (822, 5, "topic");
    (827, 0, ".");
    (828, 0, "t");
    (829, 0, "o");
    (830, 0, "L");
    (831, 0, "o");
    (831, 1, "");
    (830, 1, "");
    (828, 2, "s.toLocaleLowerCase");
    (829, 1, "");
    (828, 1, "");
    (845, 0, "(");
    (846, 0, ")");
    (847, 0, ")");
    (847, 1, "");
    (847, 0, "]");
    (26, 1, "");
    (26, 0, "S");
    (27, 0, "V");
    (28, 0, "G");
    (29, 0, "s");
    (29, 1, "");
    (28, 1, "");
    (27, 1, "");
    (26, 1, "");
    (26, 0, "I");
    (27, 0, "c");
    (28, 0, "o");
    (29, 0, "n");
    (30, 0, "s");
    (819, 6, "topicIcons");
    (436, 19, "");
    (435, 1, "");
    (777, 0, "i");
    (778, 0, "f");
    (779, 0, " ");
    (780, 0, "(");
    (781, 0, "t");
    (782, 0, "o");
    (783, 0, "p");
    (784, 0, "i");
    (785, 0, "c");
    (786, 0, "_");
    (787, 0, "i");
    (788, 0, "m");
    (789, 0, "g");
    (790, 0, ")");
    (791, 0, " ");
    (6261, 0, " ");
    (6262, 0, "i");
    (6263, 0, "d");
    (6264, 0, "=");
    (6265, 0, "t");
    (6266, 0, "i");
    (6267, 0, "p");
    (6267, 1, "");
    (6266, 1, "");
    (6266, 0, "o");
    (6267, 0, "p");
    (6268, 0, "i");
    (6269, 0, "c");
    (6270, 0, "i");
    (6271, 0, "m");
    (6272, 0, "g");
    (6273, 0, "'");
    (6265, 0, "'");
    (10504, 0, "\n");
    (10505, 0, "\n");
    (10506, 0, "#");
    (10507, 0, "t");
    (10508, 0, "o");
    (10509, 0, "p");
    (10510, 0, "i");
    (10511, 0, "c");
    (10512, 0, "i");
    (10513, 0, "m");
    (10514, 0, "g");
    (10515, 0, " ");
    (10516, 0, "{");
    (10517, 0, "\n\t");
    (10518, 1, "}");
    (10517, 0, "\n\t");
    (10519, 0, "w");
    (10520, 0, "i");
    (10521, 0, "d");
    (10522, 0, "t");
    (10523, 0, "h");
    (10519, 5, "m");
    (10520, 0, "a");
    (10521, 0, "x");
    (10522, 0, "-");
    (10523, 0, "w");
    (10524, 0, "i");
    (10525, 0, "d");
    (10526, 0, "t");
    (10527, 0, "h");
    (10528, 0, ":");
    (10529, 0, " ");
    (10530, 0, "2");
    (10531, 0, "0");
    (10532, 0, "0");
    (10533, 0, "p");
    (10534, 0, "x");
    (10535, 0, ";");
    (7658, 0, "\n\t\t");
    (7659, 2, "");
    (7658, 0, "\n\t\t");
    (7661, 0, "<");
    (7662, 0, "d");
    (7663, 0, "e");
    (7664, 0, "t");
    (7665, 0, "a");
    (7666, 0, "i");
    (7667, 0, "l");
    (7668, 0, "s");
    (7662, 7, "details");
    (7669, 0, ">");
    (7670, 0, "</details>");
    (7670, 0, "\n\t\t\t\n\t\t");
    (7674, 0, "<");
    (7675, 0, "s");
    (7676, 0, "u");
    (7677, 0, "m");
    (7678, 0, "m");
    (7679, 0, "a");
    (7680, 0, "r");
    (7681, 0, "y");
    (7682, 0, ">");
    (7683, 0, "U");
    (7684, 0, "I");
    (7684, 1, "");
    (7683, 1, "");
    (7683, 0, "O");
    (7684, 0, "t");
    (7685, 0, "h");
    (7686, 0, "e");
    (7687, 0, "r");
    (7688, 0, " ");
    (7689, 0, "s");
    (7690, 0, "t");
    (7691, 0, "u");
    (7692, 0, "f");
    (7693, 0, "f");
    (7694, 0, "<");
    (7695, 0, "/");
    (7696, 0, "s");
    (7697, 0, "u");
    (7695, 3, "/summary>");
    (7704, 0, ">");
    (7704, 1, "");
    (7704, 0, "\n\t\t\t");
    (7705, 3, "");
    (7159, 422, "");
    ( 7283,
      0,
      "\n\
       \t\t<div id='rounds'>\n\
       \t\t\t<h2>Game</h2>\n\
       \t\t\t{#if meditate}\n\
       \t\t\t\t<div>\n\
       \t\t\t\t\t<span class={progress_class(current_stage, \
       'meditate')}>Meditation (1 min)</span>\n\
       \t\t\t\t</div>\n\
       \t\t\t{/if}\n\
       \t\t\t{#each Array(Math.max(rounds, 0)) as _, r}\n\
       \t\t\t\t<div>Round {r+1}:\n\
       \t\t\t\t\t{#each Array(Math.max(players, 0)) as _, p}\n\
       \t\t\t\t\t\t<span class={'bead ' + progress_class(current_stage, \
       'bead', r, p)}>{p+1} </span>\n\
       \t\t\t\t\t{/each}\n\
       \t\t\t\t</div>\n\
       \t\t\t{/each}\n\
       \t\t</div>\n" );
    (7705, 0, "\t");
    (7696, 2, "\t\t\t");
    (7685, 3, "\t\t\t\t");
    (7674, 4, "\t\t\t\t\t");
    (7661, 5, "\t\t\t\t\t\t");
    (7573, 6, "\t\t\t\t\t\t\t");
    (7524, 5, "\t\t\t\t\t\t");
    (7502, 4, "\t\t\t\t\t");
    (7456, 3, "\t\t\t\t");
    (7447, 3, "\t\t\t\t");
    (7436, 4, "\t\t\t\t\t");
    (7349, 5, "\t\t\t\t\t\t");
    (7339, 4, "\t\t\t\t\t");
    (7321, 3, "\t\t\t\t");
    (7304, 3, "\t\t\t\t");
    (7284, 2, "\t\t\t");
    (6459, 418, "");
    ( 6865,
      0,
      "\t\t<div>\n\
       \t\t\t{state === 'waiting' ? 'Waiting for the game to start'\n\
       \t\t\t: state === 'paused' ? 'GAME PAUSED'\n\
       \t\t\t: state === 'playing' ? 'Game in progress'\n\
       \t\t\t: ''}\n\
       \t\t</div>\n\
       \t\t{#if connection !== 'connected'}\n\
       \t\t\t<div>DISCONNECTED FROM GAME SERVER</div>\n\
       \t\t{:else}\n\
       \t\t\t{#if _active_sessions == 1}\n\
       \t\t\t\t<div>You are alone in the room</div>\n\
       \t\t\t{:else}\n\
       \t\t\t\t<div>{_active_sessions} players are in this room</div>\n\
       \t\t\t{/if}\n\
       \t\t{/if}\n" );
    (7283, 0, "\t");
    (7275, 2, "\t\t\t");
    (7266, 3, "\t\t\t\t");
    (7207, 4, "\t\t\t\t\t");
    (7196, 3, "\t\t\t\t");
    (7155, 4, "\t\t\t\t\t");
    (7124, 3, "\t\t\t\t");
    (7114, 2, "\t\t\t");
    (7070, 3, "\t\t\t\t");
    (7035, 2, "\t\t\t");
    (7026, 2, "\t\t\t");
    (7017, 3, "\t\t\t\t");
    (6971, 3, "\t\t\t\t");
    (6931, 3, "\t\t\t\t");
    (6873, 3, "\t\t\t\t");
    (6865, 2, "\t\t\t");
    (6864, 0, "\n\t\t\t");
    (6865, 3, "");
    (6830, 0, "\n\t\t\t");
    (6834, 0, "<");
    (6835, 0, "!");
    (6836, 0, "-");
    (6837, 0, "-");
    (6838, 0, " ");
    (6839, 0, "I");
    (6840, 0, "'");
    (6841, 0, "m");
    (6842, 0, " ");
    (6843, 0, "n");
    (6844, 0, "o");
    (6845, 0, "t");
    (6846, 0, " ");
    (6847, 0, "r");
    (6848, 0, "e");
    (6849, 0, "a");
    (6850, 0, "d");
    (6851, 0, "y");
    (6852, 0, " ");
    (6853, 0, "t");
    (6854, 0, "o");
    (6855, 0, " ");
    (6856, 0, "d");
    (6857, 0, "e");
    (6858, 0, "l");
    (6859, 0, "e");
    (6860, 0, "t");
    (6861, 0, "e");
    (6862, 0, " ");
    (6863, 0, "t");
    (6864, 0, "h");
    (6865, 0, "e");
    (6866, 0, "s");
    (6867, 0, "e");
    (6868, 0, " ");
    (6869, 0, "U");
    (6870, 0, "I");
    (6871, 0, " ");
    (6872, 0, "e");
    (6873, 0, "l");
    (6874, 0, "e");
    (6875, 0, "m");
    (6876, 0, "e");
    (6877, 0, "n");
    (6878, 0, "t");
    (6879, 0, "s");
    (6880, 0, " ");
    (6881, 0, "b");
    (6882, 0, "u");
    (6883, 0, "t");
    (6884, 0, " ");
    (6885, 0, "w");
    (6886, 0, "e");
    (6887, 0, " ");
    (6888, 0, "m");
    (6889, 0, "i");
    (6890, 0, "g");
    (6891, 0, "h");
    (6892, 0, "t");
    (6893, 0, " ");
    (6894, 0, "n");
    (6895, 0, "o");
    (6896, 0, "t");
    (6897, 0, " ");
    (6898, 0, "u");
    (6899, 0, "s");
    (6900, 0, "e");
    (6901, 0, " ");
    (6902, 0, "t");
    (6903, 0, "h");
    (6904, 0, "e");
    (6905, 0, "m");
    (6906, 0, " ");
    (6907, 0, "-");
    (6908, 0, "-");
    (6909, 0, ">");
    (6350, 61, "");
    ( 6884,
      0,
      "\t\t<h4>Room: <em>{room}</em> <a href=\"../..\">(leave)</a></h4>\n" );
    (6884, 2, "\t\t\t");
    (6306, 92, "");
    (6305, 1, "");
    (6588, 76, "");
    (6587, 0, "\n\t\t");
    ( 6590,
      0,
      "\t\t\t\t{#if internal_state == 'waiting'}\n\
       \t\t\t\t\t<button on:click={upd('state', 'playing')}>Start</button>\n" );
    (6628, 5, "\t\t");
    (6588, 6, "\t\t");
    (6595, 0, "_magister == null || _magister == true");
    (6633, 0, " ");
    (6634, 0, "&");
    (6635, 0, "&");
    (6636, 0, " ");
    (6633, 0, ")");
    (6595, 0, "(");
    (6670, 0, "\t");
    (6728, 0, "\n\t\t\t");
    (6732, 0, "<");
    (6732, 1, "");
    (6732, 0, "{");
    (6733, 0, "/");
    (6734, 0, "i");
    (6735, 0, "f");
    (6736, 0, "}");
    (6729, 3, "\t\t");
    (6225, 11, "");
    (6232, 5, "");
    (7911, 4, "A");
    (7912, 0, "d");
    (7913, 0, "v");
    (7914, 0, "a");
    (7915, 0, "n");
    (7916, 0, "c");
    (7917, 0, "e");
    (7918, 0, "d");
    (5372, 0, "// ");
    (5472, 0, "// ");
    (5372, 3, "");
    (10649, 0, "\n\t");
    (10651, 0, "t");
    (10652, 0, "e");
    (10653, 0, "x");
    (10654, 0, "t");
    (10655, 0, "-");
    (10656, 0, "a");
    (10657, 0, "l");
    (10658, 0, "i");
    (10659, 0, "g");
    (10660, 0, "n");
    (10661, 0, ":");
    (10662, 0, " ");
    (10663, 0, "c");
    (10664, 0, "e");
    (10665, 0, "n");
    (10663, 3, "center");
    (10669, 0, ";");
    (6724, 0, "\n\t\t");
    (6727, 0, "<");
    (6728, 0, "v");
    (6729, 0, "s");
    (6730, 0, "p");
    (6730, 1, "");
    (6729, 1, "");
    (6728, 1, "");
    (6728, 0, "d");
    (6729, 0, "i");
    (6730, 0, "v");
    (6731, 0, " ");
    (6732, 0, "c");
    (6733, 0, "l");
    (6734, 0, "a");
    (6735, 0, "s");
    (6736, 0, "s");
    (6732, 5, "s");
    (6733, 0, "t");
    (6734, 0, "y");
    (6735, 0, "l");
    (6736, 0, "e");
    (6737, 0, "=");
    (6738, 0, "'");
    (6739, 0, "'");
    (6740, 0, ">");
    (6741, 0, "<");
    (6742, 0, "/");
    (6743, 0, "d");
    (6744, 0, "i");
    (6745, 0, "v");
    (6746, 0, ">");
    (6739, 0, "h");
    (6740, 0, "e");
    (6741, 0, "o");
    (6742, 0, "g");
    (6743, 0, "h");
    (6743, 1, "");
    (6742, 1, "");
    (6741, 1, "");
    (6741, 0, "i");
    (6742, 0, "g");
    (6743, 0, "h");
    (6744, 0, "t");
    (6745, 0, ":");
    (6746, 0, " ");
    (6747, 0, "4");
    (6748, 0, "0");
    (6749, 0, "0");
    (6750, 0, "p");
    (6751, 0, "x");
    (6752, 0, ";");
    (10741, 0, "\n\t");
    (10743, 0, "d");
    (10744, 0, "i");
    (10745, 0, "s");
    (10746, 0, "p");
    (10747, 0, "l");
    (10748, 0, "a");
    (10749, 0, "y");
    (10750, 0, ":");
    (10751, 0, " ");
    (10752, 0, "i");
    (10753, 0, "n");
    (10754, 0, "l");
    (10755, 0, "i");
    (10756, 0, "n");
    (10757, 0, "e");
    (10758, 0, "-");
    (10759, 0, "b");
    (10760, 0, "l");
    (10761, 0, "o");
    (10752, 10, "inline-block");
    (10764, 0, ";");
    (10735, 1, "");
    (10735, 0, "3");
    (6222, 18, "");
    (6221, 1, "");
    (6869, 0, "\n\t\t\t");
    (6873, 0, "\n\t\t\t");
    (6870, 3, "");
    (6874, 0, "\t\t<h1>{topic}</h1>");
    (6871, 5, "\t\t\t");
    ( 0,
      12187,
      "<script lang=\"ts\">\n\
       import type { HtmlTag } from 'svelte/internal';\n\
       import type { GameConfig } from './shared';\n\n\
       import * as topicIcons from './topics.json'\n\n\
       export let room: string\n\n\
       export let connection: 'waiting' | 'connecting' | 'connected'\n\n\
       export let game_config: GameConfig\n\
       // export let state // loading, waiting, playing, paused.\n\
       // export let start_time\n\
       // export let topic\n\
       // export let meditate\n\
       // export let players\n\
       // export let rounds\n\
       // export let seconds_per_bead\n\
       // export let paused_progress\n\n\
       export let _active_sessions: number\n\
       export let _magister: true | null\n\
       export let _clock_offset: number\n\n\
       // let game_completed = false // Derived from other properties\n\n\
       let round_audio: HTMLAudioElement\n\
       let complete_audio: HTMLAudioElement\n\
       let topic_img: HTMLElement\n\n\
       let state: GameConfig['state']\n\
       $: state = game_config.state\n\n\
       $: console.log('Game configuration changed', game_config)\n\n\
       \t// export let state\n\n\
       const ARCHETOPICS = [\n\
      \  'Truth', 'Human', 'Energy', 'Beauty', 'Beginning', 'End', 'Birth', \
       'Death',\n\
      \  'Ego', 'Attention', 'Art', 'Empathy', 'Eutopia', 'Future', 'Game', \
       'Gift',\n\
      \  'History', 'Cosmos', 'Time', 'Life', 'Addiction', 'Paradox', \
       'Shadow', 'Society'\n\
       ]\n\n\
       $: {\n\
       \tif (topic_img) {\n\
       \t\tconst svgContent = topicIcons[game_config.topic.toLocaleLowerCase() \
       as keyof typeof topicIcons]\n\
       \t\tif (svgContent) topic_img.innerHTML = svgContent\n\
       \t}\n\
       }\n\n\
       // Could make configurable. Eh.\n\
       const MEDITATION_SECONDS = 60\n\n\
       interface GameStage {\n\
       \tlabel: string,\n\
       \ttype: 'waiting' | 'bead' | 'meditate' | 'contemplation' | 'complete',\n\
       \tduration: number,\n\
       \tno_sound?: true,\n\
       \tr?: number, p?: number\n\
       }\n\n\
       let game_stages: GameStage[] = []\n\
       $: {\n\
       \tgame_stages = [{\n\
       \t\tlabel: `${game_config.meditate ? 'Meditation' : 'Game'} is about to \
       start`,\n\
       \t\ttype: 'waiting',\n\
       \t\tduration: 3,\n\
       \t\tno_sound: true\n\
       \t}]\n\
       \tif (game_config.meditate) game_stages.push({\n\
       \t\tlabel: 'Meditate',\n\
       \t\ttype: 'meditate',\n\
       \t\tduration: MEDITATION_SECONDS,\n\
       \t})\n\
       \tfor (let r = 0; r < game_config.rounds; r++) {\n\
       \t\tfor (let p = 0; p < game_config.players; p++) {\n\
       \t\t\tif (game_config.seconds_between_bead && (r > 0 || p > 0)) \
       game_stages.push({\n\
       \t\t\t\tlabel: 'Breathe',\n\
       \t\t\t\tduration: game_config.seconds_between_bead,\n\
       \t\t\t\ttype: 'bead'\n\
       \t\t\t})\n\n\
       \t\t\tgame_stages.push({\n\
       \t\t\t\tlabel: game_config.players > 1 ? `Round ${r+1} player ${p+1}` : \
       `Round ${r+1}`,\n\
       \t\t\t\tduration: game_config.seconds_per_bead,\n\
       \t\t\t\ttype: 'bead', r, p\n\
       \t\t\t})\n\
       \t\t}\n\
       \t}\n\n\
       \tif (game_config.contemplation) game_stages.push({\n\
       \t\tlabel: \"Contemplate the game's passing\",\n\
       \t\ttype: 'contemplation',\n\
       \t\tduration: MEDITATION_SECONDS,\n\
       \t})\n\n\
       \tconsole.log('game stages', game_stages, \
       game_config.seconds_between_bead)\n\
       }\n\n\
       // TODO: The protocol for these update methods doesn't use game_state \
       properly.\n\
       const update_state = async (patch: Record<string, string | number | \
       boolean | null>) => {\n\
       \tawait fetch(`${room}/configure`, {\n\
       \t\tmethod: 'POST',\n\
       \t\tmode: 'same-origin',\n\
       \t\theaders: {\n\
       \t\t\t'content-type': 'application/json',\n\
       \t\t},\n\
       \t\tbody: JSON.stringify(patch)\n\
       \t})\n\
       }\n\n\
       const upd = (k: string, v: string | number | boolean | null) => () => \
       update_state({[k]: v})\n\n\
       const config = (k: string): \
       svelte.JSX.FormEventHandler<HTMLInputElement> => (e) => {\n\
       \t// console.log('k', k, e.data, e.value, e.target.value, e.target.type)\n\
       \tconst target = e.target as HTMLInputElement\n\
       \tconst raw_value = target.value\n\
       \tconst value = target.type === 'number' ? ~~raw_value\n\
       \t\t: target.type === 'checkbox' ? target.checked\n\
       \t\t: raw_value\n\
       \tupdate_state({[k]: value})\n\
       }\n\n\
       const roundish = (x: number) => Math.round(x * 10) / 10\n\n\n\
       const waiting_stage: GameStage = { label: 'Waiting for game to start', \
       type: 'waiting', duration: Infinity }\n\
       const complete_stage: GameStage = { label: 'Game complete', type: \
       'complete', duration: Infinity }\n\
       const get_current_stage = (offset_ms: number): {stage: GameStage, \
       offset_sec: number} => {\n\
       \tif (state === 'waiting') return {stage: waiting_stage, offset_sec: 0}\n\n\
       \tlet offset_sec = Math.round(offset_ms / 1000)\n\
       \tfor (let s = 0; s < game_stages.length; s++) {\n\
       \t\tlet stage = game_stages[s]\n\
       \t\tif (stage.duration > offset_sec) {\n\
       \t\t\treturn {stage, offset_sec}\n\
       \t\t}\n\
       \t\toffset_sec -= stage.duration\n\
       \t}\n\
       \treturn {\n\
       \t\tstage: complete_stage, offset_sec\n\
       \t}\n\
       }\n\n\
       let current_stage: GameStage | null = null, offset_sec: number\n\
       $: console.log('current stage', current_stage)\n\n\n\
       const tick = (play_audio: boolean) => {\n\
       \tconsole.log('tick')\n\
       \t// console.log('state', state, 'completed', state && state.complete)\n\n\
       \tconst time = state === 'playing' ? Date.now() + _clock_offset - \
       game_config.start_time\n\
       \t\t: state === 'paused' ? game_config.paused_progress!\n\
       \t\t: 0\n\
       \tconst {stage: new_stage, offset_sec: new_offs} = \
       get_current_stage(time)\n\
       \t// state_label = state.label\n\n\
       \toffset_sec = new_offs\n\
       \tif (new_stage !== current_stage) {\n\
       \t\tconsole.log('state changed', new_stage.label, new_stage.type === \
       'complete')\n\
       \t\tcurrent_stage = new_stage\n\
       \t\t// completed = new_game_state.complete\n\
       \t\t// if (!state.complete) round_audio.play()\n\n\
       \t\tif (play_audio && !new_stage.no_sound) {\n\
       \t\t\tif (current_stage.type === 'complete' || current_stage.type === \
       'contemplation') complete_audio.play()\n\
       \t\t\telse round_audio.play()\n\
       \t\t}\n\
       \t}\n\
       }\n\n\
       let timer: number | null\n\
       $: {\n\
       \t// Sadly we can't use internal_state here because it generates a \
       cyclic dependancy.\n\
       \tlet completed = current_stage ? current_stage.type === 'complete' : \
       false\n\
       \t// console.log('xx', state, timer, completed, current_stage)\n\n\
       \t// if (state !== 'loading') tick(false)\n\n\
       \tif (state === 'playing' && timer == null && !completed) {\n\
       \t\t// setTimeout needed to get around some weird race condition.\n\
       \t\t// There's probably better ways to structure this :/\n\
       \t\tsetTimeout(() => tick(false))\n\
       \t\ttimer = setInterval(() => {\n\
       \t\t\ttick(true)\n\
       \t\t}, 1000)\n\
       \t} else if ((completed || state !== 'playing') && timer != null) {\n\
       \t\tconsole.log('cancelled interval timer')\n\
       \t\tclearInterval(timer)\n\
       \t\ttimer = null\n\
       \t} else if (state === 'waiting' || state === 'paused') {\n\
       \t\tsetTimeout(() => tick(false))\n\
       \t}\n\
       }\n\n\
       let game_completed: boolean\n\
       $: {\n\
       \t// console.log('updating game_completed', current_stage)\n\
       \tgame_completed = (state !== 'playing' || current_stage == null) ? false\n\
       \t: (current_stage.type === 'complete')\n\
       }\n\n\
       let internal_state: GameConfig['state'] | 'completed'\n\
       $: internal_state = game_completed ? 'completed' : state\n\n\
       let bar_width = 0\n\
       $: bar_width = current_stage == null ? 0\n\
       \t: state === 'waiting' ? 0\n\
       \t: current_stage.type === 'complete' ? 100\n\
       \t: 100 * offset_sec / current_stage.duration\n\n\
       let stage_label: string\n\
       $: stage_label = internal_state === 'waiting' ? 'Waiting for game to \
       start'\n\
       \t: current_stage == null ? 'unknown' : current_stage.label\n\n\
       // const order = ['meditate', 'bead', 'complete']\n\
       // const class_for = (x: number): string => x < 0 ? 'done'\n\
       // \t: x > 0 ? 'waiting'\n\
       // \t: 'active'\n\n\
       // const progress_class = (stage: GameStage, type: string, r?: number, \
       p?: number): string => {\n\
       // \tif (stage == null) return ''\n\n\
       // \tconst current_o = order.indexOf(stage.type)\n\
       // \tconst element_o = order.indexOf(type)\n\n\
       // \t// const o_diff = element_o - current_o\n\
       // \treturn type === 'bead' && stage.type === 'bead'\n\
       // \t\t? (r === stage.r ? class_for(p - stage.p) : class_for(r - \
       stage.r))\n\
       // \t\t: class_for(element_o - current_o)\n\
       // }\n\n\
       // This will get more complex in time. For now, pause the game to fiddle.\n\
       $: settings_disabled = state === 'playing'\n\n\
       let config_open = false\n\n\
       $: if (_magister === true) config_open = true\n\n\
       // The first user has the config open by default.\n\
       // $: if (_active_sessions === 1) config_open = true\n\n\
       // The magister box is fully visible once there's a critical mass of \
       players in the room\n\
       $: magister_opaque = _magister === true || _active_sessions >= 6\n\n\
       </script>\n\n\
       <svelte:head>\n\
       \t{#if _magister}\n\
       \t\t<style>\n\
       body {\n\
       \tbackground-color: var(--bg-highlight);\n\
       }\n\
       \t\t</style>\n\
       \t{/if}\n\
       </svelte:head>\n\n\
       <!-- <main class:magister={_magister}> -->\n\
       <main>\n\
       \t<audio bind:this={round_audio} src=\"/lo-metal-tone.mp3\" \
       preload=\"auto\"><track kind=\"captions\"></audio>\n\
       \t<audio bind:this={complete_audio} src=\"/hi-metal-tone.mp3\" \
       preload=\"auto\"><track kind=\"captions\"></audio>\n\n\
       \t{#if internal_state === 'loading'}\n\
       \t\t<h1>Loading game state</h1>\n\
       \t{:else}\n\
       \t\t<!-- <h1>Glass Bead Game Timer</h1> -->\n\
       \t\t<!-- <h1>{topic}</h1> -->\n\n\
       \t\t<div id='topicimg' bind:this={topic_img}>{game_config.topic}</div>\n\n\
       \t\t<h1>{stage_label}</h1>\n\
       \t\t<div id='progresscontainer'>\n\
       \t\t\t<div id='progress_time'>{((internal_state === 'playing' || \
       internal_state === 'paused') && current_stage) ? current_stage.duration \
       - offset_sec : ''}</div>\n\
       \t\t\t<div id='progress' style='width: {bar_width}%'></div>\n\
       \t\t</div>\n\n\
       \t\t{#if (_magister == null || _magister == true)}\n\
       \t\t\t{#if internal_state == 'waiting'}\n\
       \t\t\t\t<button on:click={upd('state', 'playing')}>Start</button>\n\
       \t\t\t{:else if internal_state == 'playing'}\n\
       \t\t\t\t<button on:click={upd('state', 'paused')}>Pause</button>\n\
       \t\t\t{:else if internal_state == 'paused'}\n\
       \t\t\t\t<button on:click={upd('state', 'playing')}>Resume</button>\n\
       \t\t\t{/if}\n\
       \t\t{/if}\n\n\
       \t\t<div style='height: 400px;'></div>\n\n\
       \t\t<details>\n\
       \t\t\t<!-- I'm not ready to delete these UI elements but we might not \
       use them -->\n\
       \t\t\t<summary>Info</summary>\n\n\
       \t\t\t<h1>{game_config.topic}</h1>\n\
       \t\t\t<h4>Room: <em>{room}</em> <a href=\"../..\">(leave)</a></h4>\n\n\
       \t\t\t<div>\n\
       \t\t\t\t{state === 'waiting' ? 'Waiting for the game to start'\n\
       \t\t\t\t: state === 'paused' ? 'GAME PAUSED'\n\
       \t\t\t\t: state === 'playing' ? 'Game in progress'\n\
       \t\t\t\t: ''}\n\
       \t\t\t</div>\n\
       \t\t\t{#if connection !== 'connected'}\n\
       \t\t\t\t<div>DISCONNECTED FROM GAME SERVER</div>\n\
       \t\t\t{:else}\n\
       \t\t\t\t{#if _active_sessions == 1}\n\
       \t\t\t\t\t<div>You are alone in the room</div>\n\
       \t\t\t\t{:else}\n\
       \t\t\t\t\t<div>{_active_sessions} players are in this room</div>\n\
       \t\t\t\t{/if}\n\
       \t\t\t{/if}\n\
       \t\n\
       \t\t\t<div id='rounds'>\n\
       \t\t\t\t<h2>Game</h2>\n\
       \t\t\t\t{#if game_config.meditate}\n\
       \t\t\t\t\t<div>\n\
       \t\t\t\t\t\t<!-- <span class={progress_class(current_stage, \
       'meditate')}>Meditation (1 min)</span> -->\n\
       \t\t\t\t\t\t<span>Meditation (1 min)</span>\n\
       \t\t\t\t\t</div>\n\
       \t\t\t\t{/if}\n\
       \t\t\t\t{#each Array(Math.max(game_config.rounds, 0)) as _, r}\n\
       \t\t\t\t\t<div>Round {r+1}:\n\
       \t\t\t\t\t\t{#each Array(Math.max(game_config.players, 0)) as _, p}\n\
       \t\t\t\t\t\t\t<!-- <span class={'bead ' + progress_class(current_stage, \
       'bead', r, p)}>{p+1} </span> -->\n\
       \t\t\t\t\t\t\t<span>{p+1} </span>\n\
       \t\t\t\t\t\t{/each}\n\
       \t\t\t\t\t</div>\n\
       \t\t\t\t{/each}\n\
       \t\t\t</div>\n\
       \t\n\
       \t\t</details>\n\n\
       \t\t{#if _magister == null || _magister == true}\n\
       \t\t\t<details class='config' bind:open={config_open}>\n\
       \t\t\t\t<summary>Game controls</summary>\n\n\
       \t\t\t\t<p>\n\
       \t\t\t\t\t{#if _magister == null}\n\
       \t\t\t\t\t\tThis will effect all players. Will you borrow power? Will \
       you steal it?\n\
       \t\t\t\t\t{:else}\n\
       \t\t\t\t\t\tYou are master of the games. These controls are yours alone.\n\
       \t\t\t\t\t{/if}\n\
       \t\t\t\t</p>\n\n\
       \t\t\t\t{#if internal_state == 'waiting'}\n\
       \t\t\t\t\t<button on:click={upd('state', 'playing')}>Start</button>\n\
       \t\t\t\t{:else if internal_state == 'playing'}\n\
       \t\t\t\t\t<button on:click={upd('state', 'paused')}>Pause</button>\n\
       \t\t\t\t{:else if internal_state == 'paused'}\n\
       \t\t\t\t\t<button on:click={upd('state', 'playing')}>Resume</button>\n\
       \t\t\t\t{/if}\n\n\
       \t\t\t\t{#if internal_state == 'paused' || internal_state == \
       'completed' }\n\
       \t\t\t\t\t<button on:click={upd('state', 'waiting')}>Restart \
       game</button>\n\
       \t\t\t\t{/if}\n\n\
       \t\t\t\t<label>\n\
       \t\t\t\t\t<span>Topic</span>\n\
       \t\t\t\t\t<input disabled={settings_disabled} type='text' \
       value={game_config.topic} on:input={config('topic')} list='archetopics' \
       >\n\
       \t\t\t\t\t<datalist id='archetopics'>\n\
       \t\t\t\t\t\t{#each ARCHETOPICS as topic}\n\
       \t\t\t\t\t\t\t<option value={topic}>\n\
       \t\t\t\t\t\t{/each}\n\
       \t\t\t\t\t</datalist>\n\
       \t\t\t\t</label>\n\n\
       \t\t\t\t<label>\n\
       \t\t\t\t\t<span>Pre-game meditation</span>\n\
       \t\t\t\t\t<input disabled={settings_disabled} type='checkbox' \
       checked={game_config.meditate} on:input={config('meditate')} >\n\
       \t\t\t\t</label>\n\n\
       \t\t\t\t<label>\n\
       \t\t\t\t\t<span>Post game contemplation</span>\n\
       \t\t\t\t\t<input disabled={settings_disabled} type='checkbox' \
       checked={game_config.contemplation} on:input={config('contemplation')} >\n\
       \t\t\t\t</label>\n\n\
       \t\t\t\t<label>\n\
       \t\t\t\t\t<span>Number of players</span>\n\
       \t\t\t\t\t<input disabled={settings_disabled} type='number' \
       pattern='[0-9]*' value={game_config.players} \
       on:input={config('players')} min=1 max=12 >\n\
       \t\t\t\t</label>\n\n\
       \t\t\t\t<label>\n\
       \t\t\t\t\t<span>Number of rounds</span>\n\
       \t\t\t\t\t<input disabled={settings_disabled} type='number' \
       pattern='[0-9]*' value={game_config.rounds} on:input={config('rounds')} \
       min=1 max=20>\n\
       \t\t\t\t</label>\n\n\
       \t\t\t\t<label>\n\
       \t\t\t\t\t<span>Seconds per bead</span>\n\
       \t\t\t\t\t<input disabled={settings_disabled} type='number' \
       pattern='[0-9]*' value={game_config.seconds_per_bead} \
       on:input={config('seconds_per_bead')}>\n\
       \t\t\t\t</label>\n\n\
       \t\t\t\t<label>\n\
       \t\t\t\t\t<span>Seconds between beads</span>\n\
       \t\t\t\t\t<input disabled={settings_disabled} type='number' \
       pattern='[0-9]*' value={game_config.seconds_between_bead} \
       on:input={config('seconds_between_bead')}>\n\
       \t\t\t\t</label>\n\n\
       \t\t\t\t<div style='margin-top: 1em;'>\n\
       \t\t\t\t\t(Total game length: {roundish(\n\
       \t\t\t\t\t\tgame_stages.reduce((x, s) => x + s.duration, 0) / 60\n\
       \t\t\t\t\t)} minutes)\n\
       \t\t\t\t</div>\n\n\
       \t\t\t\t<div id='magister_box' class:magister_opaque>\n\
       \t\t\t\t\t{#if _magister == null}\n\
       \t\t\t\t\t\t<button on:click={upd('_magister', true)}>Assume the mantle \
       of Magister Ludi</button>\n\
       \t\t\t\t\t\t<p><i>Advanced - for large games</i></p>\n\
       \t\t\t\t\t\t<p>When present, the Magister Ludi (master of the games) \
       has exclusive control of the game.</p>\n\
       \t\t\t\t\t{:else if _magister == true}\n\
       \t\t\t\t\t\t<button on:click={upd('_magister', null)}>Abdicate Magister \
       Ludi status</button>\n\
       \t\t\t\t\t\t<p>You are the master of the games. You have exclusive \
       control over playing, pausing and configuring this game.</p>\n\
       \t\t\t\t\t\t<p>Do not close this browser window or you will be \
       dethroned.</p>\n\
       \t\t\t\t\t{/if}\n\
       \t\t\t\t</div>\n\
       \t\t\t</details>\n\
       \t\t{:else}\n\
       \t\t\t<p class='config'>Magister Ludi is managing this game.</p>\n\
       \t\t{/if}\n\
       \t{/if}\n\
       </main>\n\n\
       <style>\n\n\
       main {\n\
       \t/* margin-bottom: 3em; */\n\
       \ttext-align: center;\n\
       }\n\n\
       #topicimg {\n\
       \twidth: 300px;\n\
       \tdisplay: inline-block;\n\
       }\n\n\
       /* .magister {\n\
       \tbackground-color: var(--bg-highlight);\n\
       } */\n\n\
       h1 {\n\
       \tmargin-top: 1em;\n\
       }\n\n\
       #progresscontainer {\n\
       \t/* width: calc(100% - 50px); */\n\
       \tposition: relative;\n\
       \tmargin: 25px;\n\
       \theight: 5em;\n\
       \tborder: 2px solid var(--fg-color);\n\
       }\n\n\
       #progress_time {\n\
       \tposition: absolute;\n\
       \t/* color: red; */\n\
       \t/* font-size: var(--bg-color); */\n\
       \tcolor: white;\n\
       \t/* color: white; */\n\
       \tfont-size: 54px;\n\
       \tmargin-left: 5px;\n\
       \tmix-blend-mode: difference;\n\
       }\n\n\
       #progress {\n\
       \tbackground-color: var(--fg-color);\n\
       \t/* width: 50%; */\n\
       \theight: 100%;\n\
       \t/* transition: width 1s linear; */\n\
       }\n\n\n\
       /* .bead {\n\
       \tmargin-right: 1em;\n\
       \tpadding: 2px 4px;\n\
       }\n\
       .done {\n\
       \ttext-decoration: line-through;\n\
       \tcolor: #888;\n\
       } */\n\
       /* .waiting {\n\
       \tcolor: #888;\n\
       } */\n\
       /* .active {\n\
       \tbackground-color: var(--fg-color);\n\
       \tcolor: var(--bg-color);\n\
       } */\n\n\
       /***** Game config *****/\n\
       .config {\n\
       \tmargin-top: 2em;\n\
       }\n\n\
       summary {\n\
       \ttext-decoration: underline;\n\
       \tcursor: pointer;\n\
       }\n\n\
       button {\n\
       \tfont-size: 140%;\n\
       \tmargin: 10px 0;\n\
       \tcolor: var(--bg-color);\n\
       \t/* color: var(--fg-color); */\n\
       }\n\n\
       details > :first-child {\n\
       \tmargin-bottom: 1em;\n\
       }\n\n\
       label {\n\
       \tmargin-bottom: 3px;\n\
       }\n\
       label > :first-child {\n\
       \tdisplay: inline-block;\n\
       \tmin-width: 14em;\n\
       }\n\n\
       input {\n\
       \twidth: 7em;\n\
       \tfont-size: 16px;\n\
       \t/* color: var(--bg-color); */\n\
       \tborder: 2px solid #686868;\n\
       }\n\n\
       input[type=checkbox] {\n\
       \theight: 1em;\n\
       }\n\n\
       label {\n\
       \tdisplay: block;\n\
       }\n\n\
       #magister_box {\n\
       \tborder: 1px dashed var(--fg-color);\n\
       \t/* margin: 1em 0; */\n\
       \tmargin: 1em auto;\n" );
    (1593, 0, ",");
    (1594, 0, "\n\t");
    (1596, 0, "i");
    (1597, 0, "d");
    (1598, 0, ":");
    (1599, 0, " ");
    (1600, 0, "s");
    (1601, 0, "t");
    (1602, 0, "r");
    (1603, 0, "i");
    (1604, 0, "n");
    (1605, 0, "g");
    (1598, 0, "?");
    (2368, 0, ",");
    (2369, 0, "\n\t\t\t\t");
    (2374, 0, "i");
    (2375, 0, "d");
    (2376, 0, ":");
    (2377, 0, " ");
    (2378, 0, "`");
    (2379, 0, "$");
    (2380, 0, "{");
    (2381, 0, "r");
    (2382, 0, "}");
    (2383, 0, " ");
    (2384, 0, "$");
    (2385, 0, "{");
    (2386, 0, "p");
    (2387, 0, "}");
    (2388, 0, "`");
    (2379, 0, "s");
    (2380, 0, " ");
    (5127, 0, " ");
    (5128, 0, "|");
    (5129, 0, " ");
    (5130, 0, "a");
    (5131, 0, "n");
    (5132, 0, "y");
    (5133, 0, " ");
    (5134, 0, "/");
    (5135, 0, "/");
    (5136, 0, " ");
    (5137, 0, "T");
    (5138, 0, "i");
    (5139, 0, "m");
    (5140, 0, "e");
    (5141, 0, "o");
    (5142, 0, "u");
    (5143, 0, "t");
    (5144, 0, "?");
    (4956, 0, " ");
    (4957, 0, "&");
    (4958, 0, "&");
    (4959, 0, " ");
    (4956, 4, "");
    (4916, 0, "\n\t\t");
    (4919, 0, "l");
    (4920, 0, "e");
    (4921, 0, "t");
    (4922, 0, " ");
    (4923, 0, "c");
    (4924, 0, "h");
    (4925, 0, "a");
    (4926, 0, "n");
    (4927, 0, "g");
    (4928, 0, "e");
    (4929, 0, "d");
    (4930, 0, " ");
    (4931, 0, "=");
    (4932, 0, " ");
    (4933, 0, "n");
    (4934, 0, "e");
    (4935, 0, "w");
    (4936, 0, "_");
    (4937, 0, "s");
    (4938, 0, "t");
    (4939, 0, "a");
    (4940, 0, "g");
    (4941, 0, "e");
    (4942, 0, " ");
    (4943, 0, "=");
    (4944, 0, "=");
    (4945, 0, " ");
    (4946, 0, "n");
    (4947, 0, "u");
    (4948, 0, "l");
    (4949, 0, "l");
    (4950, 0, " ");
    (4951, 0, "|");
    (4952, 0, "|");
    (4953, 0, " ");
    (4954, 0, "c");
    (4955, 0, "u");
    (4956, 0, "r");
    (4957, 0, "r");
    (4958, 0, "e");
    (4959, 0, "n");
    (4960, 0, "t");
    (4961, 0, "_");
    (4962, 0, "s");
    (4963, 0, "t");
    (4964, 0, "a");
    (4954, 11, "current_stage");
    (4967, 0, " ");
    (4968, 0, "=");
    (4969, 0, "=");
    (4970, 0, " ");
    (4971, 0, "n");
    (4972, 0, "u");
    (4973, 0, "l");
    (4974, 0, "l");
    (4975, 0, " ");
    (4976, 0, "|");
    (4977, 0, "|");
    (4978, 0, " ");
    (4979, 0, "n");
    (4980, 0, "e");
    (4981, 0, "w");
    (4982, 0, "_");
    (4983, 0, "s");
    (4984, 0, "t");
    (4985, 0, "a");
    (4986, 0, "g");
    (4987, 0, "e");
    (4988, 0, ".");
    (4989, 0, "i");
    (4990, 0, "d");
    (4991, 0, " ");
    (4992, 0, "!");
    (4993, 0, "=");
    (4994, 0, "=");
    (4995, 0, " ");
    (4996, 0, "c");
    (4997, 0, "u");
    (4998, 0, "r");
    (4999, 0, "r");
    (4996, 4, "current_stage");
    (5009, 0, ".");
    (5010, 0, "i");
    (5011, 0, "d");
    (4916, 0, "\n\t\t");
    (4919, 0, "/");
    (4920, 0, "/");
    (4921, 0, " ");
    (4922, 0, "H");
    (4923, 0, "o");
    (4924, 0, "t");
    (4925, 0, "f");
    (4926, 0, "i");
    (4927, 0, "x");
    (5064, 0, " ");
    (5065, 0, "&");
    (5066, 0, "&");
    (5067, 0, " ");
    (5068, 0, "c");
    (5069, 0, "h");
    (5070, 0, "e");
    (5070, 1, "");
    (5070, 0, "a");
    (5071, 0, "n");
    (5072, 0, "g");
    (5073, 0, "e");
    (5074, 0, "d");
    (5004, 1, "");
    (5006, 0, " ");
    (5007, 0, "n");
    (5008, 0, "u");
    (5009, 0, "l");
    (5010, 0, "l");
    (5011, 0, " ");
    (5012, 0, "|");
    (5013, 0, " ");
    (5013, 1, "");
    (5013, 0, "|");
    (5014, 0, " ");
    (5015, 1, "");
    (5031, 0, " ");
    (5032, 0, "\\");
    (5033, 0, "\\");
    (5034, 0, " ");
    (5034, 1, "");
    (5033, 1, "");
    (5032, 1, "");
    (5032, 0, "=");
    (5033, 0, "=");
    (5034, 0, " ");
    (5035, 0, "n");
    (5036, 0, "u");
    (5037, 0, "l");
    (5038, 0, "l");
    (5039, 0, " ");
    (5040, 0, "|");
    (5041, 0, "|");
    (5042, 0, " ");
    (5043, 0, "current_stage.id == null");
    (5067, 0, " ");
    (5068, 0, "!");
    (5069, 0, "=");
    (5070, 0, "=");
    (5066, 1, "");
    (5065, 1, "");
    (5064, 1, "");
    (5063, 1, "");
    (5062, 1, "");
    (5061, 1, "");
    (5060, 1, "");
    (5059, 1, "");
    (5063, 0, " ");
    (5064, 0, "new_stage.id ");
    (5076, 1, "");
    (5076, 0, "\n\t\t");
    (5079, 0, "c");
    (5080, 0, "o");
    (5081, 0, "n");
    (5082, 0, "s");
    (5083, 0, "o");
    (5084, 0, "l");
    (5085, 0, "e");
    (5086, 0, ".");
    (5087, 0, "l");
    (5088, 0, "o");
    (5089, 0, "g");
    (5090, 0, "(");
    (5091, 0, "n");
    (5092, 0, "e");
    (5093, 0, "w");
    (5094, 0, "_");
    (5095, 0, "s");
    (5096, 0, "t");
    (5097, 0, "a");
    (5098, 0, "g");
    (5099, 0, "e");
    (5100, 0, ",");
    (5101, 0, " ");
    (5102, 0, "c");
    (5103, 0, "u");
    (5104, 0, "r");
    (5105, 0, "r");
    (5106, 0, "e");
    (5107, 0, "n");
    (5108, 0, "t");
    (5109, 0, "_");
    (5110, 0, "s");
    (5111, 0, "t");
    (5112, 0, "a");
    (5113, 0, "g");
    (5114, 0, "e");
    (5115, 0, ",");
    (5116, 0, " ");
    (5117, 0, "c");
    (5118, 0, "h");
    (5119, 0, "a");
    (5120, 0, "n");
    (5121, 0, "g");
    (5122, 0, "e");
    (5123, 0, "d");
    (5124, 0, ")");
    (4917, 209, "");
    (4801, 0, "\n\t\t");
    (4804, 0, "\n\t\t");
    (4802, 2, "");
    ( 4805,
      0,
      "\t\t// Hotfix\n\
       \t\tlet changed = new_stage == null || current_stage == null || \
       new_stage.id == null || current_stage.id == null || current_stage.id \
       !== new_stage.id\n\
       \t\tconsole.log(new_stage, current_stage, changed)\n" );
    (4817, 2, "\t\t\t\t");
    (4803, 4, "\t\t\t");
    (4803, 3, "\t\t");
    (4815, 4, "\t\t\t");
    (4815, 3, "\t\t");
    ( 2218,
      0,
      "\t\t\t\tlabel: game_config.players > 1 ? `Round ${r+1} player ${p+1}` : \
       `Round ${r+1}`,\n" );
    (2306, 0, "// ");
    (2229, 71, "");
    (2229, 0, "'");
    (2230, 0, "'");
    ( 2218,
      102,
      "\t\t\t\tlabel: game_config.players > 1 ? `Round ${r+1} player ${p+1}` : \
       `Round ${r+1}`,\n" );
    ( 1462,
      12844,
      "\ttype: 'waiting' | 'bead' | 'breath' | 'meditate' | 'contemplation' | \
       'complete',\n\
       \tduration: number,\n\
       \tno_sound?: true,\n\
       \tr?: number, p?: number,\n\
       \tid?: string\n\
       }\n\n\
       let game_stages: GameStage[] = []\n\
       $: {\n\
       \tgame_stages = [{\n\
       \t\tlabel: `${game_config.meditate ? 'Meditation' : 'Game'} is about to \
       start`,\n\
       \t\ttype: 'waiting',\n\
       \t\tduration: 3,\n\
       \t\tno_sound: true\n\
       \t}]\n\
       \tif (game_config.meditate) game_stages.push({\n\
       \t\tlabel: 'Meditate',\n\
       \t\ttype: 'meditate',\n\
       \t\tduration: MEDITATION_SECONDS,\n\
       \t})\n\
       \tfor (let r = 0; r < game_config.rounds; r++) {\n\
       \t\tfor (let p = 0; p < game_config.players; p++) {\n\
       \t\t\tif (game_config.seconds_between_bead && (r > 0 || p > 0)) \
       game_stages.push({\n\
       \t\t\t\tlabel: 'Breathe',\n\
       \t\t\t\tduration: game_config.seconds_between_bead,\n\
       \t\t\t\ttype: 'breath',\n\
       \t\t\t\tid: `b ${r} ${p}`\n\
       \t\t\t})\n\n\
       \t\t\tgame_stages.push({\n\
       \t\t\t\tlabel: game_config.players > 1 ? `Round ${r+1} player ${p+1}` : \
       `Round ${r+1}`,\n\
       \t\t\t\tduration: game_config.seconds_per_bead,\n\
       \t\t\t\ttype: 'bead', r, p,\n\
       \t\t\t\tid: `s ${r} ${p}`\n\
       \t\t\t})\n\
       \t\t}\n\
       \t}\n\n\
       \tif (game_config.contemplation) game_stages.push({\n\
       \t\tlabel: \"Contemplate the game's passing\",\n\
       \t\ttype: 'contemplation',\n\
       \t\tduration: MEDITATION_SECONDS,\n\
       \t})\n\n\n\
       \tconsole.log('game stages', game_stages, \
       game_config.seconds_between_bead)\n\
       }\n\n\
       let total_game_length: number\n\
       $: total_game_length = game_stages.reduce((x, s) => x + s.duration, 0)\n\n\
       // Used for the overall game progress indicator.\n\
       let inner_game_stages: GameStage[]\n\
       $: inner_game_stages = game_stages.filter(s => s.type === 'breath' || \
       s.type === 'bead')\n\
       let inner_game_length: number\n\
       $: inner_game_length = inner_game_stages.reduce((x, s) => x + \
       s.duration, 0)\n\n\
       // TODO: The protocol for these update methods doesn't use game_state \
       properly.\n\
       const update_state = async (patch: Record<string, string | number | \
       boolean | null>) => {\n\
       \tawait fetch(`${room}/configure`, {\n\
       \t\tmethod: 'POST',\n\
       \t\tmode: 'same-origin',\n\
       \t\theaders: {\n\
       \t\t\t'content-type': 'application/json',\n\
       \t\t},\n\
       \t\tbody: JSON.stringify(patch)\n\
       \t})\n\
       }\n\n\
       const upd = (k: string, v: string | number | boolean | null) => () => \
       update_state({[k]: v})\n\n\
       const config = (k: string): \
       svelte.JSX.FormEventHandler<HTMLInputElement> => (e) => {\n\
       \t// console.log('k', k, e.data, e.value, e.target.value, e.target.type)\n\
       \tconst target = e.target as HTMLInputElement\n\
       \tconst raw_value = target.value\n\
       \tconst value = target.type === 'number' ? ~~raw_value\n\
       \t\t: target.type === 'checkbox' ? target.checked\n\
       \t\t: raw_value\n\
       \tupdate_state({[k]: value})\n\
       }\n\n\
       const roundish = (x: number) => Math.round(x * 10) / 10\n\n\n\
       const waiting_stage: GameStage = { label: 'Waiting for game to start', \
       type: 'waiting', duration: Infinity }\n\
       const complete_stage: GameStage = { label: 'Game complete', type: \
       'complete', duration: Infinity }\n\
       const get_current_stage = (offset_ms: number): {stage: GameStage, \
       stage_idx: number, offset_sec: number} => {\n\
       \tif (state === 'waiting') return {stage: waiting_stage, stage_idx: -1, \
       offset_sec: 0}\n\n\
       \tlet offset_sec = Math.round(offset_ms / 1000)\n\
       \tfor (let s = 0; s < game_stages.length; s++) {\n\
       \t\tlet stage = game_stages[s]\n\
       \t\tif (stage.duration > offset_sec) {\n\
       \t\t\treturn {stage, stage_idx: s, offset_sec}\n\
       \t\t}\n\
       \t\toffset_sec -= stage.duration\n\
       \t}\n\
       \treturn {\n\
       \t\tstage: complete_stage, stage_idx: game_stages.length, offset_sec\n\
       \t}\n\
       }\n\n\
       // Urgh kinda ugly storing state for both the index and stage itself. \
       Better to\n\
       // have one derive the other.\n\
       let current_stage: GameStage | null = null, current_stage_idx: number = \
       -1, offset_sec: number\n\
       $: console.log('current stage', current_stage)\n\
       // $: console.log('idx', current_stage_idx)\n\n\
       const tick = (play_audio: boolean) => {\n\
       \tconsole.log('tick')\n\
       \t// console.log('state', state, 'completed', state && state.complete)\n\n\
       \tconst time = state === 'playing' ? Date.now() + _clock_offset - \
       game_config.start_time\n\
       \t\t: state === 'paused' ? game_config.paused_progress!\n\
       \t\t: 0\n\
       \tconst {stage: new_stage, stage_idx: new_stage_idx, offset_sec: \
       new_offs} = get_current_stage(time)\n\
       \t// state_label = state.label\n\n\
       \toffset_sec = new_offs\n\
       \tif (new_stage !== current_stage) {\n\
       \t\tconsole.log('state changed', new_stage.label, new_stage.type === \
       'complete')\n\n\
       \t\t// This happens sometimes with other kinds of configuration changes -\n\
       \t\t// eg if a user enters or leaves the room, or the room is \
       reconfigured.\n\
       \t\t// Only make a sound if the *stage* changes.\n\
       \t\tlet changed = current_stage == null || (new_stage.id ?? \
       new_stage.type) !== (current_stage.id ?? current_stage.type)\n\
       \t\t// console.log(new_stage, current_stage, changed)\n\n\
       \t\tcurrent_stage = new_stage\n\
       \t\tcurrent_stage_idx = new_stage_idx\n\
       \t\t// completed = new_game_state.complete\n\
       \t\t// if (!state.complete) round_audio.play()\n\n\
       \t\tif (play_audio && !new_stage.no_sound && changed) {\n\
       \t\t\tif (current_stage.type === 'complete' || current_stage.type === \
       'contemplation') complete_audio.play()\n\
       \t\t\telse round_audio.play()\n\
       \t\t}\n\
       \t}\n\
       }\n\n\
       let timer: number | null | any // Timeout?\n\
       $: {\n\
       \t// Sadly we can't use internal_state here because it generates a \
       cyclic dependancy.\n\
       \tlet completed = current_stage ? current_stage.type === 'complete' : \
       false\n\
       \t// console.log('xx', state, timer, completed, current_stage)\n\n\
       \t// if (state !== 'loading') tick(false)\n\n\
       \tif (state === 'playing' && timer == null && !completed) {\n\
       \t\t// setTimeout needed to get around some weird race condition.\n\
       \t\t// There's probably better ways to structure this :/\n\
       \t\tsetTimeout(() => tick(false))\n\
       \t\ttimer = setInterval(() => {\n\
       \t\t\ttick(true)\n\
       \t\t}, 1000)\n\
       \t} else if ((completed || state !== 'playing') && timer != null) {\n\
       \t\tconsole.log('cancelled interval timer')\n\
       \t\tclearInterval(timer)\n\
       \t\ttimer = null\n\
       \t} else if (state === 'waiting' || state === 'paused') {\n\
       \t\tsetTimeout(() => tick(false))\n\
       \t}\n\
       }\n\n\
       let game_completed: boolean\n\
       $: {\n\
       \t// console.log('updating game_completed', current_stage)\n\
       \tgame_completed = (state !== 'playing' || current_stage == null) ? false\n\
       \t: (current_stage.type === 'complete')\n\
       }\n\n\
       let internal_state: GameConfig['state'] | 'completed'\n\
       $: internal_state = game_completed ? 'completed' : state\n\n\
       let bar_width = 0\n\
       $: bar_width = current_stage == null ? 0\n\
       \t: state === 'waiting' ? 0\n\
       \t: current_stage.type === 'complete' ? 100\n\
       \t: 100 * offset_sec / current_stage.duration\n\n\
       let stage_label: string\n\
       $: stage_label = internal_state === 'waiting' ? 'Waiting for game to \
       start'\n\
       \t: current_stage == null ? 'unknown' : current_stage.label\n\n\n\
       const progress_class = (stage_idx: number, baseline_idx: number): \
       's-done' | 's-active' | 's-waiting' => {\n\
       \tif (current_stage == null || baseline_idx < 0) return 's-waiting'\n\n\
       \treturn stage_idx < baseline_idx ? 's-done'\n\
       \t\t: stage_idx === baseline_idx ? 's-active'\n\
       \t\t: 's-waiting'\n\
       }\n\n\
       // const order = ['meditate', 'bead', 'complete']\n\
       // const class_for = (x: number): string => x < 0 ? 'done'\n\
       // \t: x > 0 ? 'waiting'\n\
       // \t: 'active'\n\n\
       // const progress_class = (stage: GameStage, type: string, r?: number, \
       p?: number): string => {\n\
       // \tif (stage == null) return ''\n\n\
       // \tconst current_o = order.indexOf(stage.type)\n\
       // \tconst element_o = order.indexOf(type)\n\n\
       // \t// const o_diff = element_o - current_o\n\
       // \treturn type === 'bead' && stage.type === 'bead'\n\
       // \t\t? (r === stage.r ? class_for(p - stage.p) : class_for(r - \
       stage.r))\n\
       // \t\t: class_for(element_o - current_o)\n\
       // }\n\n\
       // This will get more complex in time. For now, pause the game to fiddle.\n\
       $: settings_disabled = state === 'playing'\n\n\
       let config_open = false\n\n\
       $: if (_magister === true) config_open = true\n\n\
       // The first user has the config open by default.\n\
       // $: if (_active_sessions === 1) config_open = true\n\n\
       // The magister box is fully visible once there's a critical mass of \
       players in the room\n\
       $: magister_opaque = _magister === true || _active_sessions >= 6\n\n\
       </script>\n\n\
       <svelte:head>\n\
       \t{#if _magister}\n\
       \t\t<style>\n\
       body {\n\
       \tbackground-color: var(--bg-highlight);\n\
       }\n\
       \t\t</style>\n\
       \t{/if}\n\
       </svelte:head>\n\n\
       <!-- <main class:magister={_magister}> -->\n\
       <main>\n\
       \t<audio bind:this={round_audio} src=\"/lo-metal-tone.mp3\" \
       preload=\"auto\"><track kind=\"captions\"></audio>\n\
       \t<audio bind:this={complete_audio} src=\"/hi-metal-tone.mp3\" \
       preload=\"auto\"><track kind=\"captions\"></audio>\n\n\
       \t{#if internal_state === 'loading'}\n\
       \t\t<h1>Loading game state</h1>\n\
       \t{:else}\n\
       \t\t<!-- <h1>Glass Bead Game Timer</h1> -->\n\
       \t\t<!-- <h1>{topic}</h1> -->\n\n\
       \t\t<div id='topicimg' bind:this={topic_img}>{game_config.topic}</div>\n\n\
       \t\t<h1>{stage_label}</h1>\n\
       \t\t<div id='progresscontainer'>\n\
       \t\t\t<div id='progress_time'>{((internal_state === 'playing' || \
       internal_state === 'paused') && current_stage) ? current_stage.duration \
       - offset_sec : ''}</div>\n\
       \t\t\t<div id='progress' style='width: {bar_width}%'></div>\n\
       \t\t</div>\n\n\
       \t\t<div id='gameprogress'>\n\
       \t\t\t{#each game_stages as s, i}\n\
       \t\t\t\t{#if s.type === 'bead' || s.type === 'breath'}\n\
       \t\t\t\t\t<span class={'prog-' + s.type + ' ' + progress_class(i, \
       current_stage_idx)} style='width: {100 * s.duration / \
       inner_game_length}%'></span>\n\
       \t\t\t\t{/if}\n\
       \t\t\t{/each}\n\
       \t\t</div>\n\n\
       \t\t{#if (_magister == null || _magister == true)}\n\
       \t\t\t{#if internal_state == 'waiting'}\n\
       \t\t\t\t<button on:click={upd('state', 'playing')}>Start</button>\n\
       \t\t\t{:else if internal_state == 'playing'}\n\
       \t\t\t\t<button on:click={upd('state', 'paused')}>Pause</button>\n\
       \t\t\t{:else if internal_state == 'paused'}\n\
       \t\t\t\t<button on:click={upd('state', 'playing')}>Resume</button>\n\
       \t\t\t{/if}\n\
       \t\t{/if}\n\n\
       \t\t<div style='height: 400px;'></div>\n\n\
       \t\t<details>\n\
       \t\t\t<!-- I'm not ready to delete these UI elements but we might not \
       use them -->\n\
       \t\t\t<summary>Info</summary>\n\n\
       \t\t\t<h1>{game_config.topic}</h1>\n\
       \t\t\t<h4>Room: <em>{room}</em> <a href=\"../..\">(leave)</a></h4>\n\n\
       \t\t\t<div>\n\
       \t\t\t\t{state === 'waiting' ? 'Waiting for the game to start'\n\
       \t\t\t\t: state === 'paused' ? 'GAME PAUSED'\n\
       \t\t\t\t: state === 'playing' ? 'Game in progress'\n\
       \t\t\t\t: ''}\n\
       \t\t\t</div>\n\
       \t\t\t{#if connection !== 'connected'}\n\
       \t\t\t\t<div>DISCONNECTED FROM GAME SERVER</div>\n\
       \t\t\t{:else}\n\
       \t\t\t\t{#if _active_sessions == 1}\n\
       \t\t\t\t\t<div>You are alone in the room</div>\n\
       \t\t\t\t{:else}\n\
       \t\t\t\t\t<div>{_active_sessions} players are in this room</div>\n\
       \t\t\t\t{/if}\n\
       \t\t\t{/if}\n\n\
       \t\t\t<div id='rounds'>\n\
       \t\t\t\t<h2>Game</h2>\n\
       \t\t\t\t{#if game_config.meditate}\n\
       \t\t\t\t\t<div>\n\
       \t\t\t\t\t\t<!-- <span class={progress_class(current_stage, \
       'meditate')}>Meditation (1 min)</span> -->\n\
       \t\t\t\t\t\t<span>Meditation (1 min)</span>\n\
       \t\t\t\t\t</div>\n\
       \t\t\t\t{/if}\n\
       \t\t\t\t{#each Array(Math.max(game_config.rounds, 0)) as _, r}\n\
       \t\t\t\t\t<div>Round {r+1}:\n\
       \t\t\t\t\t\t{#each Array(Math.max(game_config.players, 0)) as _, p}\n\
       \t\t\t\t\t\t\t<!-- <span class={'bead ' + progress_class(current_stage, \
       'bead', r, p)}>{p+1} </span> -->\n\
       \t\t\t\t\t\t\t<span>{p+1} </span>\n\
       \t\t\t\t\t\t{/each}\n\
       \t\t\t\t\t</div>\n\
       \t\t\t\t{/each}\n\
       \t\t\t</div>\n\n\
       \t\t</details>\n\n\
       \t\t{#if _magister == null || _magister == true}\n\
       \t\t\t<details class='config' bind:open={config_open}>\n\
       \t\t\t\t<summary>Game controls</summary>\n\n\
       \t\t\t\t<p>\n\
       \t\t\t\t\t{#if _magister == null}\n\
       \t\t\t\t\t\tThis will effect all players. Will you borrow power? Will \
       you steal it?\n\
       \t\t\t\t\t{:else}\n\
       \t\t\t\t\t\tYou are master of the games. These controls are yours alone.\n\
       \t\t\t\t\t{/if}\n\
       \t\t\t\t</p>\n\n\
       \t\t\t\t{#if internal_state == 'waiting'}\n\
       \t\t\t\t\t<button on:click={upd('state', 'playing')}>Start</button>\n\
       \t\t\t\t{:else if internal_state == 'playing'}\n\
       \t\t\t\t\t<button on:click={upd('state', 'paused')}>Pause</button>\n\
       \t\t\t\t{:else if internal_state == 'paused'}\n\
       \t\t\t\t\t<button on:click={upd('state', 'playing')}>Resume</button>\n\
       \t\t\t\t{/if}\n\n\
       \t\t\t\t{#if internal_state == 'paused' || internal_state == \
       'completed' }\n\
       \t\t\t\t\t<button on:click={upd('state', 'waiting')}>Restart \
       game</button>\n\
       \t\t\t\t{/if}\n\n\
       \t\t\t\t<label>\n\
       \t\t\t\t\t<span>Topic</span>\n\
       \t\t\t\t\t<input disabled={settings_disabled} type='text' \
       value={game_config.topic} on:input={config('topic')} list='archetopics' \
       >\n\
       \t\t\t\t\t<datalist id='archetopics'>\n\
       \t\t\t\t\t\t{#each ARCHETOPICS as topic}\n\
       \t\t\t\t\t\t\t<option value={topic}>\n\
       \t\t\t\t\t\t{/each}\n\
       \t\t\t\t\t</datalist>\n\
       \t\t\t\t</label>\n\n\
       \t\t\t\t<label>\n\
       \t\t\t\t\t<span>Pre-game meditation</span>\n\
       \t\t\t\t\t<input disabled={settings_disabled} type='checkbox' \
       checked={game_config.meditate} on:input={config('meditate')} >\n\
       \t\t\t\t</label>\n\n\
       \t\t\t\t<label>\n\
       \t\t\t\t\t<span>Post game contemplation</span>\n\
       \t\t\t\t\t<input disabled={settings_disabled} type='checkbox' \
       checked={game_config.contemplation} on:input={config('contemplation')} >\n\
       \t\t\t\t</label>\n\n\
       \t\t\t\t<label>\n\
       \t\t\t\t\t<span>Number of players</span>\n\
       \t\t\t\t\t<input disabled={settings_disabled} type='number' \
       pattern='[0-9]*' value={game_config.players} \
       on:input={config('players')} min=1 max=12 >\n\
       \t\t\t\t</label>\n\n\
       \t\t\t\t<label>\n\
       \t\t\t\t\t<span>Number of rounds</span>\n\
       \t\t\t\t\t<input disabled={settings_disabled} type='number' \
       pattern='[0-9]*' value={game_config.rounds} on:input={config('rounds')} \
       min=1 max=20>\n\
       \t\t\t\t</label>\n\n\
       \t\t\t\t<label>\n\
       \t\t\t\t\t<span>Seconds per bead</span>\n\
       \t\t\t\t\t<input disabled={settings_disabled} type='number' \
       pattern='[0-9]*' value={game_config.seconds_per_bead} \
       on:input={config('seconds_per_bead')}>\n\
       \t\t\t\t</label>\n\n\
       \t\t\t\t<label>\n\
       \t\t\t\t\t<span>Seconds between beads</span>\n\
       \t\t\t\t\t<input disabled={settings_disabled} type='number' \
       pattern='[0-9]*' value={game_config.seconds_between_bead} \
       on:input={config('seconds_between_bead')}>\n\
       \t\t\t\t</label>\n\n\
       \t\t\t\t<div style='margin-top: 1em;'>\n\
       \t\t\t\t\t(Total game length: {roundish(\n\
       \t\t\t\t\t\tgame_stages.reduce((x, s) => x + s.duration, 0) / 60\n\
       \t\t\t\t\t)} minutes)\n\
       \t\t\t\t</div>\n\n\
       \t\t\t\t<div id='magister_box' class:magister_opaque>\n\
       \t\t\t\t\t{#if _magister == null}\n\
       \t\t\t\t\t\t<button on:click={upd('_magister', true)}>Assume the mantle \
       of Magister Ludi</button>\n\
       \t\t\t\t\t\t<p><i>Advanced - for large games</i></p>\n\
       \t\t\t\t\t\t<p>When present, the Magister Ludi (master of the games) \
       has exclusive control of the game.</p>\n\
       \t\t\t\t\t{:else if _magister == true}\n\
       \t\t\t\t\t\t<button on:click={upd('_magister', null)}>Abdicate Magister \
       Ludi status</button>\n\
       \t\t\t\t\t\t<p>You are the master of the games. You have exclusive \
       control over playing, pausing and configuring this game.</p>\n\
       \t\t\t\t\t\t<p>Do not close this browser window or you will be \
       dethroned.</p>\n\
       \t\t\t\t\t{/if}\n\
       \t\t\t\t</div>\n\
       \t\t\t</details>\n\
       \t\t{:else}\n\
       \t\t\t<p class='config'>Magister Ludi is managing this game.</p>\n\
       \t\t{/if}\n\
       \t{/if}\n\
       </main>\n\n\
       <style>\n\n\
       main {\n\
       \t/* margin-bottom: 3em; */\n\
       \ttext-align: center;\n\
       }\n\n\
       #topicimg {\n\
       \twidth: 300px;\n\
       \tdisplay: inline-block;\n\
       }\n\n\
       /* .magister {\n\
       \tbackground-color: var(--bg-highlight);\n\
       } */\n\n\
       h1 {\n\
       \tmargin-top: 1em;\n\
       }\n\n\
       #progresscontainer {\n\
       \t/* width: calc(100% - 50px); */\n\
       \tposition: relative;\n\
       \tmargin: 10px 25px;\n\
       \theight: 5em;\n\
       \tborder: 2px solid var(--fg-color);\n\
       \t/* margin-bottom: 0; */\n\
       }\n\n\
       #progress_time {\n\
       \tposition: absolute;\n\
       \t/* color: red; */\n\
       \t/* font-size: var(--bg-color); */\n\
       \tcolor: white;\n\
       \t/* color: white; */\n\
       \tfont-size: 54px;\n\
       \tmargin-left: 5px;\n\
       \tmix-blend-mode: difference;\n\
       }\n\n\
       #progress {\n\
       \tbackground-color: var(--fg-color);\n\
       \t/* width: 50%; */\n\
       \theight: 100%;\n\
       \t/* transition: width 1s linear; */\n\
       }\n\n\
       #gameprogress {\n\
       \t/* width: 300px; */\n\
       \tmargin: 25px;\n\
       \theight: 15px;\n\
       \t/* background-color: blue; */\n\
       \tmargin-top: 0;\n\
       }\n\n\
       #gameprogress > span {\n\
       \tdisplay: inline-block;\n\
       \t/* height: 10px; */\n\
       \tbackground-color: var(--fg-color);\n\
       \t/* border-left: 1px solid var(--bg-color);\n\
       \tborder-right: 1px solid var(--bg-color); */\n\
       }\n\n\
       /* .prog-waiting {\n\
       \theight: 100%;\n\
       } */\n\
       /* .prog-meditate, .prog-contemplation {\n\
       \theight: 50%;\n\
       } */\n\
       .prog-bead {\n\
       \theight: 100%;\n\
       }\n\
       /* .prog-breath {\n\
       } */\n\n\
       .s-done {\n\
       \topacity: 20%;\n\
       }\n\
       /* .s-active {\n\n\
       } */\n\
       .s-waiting {\n\
       \topacity: 50%;\n" );
    ( 2254,
      84,
      "\t\t\t\tlabel: '',\n\
       \t\t\t\t// label: game_config.players > 1 ? `Round ${r+1} player \
       ${p+1}` : `Round ${r+1}`,\n" );
    (2266, 0, " ");
    (2266, 1, "");
    (2266, 0, "x");
    (16890, 0, "\n\t");
    (16892, 0, "m");
    (16893, 0, "i");
    (16894, 0, "n");
    (16895, 0, "-");
    (16896, 0, "w");
    (16897, 0, "i");
    (16898, 0, "d");
    (16899, 0, "t");
    (16900, 0, "h");
    (16901, 0, ":");
    (16902, 0, " ");
    (16896, 5, "h");
    (16897, 0, "e");
    (16898, 0, "i");
    (16899, 0, "g");
    (16900, 0, "h");
    (16901, 0, "t");
    (16904, 0, "1");
    (16905, 0, ".");
    (16906, 0, "2");
    (16907, 0, "5");
    (16908, 0, "e");
    (16909, 0, "m");
    (16910, 0, ";");
    (2266, 1, "");
    (11816, 0, " -->");
    (11514, 0, "<!-- ");
    (11821, 4, "");
    (11514, 5, "");
    (16889, 21, "");
    (9652, 0, " ");
    (9653, 0, "i");
    (9654, 0, "d");
    (9655, 0, "=");
    (9656, 0, "'");
    (9657, 0, "s");
    (9658, 0, "t");
    (9659, 0, "a");
    (9660, 0, "g");
    (9661, 0, "e");
    (9662, 0, "l");
    (9663, 0, "a");
    (9664, 0, "b");
    (9665, 0, "e");
    (9666, 0, "l");
    (9667, 0, "'");
    (15345, 0, "\n");
    (15346, 0, "\n");
    (15347, 0, "#");
    (15348, 0, "s");
    (15349, 0, "t");
    (15350, 0, "a");
    (15351, 0, "g");
    (15352, 0, "e");
    (15353, 0, "l");
    (15354, 0, "a");
    (15355, 0, "b");
    (15356, 0, "e");
    (15357, 0, "l");
    (15358, 0, " ");
    (15359, 0, "{");
    (15360, 0, "\n\t");
    (15361, 1, "}");
    (15360, 0, "\n\t");
    (15362, 0, "m");
    (15363, 0, "i");
    (15364, 0, "n");
    (15365, 0, "-");
    (15366, 0, "h");
    (15367, 0, "e");
    (15368, 0, "i");
    (15369, 0, "g");
    (15370, 0, "h");
    (15371, 0, "t");
    (15372, 0, ":");
    (15373, 0, " ");
    (15374, 0, "1");
    (15375, 0, "e");
    (15376, 0, "m");
    (15377, 0, ";");
    (15362, 4, "");
    (15370, 1, "");
    (15370, 0, "2");
    (15326, 17, "");
    (15344, 0, "\tmargin-top: 1em;");
    (15361, 0, "\n\t");
    (15363, 1, "");
    (15363, 0, "\t");
    (15361, 2, "");
    (15344, 17, "");
    (15326, 0, "\tmargin-top: 1em;");
    (15370, 1, "");
    (15370, 0, ".");
    (15371, 0, "1");
    (15371, 1, "");
    (15370, 1, "");
    (15370, 0, "1");
    (15371, 0, ".");
    (15372, 0, "5");
    (15215, 0, " ");
    (15216, 0, ">");
    (15217, 0, " ");
    (15218, 0, "s");
    (15219, 0, "v");
    (15220, 0, "g");
    (15216, 1, "");
    (15215, 1, "");
    (15215, 0, " ");
    (15216, 0, ">");
    (15215, 7, "");
    (15215, 0, " ");
    (15216, 0, ":");
    (15217, 0, "g");
    (15218, 0, "l");
    (15219, 0, "o");
    (15220, 0, "b");
    (15221, 0, "a");
    (15222, 0, "l");
    (15223, 0, "(");
    (15224, 0, "s");
    (15225, 0, "v");
    (15226, 0, "g");
    (15227, 0, ")");
    (15228, 0, " ");
    (15215, 0, " ");
    (15216, 0, ">");
    (11288, 555, "");
    (11287, 1, "");
    (11286, 1, "");
    (148, 1, "");
    (148, 0, "I");
    (149, 0, "c");
    (150, 0, "o");
    (151, 0, "n");
    (152, 0, "s");
    (152, 1, "");
    (151, 1, "");
    (150, 1, "");
    (149, 1, "");
    (148, 1, "");
    (148, 0, "i");
    (149, 0, "c");
    (150, 0, "o");
    (151, 0, "n");
    (152, 0, "s");
    (112, 0, "import * as topicIcons from './topicicons.json'\n");
    (177, 5, "S");
    (178, 0, "p");
    (179, 0, "e");
    (180, 0, "c");
    (181, 0, "i");
    (182, 0, "a");
    (183, 0, "l");
    (198, 5, "s");
    (199, 0, "p");
    (200, 0, "e");
    (201, 0, "c");
    (202, 0, "i");
    (203, 0, "a");
    (204, 0, "l");
    (1410, 0, "\n\t\t");
    (1413, 0, "\n\t\t");
    (1411, 2, "");
    (1412, 2, "");
    (1411, 0, "\t\t");
    (1413, 0, "e");
    (1414, 0, "l");
    (1415, 0, "s");
    (1416, 0, "e");
    (1417, 0, " ");
    (1418, 0, "{");
    (1419, 0, "\n\t\t\t");
    (1423, 0, "\n\t\t\t");
    (1420, 3, "");
    (1421, 3, "\t\t}");
    (1424, 1, "");
    (1420, 0, "\t\t\t");
    (1423, 0, "c");
    (1424, 0, "o");
    (1425, 0, "n");
    (1426, 0, "s");
    (1427, 0, "t");
    (1428, 0, " ");
    (1429, 0, "t");
    (1430, 0, "e");
    (1431, 0, "x");
    (1432, 0, "t");
    (1433, 0, "C");
    (1434, 0, "o");
    (1435, 0, "n");
    (1436, 0, "t");
    (1437, 0, "e");
    (1438, 0, "n");
    (1439, 0, "t");
    (1440, 0, " ");
    (1441, 0, "=");
    (1442, 0, " ");
    (1443, 0, "t");
    (1444, 0, "o");
    (1445, 0, "p");
    (1446, 0, "i");
    (1447, 0, "c");
    (1448, 0, "S");
    (1449, 0, "p");
    (1443, 7, "topicSpecial");
    (1455, 0, "[");
    (1294, 37, "");
    (1261, 0, "\n\t\t");
    (1264, 0, "c");
    (1265, 0, "o");
    (1266, 0, "n");
    (1267, 0, "s");
    (1268, 0, "t");
    (1269, 0, " ");
    (1270, 0, "t");
    (1271, 0, "o");
    (1272, 0, "p");
    (1273, 0, "i");
    (1274, 0, "c");
    (1275, 0, " ");
    (1276, 0, "=");
    (1277, 0, " ");
    (1278, 0, "game_config.topic.toLocaleLowerCase()");
    (1348, 0, "t");
    (1349, 0, "o");
    (1350, 0, "p");
    (1351, 0, "i");
    (1352, 0, "c");
    (1478, 0, "t");
    (1479, 0, "o");
    (1480, 0, "p");
    (1481, 0, "i");
    (1482, 0, "c");
    (1483, 0, " ");
    (1483, 1, "");
    (1483, 0, "]");
    (1483, 0, " as keyof typeof topicIcons");
    (1500, 10, "t");
    (1501, 0, "o");
    (1502, 0, "p");
    (1503, 0, "i");
    (1504, 0, "c");
    (1505, 0, "S");
    (1506, 0, "p");
    (1500, 7, "topicSpecial");
    (1513, 0, "\n\t\t\t");
    (1517, 0, "i");
    (1518, 0, "f");
    (1519, 0, " ");
    (1520, 0, "(");
    (1521, 0, "t");
    (1522, 0, "e");
    (1523, 0, "x");
    (1524, 0, "t");
    (1525, 0, "C");
    (1526, 0, "o");
    (1527, 0, "n");
    (1521, 7, "textContent");
    (1532, 0, ")");
    (1533, 0, " ");
    (1534, 0, "t");
    (1535, 0, "o");
    (1536, 0, "p");
    (1537, 0, "i");
    (1538, 0, "c");
    (1539, 0, "_");
    (1540, 0, "i");
    (1541, 0, "m");
    (1534, 8, "topic_img");
    (1543, 0, ".");
    (1544, 0, "i");
    (1545, 0, "n");
    (1546, 0, "n");
    (1547, 0, "e");
    (1548, 0, "r");
    (1544, 5, "innerText");
    (1553, 0, " ");
    (1554, 0, "=");
    (1555, 0, " ");
    (1556, 0, "t");
    (1557, 0, "e");
    (1558, 0, "x");
    (1559, 0, "t");
    (1560, 0, "C");
    (1561, 0, "o");
    (1562, 0, "n");
    (1563, 0, "t");
    (1564, 0, "e");
    (1556, 9, "textContent");
    (9812, 1, "");
    (9811, 1, "");
    (9810, 1, "");
    (14871, 1, "");
    (14870, 1, "");
    (14869, 1, "");
    (9831, 1, "");
    (9829, 1, "ele");
    (1542, 1, "");
    (1540, 1, "ele");
    (1408, 1, "");
    (1406, 1, "ele");
    (1257, 1, "");
    (1255, 1, "ele");
    (818, 1, "");
    (816, 1, "ele");
    (9839, 0, "\n\t\t\t");
    (9862, 0, "\n\t\t");
    (9839, 0, "\n\t\t\t");
    (9843, 0, "<");
    (9844, 0, "d");
    (9845, 0, "i");
    (9846, 0, "v");
    (9847, 0, " ");
    (9848, 0, "i");
    (9849, 0, "d");
    (9850, 0, "=");
    (9851, 0, "\"");
    (9852, 0, "t");
    (9853, 0, "o");
    (9854, 0, "p");
    (9855, 0, "i");
    (9856, 0, "c");
    (9857, 0, "'");
    (9851, 0, "'");
    (9852, 6, "");
    (9852, 0, "t");
    (9853, 0, "o");
    (9854, 0, "p");
    (9855, 0, "i");
    (9856, 0, "c");
    (9857, 0, "i");
    (9858, 0, "m");
    (9859, 0, "g");
    (9815, 23, "");
    (9838, 0, " bind:this={topic_elem}");
    (9859, 1, "");
    (9858, 1, "");
    (9857, 1, "");
    (9856, 1, "");
    (9856, 0, "i");
    (9857, 0, "m");
    (9858, 0, "g");
    (9860, 0, ">");
    (9861, 0, "</div>");
    (9890, 0, "\n\t\t\t<div id='topicimg' bind:this={topic_img}></div>");
    (9817, 51, "");
    (806, 0, "let topic_elem: HTMLElement\n");
    (819, 1, "");
    (818, 1, "");
    (817, 1, "");
    (816, 1, "");
    (816, 0, "i");
    (817, 0, "m");
    (818, 0, "g");
    (843, 4, "t");
    (844, 0, "e");
    (845, 0, "x");
    (846, 0, "t");
    (1286, 1, "");
    (1285, 1, "");
    (1284, 1, "");
    (1283, 1, "");
    (1283, 0, "m");
    (1283, 1, "");
    (1283, 0, "i");
    (1284, 0, "m");
    (1285, 0, "g");
    (1286, 0, " ");
    (1287, 0, "&");
    (1288, 0, " ");
    (1288, 1, "");
    (1288, 0, "&");
    (1289, 0, " ");
    (1290, 0, "t");
    (1291, 0, "o");
    (1292, 0, "p");
    (1293, 0, "i");
    (1294, 0, "c");
    (1295, 0, "_");
    (1296, 0, "t");
    (1297, 0, "e");
    (1298, 0, "x");
    (1299, 0, "t");
    (1451, 1, "");
    (1450, 1, "");
    (1449, 1, "");
    (1448, 1, "");
    (1448, 0, "i");
    (1449, 0, "m");
    (1450, 0, "g");
    (1582, 4, "t");
    (1583, 0, "e");
    (1584, 0, "x");
    (1585, 0, "t");
    (9879, 0, "\t\t\t<div id='topicimg' bind:this={topic_img}></div>\n");
    (9971, 1, "");
    (9970, 1, "");
    (9969, 1, "");
    (9969, 0, "t");
    (9970, 0, "e");
    (9971, 0, "x");
    (9972, 0, "t");
    (9949, 1, "");
    (9948, 1, "");
    (9947, 1, "");
    (9947, 0, "t");
    (9948, 0, "e");
    (9949, 0, "x");
    (9950, 0, "t");
    (15001, 15, "i");
    (15002, 0, "m");
    (15003, 0, "g");
    (14995, 0, "#topicimg {\n\twidth: 300px;\n\tdisplay: inline-block;\n}\n");
    (15056, 1, "");
    (15055, 1, "");
    (15054, 1, "");
    (15054, 0, "t");
    (15055, 0, "e");
    (15056, 0, "x");
    (15057, 0, "t");
    (15062, 13, "");
    (15062, 0, "p");
    (15063, 0, "a");
    (15064, 0, "d");
    (15065, 0, "d");
    (15066, 0, "i");
    (15067, 0, "n");
    (15068, 0, "g");
    (15069, 0, ":");
    (15070, 0, " ");
    (15071, 0, "2");
    (15072, 0, "e");
    (15073, 0, "m");
    (15074, 0, ";");
    (15076, 23, "");
    (15075, 1, "");
    (15075, 0, "\n\t");
    (15077, 0, "f");
    (15078, 0, "o");
    (15079, 0, "n");
    (15080, 0, "t");
    (15081, 0, "-");
    (15082, 0, "s");
    (15083, 0, "t");
    (15084, 0, "y");
    (15085, 0, "l");
    (15086, 0, "e");
    (15087, 0, ":");
    (15088, 0, " ");
    (15089, 0, "i");
    (15090, 0, "t");
    (15089, 2, "italic");
    (15095, 0, ";");
    (9856, 22, "");
    (9855, 1, "");
    (1555, 0, "\n\t\telse {");
    (1484, 3, "\t\t");
    (1475, 9, "");
    (1545, 0, "\n\t\tif (svgContent) topic_img.innerHTML = svgContent");
    (1424, 51, "");
    ( 1494,
      0,
      "\n\t\tconst svgContent = topicIcons[topic as keyof typeof topicIcons]" );
    (1358, 66, "");
    (1428, 66, "");
    ( 1358,
      0,
      "\t\tconst svgContent = topicIcons[topic as keyof typeof topicIcons]\n" );
    (1494, 0, "\n\t\t");
    (1556, 0, "i");
    (1495, 2, "");
    (1554, 1, "");
    (1554, 5, "");
    (1605, 0, "\n\t\t");
    (1608, 0, "e");
    (1609, 0, "l");
    (1610, 0, "s");
    (1611, 0, "e");
    (1612, 0, " ");
    (1613, 0, "\t\t\t{game_config.topic}");
    (1616, 1, "");
    (1615, 1, "");
    (1614, 1, "");
    (1613, 1, "");
    (1613, 0, "t");
    (1614, 0, "o");
    (1615, 0, "p");
    (1616, 0, "i");
    (1617, 0, "c");
    (1618, 0, "_");
    (1619, 0, "t");
    (1620, 0, "e");
    (1621, 0, "x");
    (1622, 0, "t");
    (1623, 0, " ");
    (1624, 0, "=");
    (1625, 0, " ");
    (1643, 1, "");
    (1644, 3, "");
    (1643, 1, "");
    (1623, 0, ".");
    (1624, 0, "i");
    (1625, 0, "n");
    (1626, 0, "n");
    (1627, 0, "e");
    (1628, 0, "r");
    (1624, 5, "innerText");
    (1514, 0, "{");
    (1515, 0, "\n\t\t\t");
    (1551, 0, "\n\t\t\t");
    (1555, 0, "topic_text.innerText = ");
    (1578, 0, "'");
    (1579, 0, "'");
    (1580, 0, "\n\t\t\t");
    (1581, 3, "\t\t}");
    (1581, 62, "\t\t} else if (textContent) topic_text.innerText = textContent");
    (1607, 0, "{");
    (1608, 0, "\n\t\t\t");
    (1516, 0, "\t\t\ttopic_img.innerHTML = svgContent\n");
    (1587, 29, "");
    (1552, 0, "\t\t\ttopic_text.innerText = ''\n");
    (1616, 28, "");
    (1581, 0, "\t\t} else if (textContent) {\n");
    (1634, 10, "");
    (1634, 0, "'");
    (1635, 0, "'");
    (1674, 0, "\n\t\t\t");
    (1675, 3, "\t\t}");
    (1675, 51, "\t\t} else topic_text.innerText = game_config.topic");
    (1684, 0, "{");
    (1685, 0, "\n\t\t\t");
    (1729, 0, "\n\t\t\t");
    (1730, 3, "\t\t}");
    (1609, 0, "\t\t\ttopic_img.innerHTML = ''\n");
    (1664, 38, "");
    (1637, 0, "\t\t\ttopic_text.innerText = textContent\n");
    (1702, 11, "");
    (1675, 0, "\t\t} else {\n");
    (15195, 1, "");
    (15195, 0, "5");
    (15199, 0, "\n\t");
    (15201, 0, "f");
    (15202, 0, "o");
    (15203, 0, "n");
    (15204, 0, "t");
    (15201, 4, "t");
    (15202, 0, "e");
    (15203, 0, "x");
    (15204, 0, "t");
    (15205, 0, "-");
    (15206, 0, "s");
    (15207, 0, "i");
    (15208, 0, "z");
    (15209, 0, "e");
    (15210, 0, ":");
    (15211, 0, " ");
    (15201, 11, "f");
    (15202, 0, "o");
    (15203, 0, "n");
    (15204, 0, "t");
    (15205, 0, "-");
    (15206, 0, "s");
    (15207, 0, "i");
    (15208, 0, "z");
    (15209, 0, "e");
    (15201, 9, "font-size: ;");
    (15212, 0, "1");
    (15213, 0, "4");
    (15214, 0, "0");
    (15215, 0, "%");
    (15213, 1, "");
    (15213, 0, "3");
    (15195, 1, "");
    (15195, 0, "4");
    (191, 19, "./topicspecial");
    (1261, 0, "\n");
    (1262, 0, "c");
    (1263, 0, "o");
    (1264, 0, "n");
    (1265, 0, "s");
    (1266, 0, "t");
    (1267, 0, " ");
    (1268, 0, "r");
    (1269, 0, "a");
    (1270, 0, "n");
    (1271, 0, "d");
    (1272, 0, "I");
    (1273, 0, "t");
    (1274, 0, "e");
    (1275, 0, "m");
    (1276, 0, " ");
    (1277, 0, "=");
    (1278, 0, " ");
    (1279, 0, "(");
    (1279, 1, "");
    (1279, 0, "<");
    (1280, 0, "T");
    (1281, 0, ">");
    (1282, 0, "(");
    (1283, 0, "a");
    (1284, 0, "r");
    (1285, 0, "r");
    (1286, 0, ":");
    (1287, 0, " ");
    (1288, 0, "T");
    (1289, 0, "[");
    (1290, 0, "]");
    (1291, 0, ")");
    (1292, 0, ":");
    (1293, 0, " ");
    (1293, 1, "");
    (1292, 1, "");
    (1292, 0, " ");
    (1293, 0, "=");
    (1294, 0, ">");
    (1295, 0, " ");
    (1296, 0, "t");
    (1297, 0, "[");
    (1298, 0, "t");
    (1299, 0, ".");
    (1299, 1, "");
    (1298, 1, "");
    (1261, 0, "\n");
    (1262, 0, "c");
    (1263, 0, "o");
    (1264, 0, "n");
    (1265, 0, "s");
    (1266, 0, "t");
    (1267, 0, " ");
    (1268, 0, "r");
    (1269, 0, "a");
    (1270, 0, "n");
    (1271, 0, "d");
    (1272, 0, "I");
    (1273, 0, "n");
    (1274, 0, "t");
    (1275, 0, " ");
    (1276, 0, "=");
    (1277, 0, " ");
    (1278, 0, "(");
    (1279, 0, "n");
    (1280, 0, ":");
    (1281, 0, " ");
    (1282, 0, "n");
    (1283, 0, "u");
    (1284, 0, "m");
    (1285, 0, "b");
    (1286, 0, "e");
    (1287, 0, "r");
    (1288, 0, ")");
    (1289, 0, " ");
    (1289, 1, "");
    (1289, 0, ":");
    (1290, 0, " ");
    (1290, 1, "");
    (1289, 1, "");
    (1289, 0, " ");
    (1290, 0, "=");
    (1291, 0, ">");
    (1292, 0, " ");
    (1293, 0, "M");
    (1294, 0, "a");
    (1295, 0, "t");
    (1296, 0, "h");
    (1293, 4, "Math");
    (1297, 0, ".");
    (1298, 0, "r");
    (1299, 0, "a");
    (1300, 0, "n");
    (1301, 0, "d");
    (1302, 0, "o");
    (1303, 0, "m");
    (1298, 6, "random");
    (1304, 0, "(");
    (1305, 0, ")");
    (1306, 0, " ");
    (1307, 0, "*");
    (1308, 0, " ");
    (1309, 0, "n");
    (1293, 0, "M");
    (1294, 0, "a");
    (1295, 0, "t");
    (1296, 0, "h");
    (1297, 0, ".");
    (1298, 0, "f");
    (1299, 0, "l");
    (1300, 0, "o");
    (1301, 0, "o");
    (1302, 0, "r");
    (1298, 5, "floor");
    (1303, 0, "(");
    (1321, 0, ")");
    (1359, 0, "r");
    (1360, 0, "a");
    (1361, 0, "n");
    (1362, 0, "d");
    (1363, 0, "I");
    (1364, 0, "n");
    (1365, 0, "t");
    (1366, 0, "(");
    (1367, 0, "a");
    (1368, 0, "r");
    (1369, 0, "r");
    (1370, 0, ".");
    (1371, 0, "l");
    (1372, 0, "e");
    (1373, 0, "n");
    (1374, 0, "g");
    (1375, 0, "t");
    (1376, 0, "h");
    (1377, 0, ")");
    (1378, 0, "]");
    (1379, 0, "\n\t");
    (1380, 1, "");
    (1323, 0, ";");
    (1323, 1, "");
    (1340, 3, "");
    (1337, 0, "<T>");
    (1337, 3, "");
    (1346, 1, "");
    (1346, 0, "a");
    (1347, 0, "m");
    (1347, 1, "");
    (1346, 1, "");
    (1346, 0, "T");
    (1323, 5, "f");
    (1324, 0, "u");
    (1325, 0, "n");
    (1326, 0, "c");
    (1327, 0, "t");
    (1328, 0, "i");
    (1329, 0, "o");
    (1330, 0, "n");
    (1340, 0, "<");
    (1341, 0, "T");
    (1342, 0, ">");
    (1343, 3, "");
    (1354, 2, "");
    (1354, 0, "{");
    (1355, 0, "r");
    (1356, 0, "e");
    (1357, 0, "t");
    (1358, 0, "u");
    (1359, 0, "r");
    (1360, 0, "n");
    (1384, 0, " ");
    (1385, 0, "}");
    (1362, 1, "");
    (1362, 0, "a");
    (1363, 0, "r");
    (1364, 0, "r");
    (1786, 0, "r");
    (1787, 0, "a");
    (1788, 0, "n");
    (1789, 0, "d");
    (1790, 0, "I");
    (1791, 0, "t");
    (1792, 0, "e");
    (1793, 0, "m");
    (1794, 0, "(");
    (1806, 0, ")");
    (171, 1, "");
    (170, 1, "");
    (169, 1, "");
    (168, 1, "");
    (167, 1, "");
    (9965, 0, "\n\t\t");
    (9966, 2, "");
    (9965, 0, "\n\t\t");
    (9967, 1, "");
    (9967, 0, "<");
    (9968, 0, "d");
    (9969, 0, "i");
    (9970, 0, "v");
    (9971, 0, ">");
    (9971, 0, " ");
    (9972, 0, "i");
    (9973, 0, "d");
    (9974, 0, "=");
    (9975, 0, "f");
    (9976, 0, "i");
    (9977, 0, "x");
    (9978, 0, "a");
    (9979, 0, "u");
    (9980, 0, "d");
    (9981, 0, "i");
    (9982, 0, "o");
    (9983, 0, "'");
    (9975, 0, "'");
    (9986, 0, "<");
    (9987, 0, "/");
    (9988, 0, "d");
    (9989, 0, "i");
    (9990, 0, "v");
    (9991, 0, ">");
    (9986, 0, "A");
    (9987, 0, "u");
    (9988, 0, "d");
    (9989, 0, "i");
    (9990, 0, "o");
    (9991, 0, " ");
    (9992, 0, "m");
    (9993, 0, "u");
    (9994, 0, "t");
    (9995, 0, "e");
    (9996, 0, "d");
    (9997, 0, ".");
    (9998, 0, " ");
    (9999, 0, "C");
    (10000, 0, "l");
    (10001, 0, "i");
    (10002, 0, "c");
    (10003, 0, "k");
    (10004, 0, " ");
    (10005, 0, "t");
    (10006, 0, "o");
    (10007, 0, " ");
    (10008, 0, "u");
    (10009, 0, "n");
    (10009, 1, "");
    (10008, 1, "");
    (10008, 0, "u");
    (10009, 0, "n");
    (10010, 0, "m");
    (10011, 0, "u");
    (10012, 0, "t");
    (10013, 0, "e");
    (15302, 0, "\n");
    (15302, 0, "\n");
    (15303, 0, "fixaudio");
    (15303, 0, "#");
    (15312, 0, " ");
    (15313, 0, "{");
    (15314, 0, "\n\t");
    (15316, 0, "\n\t");
    (15315, 1, "");
    (15316, 1, "}");
    (15315, 0, "\t");
    (15316, 0, "b");
    (15317, 0, "o");
    (15318, 0, "r");
    (15319, 0, "d");
    (15320, 0, "e");
    (15321, 0, "r");
    (15322, 0, ":");
    (15323, 0, " ");
    (15324, 0, "1");
    (15325, 0, "p");
    (15326, 0, "x");
    (15327, 0, " ");
    (15328, 0, "s");
    (15329, 0, "o");
    (15330, 0, "l");
    (15331, 0, "d");
    (15332, 0, "i");
    (15332, 1, "");
    (15331, 1, "");
    (15331, 0, "i");
    (15332, 0, "d");
    (15333, 0, " ");
    (15334, 0, "w");
    (15335, 0, "h");
    (15336, 0, "i");
    (15337, 0, "t");
    (15338, 0, "e");
    (15334, 5, "white");
    (15338, 1, "");
    (15338, 0, "e");
    (15339, 0, ";");
    (15340, 0, "\n\t");
    (15342, 0, "b");
    (15343, 0, "g");
    (15344, 0, "-");
    (15345, 0, "c");
    (15346, 0, "o");
    (15342, 5, "b");
    (15343, 0, "a");
    (15344, 0, "c");
    (15345, 0, "k");
    (15346, 0, "g");
    (15347, 0, "r");
    (15348, 0, "o");
    (15349, 0, "u");
    (15350, 0, "n");
    (15351, 0, "-");
    (15351, 1, "");
    (15351, 0, "d");
    (15352, 0, "0");
    (15352, 1, "");
    (15352, 0, "-");
    (15353, 0, "c");
    (15354, 0, "o");
    (15355, 0, "l");
    (15356, 0, "o");
    (15357, 0, "r");
    (15358, 0, ":");
    (15359, 0, " ");
    (15360, 0, "v");
    (15361, 0, "a");
    (15362, 0, "r");
    (15363, 0, "(");
    (15364, 0, "-");
    (15365, 0, "-");
    (15366, 0, "b");
    (15367, 0, "g");
    (15368, 0, "-");
    (15366, 3, "--bg-highlight");
    (15380, 0, ")");
    (15367, 1, "");
    (15366, 1, "");
    (15379, 0, ";");
    (15380, 0, "\n\t");
    (15382, 0, "p");
    (15383, 0, "o");
    (15384, 0, "s");
    (15385, 0, "i");
    (15386, 0, "t");
    (15387, 0, "i");
    (15388, 0, "o");
    (15389, 0, "n");
    (15390, 0, ":");
    (15391, 0, " ");
    (15392, 0, "f");
    (15393, 0, "i");
    (15394, 0, "x");
    (15395, 0, "e");
    (15396, 0, "d");
    (15397, 0, ";");
    (15398, 0, "\n\t");
    (15400, 0, "t");
    (15401, 0, "o");
    (15402, 0, "p");
    (15403, 0, ":");
    (15404, 0, " ");
    (15405, 0, "1");
    (15406, 0, "p");
    (15407, 0, "x");
    (15408, 0, ";");
    (15409, 0, "\n\t");
    (15411, 0, "w");
    (15412, 0, "i");
    (15413, 0, "d");
    (15414, 0, "t");
    (15415, 0, "h");
    (15416, 0, ":");
    (15417, 0, " ");
    (15418, 0, "3");
    (15419, 0, "0");
    (15420, 0, "0");
    (15421, 0, "p");
    (15422, 0, "x");
    (15423, 0, ";");
    (15424, 0, "\n\t");
    (15426, 0, "m");
    (15427, 0, "a");
    (15428, 0, "r");
    (15429, 0, "g");
    (15430, 0, "i");
    (15431, 0, "n");
    (15432, 0, ":");
    (15433, 0, " ");
    (15434, 0, "1");
    (15435, 0, "e");
    (15436, 0, "m");
    (15437, 0, " ");
    (15438, 0, "2");
    (15439, 0, "e");
    (15440, 0, "m");
    (15441, 0, ";");
    (15434, 1, "");
    (15434, 0, "3");
    (15426, 6, "p");
    (15427, 0, "a");
    (15428, 0, "d");
    (15429, 0, "d");
    (15430, 0, "i");
    (15431, 0, "n");
    (15432, 0, "g");
    (15435, 1, "");
    (15435, 0, "1");
    (15443, 0, "\n\t");
    (15445, 0, "l");
    (15446, 0, "e");
    (15447, 0, "f");
    (15448, 0, "t");
    (15449, 0, ":");
    (15450, 0, " ");
    (15451, 0, "5");
    (15452, 0, "0");
    (15453, 0, "%");
    (15454, 0, ";");
    (15455, 0, "\n\t");
    (15457, 0, "t");
    (15458, 0, "r");
    (15459, 0, "a");
    (15460, 0, "n");
    (15461, 0, "s");
    (15462, 0, "f");
    (15463, 0, "o");
    (15464, 0, "r");
    (15465, 0, "m");
    (15466, 0, ":");
    (15467, 0, " ");
    (15468, 0, "t");
    (15469, 0, "r");
    (15470, 0, "a");
    (15471, 0, "n");
    (15468, 4, "translateX()");
    (15479, 0, "-");
    (15480, 0, "5");
    (15481, 0, "0");
    (15482, 0, "%");
    (15484, 0, ";");
    (15485, 0, " */");
    (15457, 0, "/* ");
    (15488, 3, "");
    (15457, 3, "");
    (8534, 584, "");
    (8533, 1, "");
    (1895, 0, "\n");
    (1895, 0, "\n");
    (1895, 1, "");
    (1894, 1, "");
    (1256, 0, "\n");
    (1256, 0, "\n");
    ( 1257,
      0,
      "\n\
       +let audio_works = true\n\
       +\n\
       +function test_audio() {\n\
       +\tlet a = new Audio()\n\
       +\ta.volume = 0.1\n\
       +\ta.src = '/silence.mp3'\n\
       +\ta.play().then(\n\
       +\t\t() => {\n\
       +\t\t\taudio_works = true\n\
       +\t\t\tconsole.log('Audio works')\n\
       +\t\t},\n\
       +\t\t() => {\n\
       +\t\t\taudio_works = false\n\
       +\t\t\tconsole.log('Audio does not work')\n\
       +\t\t}\n\
       +\t)\n\
       +}\n\
       +function fix_audio(e) {\n\
       +\n\
       +// \tconsole.log('xx')\n\
       +\ttest_audio()\n\
       +}\n\
       +setTimeout(test_audio, 0)\n\
       +\n" );
    (1642, 1, "");
    (1615, 1, "");
    (1612, 1, "");
    (1597, 1, "");
    (1574, 1, "");
    (1572, 1, "");
    (1547, 1, "");
    (1544, 1, "");
    (1540, 1, "");
    (1535, 1, "");
    (1496, 1, "");
    (1472, 1, "");
    (1461, 1, "");
    (1455, 1, "");
    (1424, 1, "");
    (1401, 1, "");
    (1390, 1, "");
    (1373, 1, "");
    (1348, 1, "");
    (1331, 1, "");
    (1309, 1, "");
    (1284, 1, "");
    (1282, 1, "");
    (1258, 1, "");
    (1591, 0, "// ");
    (1577, 0, "// ");
    (1555, 0, "// ");
    (1530, 0, "// ");
    (9757, 0, "\n\t\t");
    (9760, 0, "{#if !audio_works}");
    (9758, 2, "\t");
    (9832, 0, "\n\t");
    (9834, 0, "{");
    (9835, 0, "/");
    (9836, 0, "i");
    (9837, 0, "f");
    (9838, 0, "}");
    (9779, 0, "\t");
    (9829, 3, "u");
    (9781, 3, "u");
    (9828, 0, "t");
    (9782, 0, "t");
    (9829, 1, "");
    (9782, 1, "");
    (9827, 1, "");
    (9781, 1, "");
    (9826, 0, "b");
    (9781, 0, "b");
    (9828, 0, "u");
    (9782, 0, "u");
    (9830, 0, "t");
    (9783, 0, "t");
    (9832, 0, "t");
    (9784, 0, "t");
    (9834, 0, "o");
    (9785, 0, "o");
    (9836, 0, "n");
    (9786, 0, "n");
    (15140, 0, "\n\t");
    (15142, 0, "c");
    (15143, 0, "o");
    (15144, 0, "l");
    (15145, 0, "o");
    (15146, 0, "r");
    (15147, 0, ":");
    (15148, 0, " ");
    (15149, 0, "v");
    (15150, 0, "a");
    (15151, 0, "r");
    (15152, 0, "(");
    (15153, 0, "-");
    (15154, 0, "-");
    (15155, 0, "f");
    (15156, 0, "g");
    (15155, 2, "--fg-color");
    (15165, 0, ")");
    (15156, 1, "");
    (15155, 1, "");
    (15164, 0, ";");
    (15191, 0, " */");
    (15167, 0, "/* ");
    (15166, 31, "");
    (15165, 1, "");
    (15205, 0, " */");
    (15167, 0, "/* ");
    (15208, 3, "");
    (15167, 3, "");
    (1530, 3, "");
    (1597, 3, "");
    (1549, 1, "");
    (9794, 0, " ");
    (9795, 0, "o");
    (9796, 0, "n");
    (9797, 0, "c");
    (9798, 0, "l");
    (9799, 0, "i");
    (9800, 0, "c");
    (9801, 0, "k");
    (9795, 7, "o");
    (9796, 0, "n");
    (9797, 0, ":");
    (9798, 0, "c");
    (9799, 0, "l");
    (9800, 0, "i");
    (9801, 0, "c");
    (9802, 0, "k");
    (9803, 0, "=");
    (9804, 0, "{");
    (9805, 0, "}");
    (9805, 0, "f");
    (9806, 0, "i");
    (9807, 0, "x");
    (9808, 0, "a");
    (9809, 0, "u");
    (9805, 5, "fix_audio");
    (1554, 3, "");
    (1554, 3, "");
    (1569, 1, "");
    (1568, 1, "");
    (1568, 0, "f");
    (1569, 0, "i");
    (1570, 0, "x");
    (1571, 0, "x");
    (1572, 0, "x");
    (1576, 3, "");
    (15148, 0, "\n\t");
    (15150, 0, "z");
    (15151, 0, "-");
    (15152, 0, "i");
    (15153, 0, "n");
    (15154, 0, "d");
    (15155, 0, "e");
    (15156, 0, "x");
    (15157, 0, ":");
    (15158, 0, " ");
    (15159, 0, "1");
    (15160, 0, ";");
    (15251, 1, "");
    (15251, 0, "2");
    (15281, 1, "");
    (15281, 0, "0");
    (15282, 0, ".");
    (15283, 0, "5");
    (15287, 1, "");
    (15287, 0, "1");
    (1681, 0, "\n");
    (1682, 0, "c");
    (1683, 0, "o");
    (1684, 0, "n");
    (1685, 0, "s");
    (1686, 0, "t");
    (1687, 0, " ");
    (1688, 0, "n");
    (1689, 0, " ");
    (1690, 0, "=");
    (1691, 0, " ");
    (1692, 0, "r");
    (1693, 0, "a");
    (1694, 0, "n");
    (1695, 0, "d");
    (1696, 0, "I");
    (1697, 0, "n");
    (1698, 0, "t");
    (1682, 17, "");
    (1681, 1, "");
    (1620, 0, "c");
    (1621, 0, "o");
    (1622, 0, "n");
    (1623, 0, "s");
    (1624, 0, "t");
    (1625, 0, " ");
    (1626, 0, "r");
    (1627, 0, "a");
    (1628, 0, "n");
    (1629, 0, "d");
    (1626, 4, "f");
    (1627, 0, "i");
    (1628, 0, "x");
    (1629, 0, "e");
    (1630, 0, "d");
    (1631, 0, "_");
    (1632, 0, "r");
    (1633, 0, "a");
    (1634, 0, "n");
    (1635, 0, "d");
    (1636, 0, " ");
    (1637, 0, "=");
    (1638, 0, " ");
    (1639, 0, "M");
    (1640, 0, "a");
    (1641, 0, "t");
    (1642, 0, "h");
    (1643, 0, ".");
    (1644, 0, "r");
    (1645, 0, "a");
    (1646, 0, "n");
    (1647, 0, "d");
    (1648, 0, "o");
    (1649, 0, "m");
    (1644, 6, "random");
    (1650, 0, "(");
    (1651, 0, ")");
    (1695, 13, "f");
    (1696, 0, "i");
    (1697, 0, "x");
    (1698, 0, "e");
    (1699, 0, "d");
    (1700, 0, "_");
    (1701, 0, "r");
    (1702, 0, "a");
    (1703, 0, "n");
    (1704, 0, "d");
    (15442, 1, "");
    (15442, 0, "2");
    (1344, 0, "// ");
    (15448, 0, " ");
    (15449, 0, "0");
    (1344, 3, "");
    (9633, 0, " ");
    (9634, 0, "a");
    (9635, 0, "u");
    (9636, 0, "t");
    (9637, 0, "p");
    (9638, 0, "p");
    (9639, 0, "l");
    (9639, 1, "");
    (9638, 1, "");
    (9637, 1, "");
    (9637, 0, "o");
    (9638, 0, "p");
    (9639, 0, "l");
    (9640, 0, "a");
    (9641, 0, "y");
    (9376, 0, "\n");
    (9377, 0, "\n");
    (9377, 0, "c");
    (9378, 0, "o");
    (9379, 0, "n");
    (9380, 0, "s");
    (9381, 0, "t");
    (9382, 0, " ");
    (9383, 0, "r");
    (9384, 0, "o");
    (9385, 0, "u");
    (9386, 0, "n");
    (9387, 0, "t");
    (9387, 1, "");
    (9377, 10, "");
    (9376, 1, "");
    (9375, 1, "");
    (9781, 0, " -->");
    (9563, 0, "<!-- ");
    (850, 0, "\n");
    (851, 0, "\n");
    ( 852,
      0,
      "\t<audio bind:this={round_audio} src=\"/lo-metal-tone.mp3\" \
       preload=\"auto\" autoplay><track kind=\"captions\"></audio>\n\
       \t<audio bind:this={complete_audio} src=\"/hi-metal-tone.mp3\" \
       preload=\"auto\"><track kind=\"captions\"></audio>\n" );
    (852, 1, "");
    (852, 18, "");
    (863, 0, " ");
    (864, 0, "=");
    (865, 0, " ");
    (866, 0, "n");
    (867, 0, "e");
    (868, 0, "w");
    (869, 0, " ");
    (870, 0, "A");
    (871, 0, "u");
    (872, 0, "d");
    (873, 0, "i");
    (874, 0, "o");
    (875, 0, "(");
    (876, 0, ")");
    (877, 0, "\n");
    (878, 0, "r");
    (879, 0, "o");
    (880, 0, "u");
    (881, 0, "n");
    (882, 0, "d");
    (883, 0, "_");
    (884, 0, "a");
    (885, 0, "u");
    (886, 0, "d");
    (887, 0, "i");
    (888, 0, "o");
    (878, 11, "round_audio");
    (889, 0, ".");
    (890, 0, "s");
    (891, 0, "r");
    (892, 0, "c");
    (893, 5, "");
    (893, 0, " ");
    (895, 0, " ");
    (916, 0, "\n");
    (917, 1, "\n");
    (917, 0, "r");
    (918, 0, "o");
    (919, 0, "u");
    (920, 0, "n");
    (921, 0, "d");
    (922, 0, "_");
    (923, 0, "a");
    (924, 0, "u");
    (925, 0, "d");
    (926, 0, "i");
    (927, 0, "o");
    (917, 11, "round_audio");
    (928, 0, ".");
    (929, 0, "p");
    (930, 0, "r");
    (931, 0, "e");
    (932, 0, "l");
    (929, 4, "preload");
    (936, 0, " ");
    (937, 0, "=");
    (938, 0, " ");
    (939, 0, "'");
    (940, 0, "a");
    (941, 0, "u");
    (942, 0, "t");
    (943, 0, "o");
    (944, 0, "'");
    (946, 56, "");
    (947, 0, "// ");
    (917, 0, "// ");
    ( 852,
      0,
      "round_audio = new Audio()\nround_audio.src = \"/lo-metal-tone.mp3\"\n" );
    (943, 11, "c");
    (917, 11, "c");
    (934, 0, "o");
    (918, 0, "o");
    (936, 0, "m");
    (919, 0, "m");
    (938, 0, "p");
    (920, 0, "p");
    (940, 0, "l");
    (921, 0, "l");
    (942, 0, "e");
    (922, 0, "e");
    (944, 0, "t");
    (923, 0, "t");
    (946, 0, "e");
    (924, 0, "e");
    (948, 0, "_");
    (925, 0, "_");
    (950, 0, "a");
    (926, 0, "a");
    (952, 0, "u");
    (927, 0, "u");
    (954, 0, "d");
    (928, 0, "d");
    (956, 0, "i");
    (929, 0, "i");
    (958, 0, "o");
    (930, 0, "o");
    (967, 20, "\"/hi-metal-tone.mp3\"");
    (1624, 0, "// ");
    (1608, 0, "// ");
    (1587, 0, "// ");
    (1671, 0, "\n\ta.play().then(");
    (1657, 0, "// ");
    (1676, 1, "");
    (1676, 0, "r");
    (1677, 0, "o");
    (1678, 0, "u");
    (1679, 0, "n");
    (1680, 0, "d");
    (1681, 0, "_");
    (1682, 0, "a");
    (1683, 0, "u");
    (1684, 0, "d");
    (1685, 0, "i");
    (1686, 0, "o");
    (1674, 0, "\n\t\t");
    (1677, 0, "r");
    (1678, 0, "o");
    (1679, 0, "u");
    (1680, 0, "n");
    (1681, 0, "d");
    (1682, 0, "_");
    (1683, 0, "a");
    (1684, 0, "u");
    (1685, 0, "d");
    (1686, 0, "i");
    (1687, 0, "o");
    (1677, 11, "round_audio");
    (1688, 0, ".");
    (1689, 0, "v");
    (1690, 0, "o");
    (1691, 0, "l");
    (1692, 0, "u");
    (1693, 0, "m");
    (1694, 0, "e");
    (1695, 0, " ");
    (1696, 0, "=");
    (1697, 0, " ");
    (1698, 0, "0");
    (1699, 0, ".");
    (1700, 0, "0");
    (1701, 0, "1");
    (1675, 2, "\t");
    (1688, 13, "m");
    (1689, 0, "u");
    (1690, 0, "t");
    (1691, 0, "e");
    (1692, 0, "d");
    (1693, 0, " ");
    (1694, 0, "=");
    (1695, 0, " ");
    (1696, 0, "t");
    (1697, 0, "r");
    (1698, 0, "u");
    (1699, 0, "e");
    (1675, 0, "\tround_audio.muted = true\n");
    (1726, 26, "");
    (1701, 1, "\t\t");
    (1701, 0, "\tround_audio.play().then(\n");
    (1753, 10, "");
    (1727, 2, "\t\t\t");
    (1727, 0, "\t\t() => {\n");
    (1760, 4, "f");
    (1761, 0, "a");
    (1762, 0, "l");
    (1763, 0, "s");
    (1764, 0, "e");
    (1737, 0, "\t\t\tround_audio.muted = false\n");
    (1794, 22, "");
    (1766, 0, "\t\t\taudio_works = true\n");
    (1816, 30, "");
    (1788, 0, "\t\t\tconsole.log('Audio works')\n");
    (1846, 5, "");
    (1818, 3, "\t\t");
    (1818, 0, "\t\t},\n");
    (1850, 10, "");
    (1823, 2, "\t\t\t");
    (1823, 0, "\t\t() => {\n");
    (1861, 0, "\n\t\t() => {");
    (1833, 3, "\t\t");
    (1823, 10, "");
    (1850, 0, "\n\t\t},");
    (1823, 2, "\t\t\t");
    (1818, 5, "");
    (1846, 0, "\n\t\t\tconsole.log('Audio works')");
    (1788, 30, "");
    (1816, 0, "\n\t\t\taudio_works = true");
    (1766, 22, "");
    (1737, 29, "");
    (1760, 5, "true");
    (1764, 0, "\n\t\t() => {");
    (1737, 3, "\t\t");
    (1727, 10, "");
    (1753, 0, "\n\tround_audio.play().then(");
    (1727, 2, "\t");
    (1701, 26, "");
    (1675, 26, "");
    (1695, 5, "");
    (1693, 2, "");
    (1688, 5, "volume = 0.01");
    (1675, 1, "\t\t");
    (1697, 5, "");
    (1695, 2, "");
    (1677, 18, "round_audio");
    (1674, 14, "");
    (1676, 11, "");
    (1676, 0, "round_audio");
    (1630, 3, "");
    (1630, 1, "r");
    (1631, 0, "o");
    (1632, 0, "u");
    (1633, 0, "n");
    (1630, 4, "round_audio");
    (1628, 0, "]");
    (1628, 1, "");
    (1628, 0, "\n\t");
    (1630, 0, "c");
    (1631, 0, "o");
    (1632, 0, "n");
    (1633, 0, "s");
    (1634, 0, "t");
    (1635, 0, " ");
    (1636, 0, "o");
    (1637, 0, "l");
    (1638, 0, "d");
    (1639, 0, "_");
    (1640, 0, "s");
    (1641, 0, "r");
    (1642, 0, "c");
    (1643, 0, " ");
    (1644, 0, "=");
    (1645, 0, " ");
    (1646, 0, "r");
    (1647, 0, "o");
    (1648, 0, "u");
    (1649, 0, "n");
    (1650, 0, "d");
    (1651, 0, "_");
    (1652, 0, "a");
    (1653, 0, "u");
    (1654, 0, "d");
    (1655, 0, "i");
    (1656, 0, "o");
    (1646, 11, "round_audio");
    (1657, 0, ".");
    (1658, 0, "a");
    (1658, 1, "");
    (1658, 0, "s");
    (1659, 0, "r");
    (1660, 0, "c");
    (1772, 0, "\n\t\t\t");
    (1776, 0, "r");
    (1777, 0, "o");
    (1778, 0, "n");
    (1779, 0, "d");
    (1780, 0, "_");
    (1781, 0, "a");
    (1782, 0, "u");
    (1783, 0, "d");
    (1784, 0, "i");
    (1785, 0, "o");
    (1776, 10, "round_audio");
    (1787, 0, ".");
    (1788, 0, "s");
    (1789, 0, "r");
    (1790, 0, "c");
    (1791, 0, " ");
    (1792, 0, "=");
    (1793, 0, " ");
    (1794, 0, "o");
    (1795, 0, "l");
    (1796, 0, "d");
    (1797, 0, "_");
    (1794, 4, "old_src");
    (1869, 0, "\n\t\t\t");
    (1873, 0, "round_audio.src = old_src");
    (1636, 3, "r");
    (1637, 0, "o");
    (1638, 0, "u");
    (1639, 0, "n");
    (1640, 0, "d");
    (1629, 0, "\tconst round_src = round_audio.src\n");
    (1671, 5, "c");
    (1671, 1, "round");
    (1683, 5, "c");
    (1671, 5, "c");
    (1680, 0, "o");
    (1672, 0, "o");
    (1682, 0, "m");
    (1673, 0, "m");
    (1684, 0, "p");
    (1674, 0, "p");
    (1686, 0, "l");
    (1675, 0, "l");
    (1688, 0, "e");
    (1676, 0, "e");
    (1690, 0, "t");
    (1677, 0, "t");
    (1692, 0, "e");
    (1678, 0, "e");
    (1705, 0, "\tround_audio.src = '/silence.mp3'\n");
    (1705, 34, "");
    (1723, 0, " ");
    (1724, 0, "c");
    (1725, 0, "o");
    (1726, 0, "m");
    (1727, 0, "p");
    (1728, 0, "l");
    (1729, 0, "e");
    (1730, 0, "t");
    (1724, 7, "complete_audio");
    (1738, 0, ".");
    (1739, 0, "s");
    (1740, 0, "r");
    (1741, 0, "c");
    (1742, 0, " ");
    (1743, 0, "=");
    (1778, 0, "\n\t\t");
    (1781, 0, "c");
    (1782, 0, "o");
    (1783, 0, "m");
    (1784, 0, "p");
    (1785, 0, "l");
    (1786, 0, "e");
    (1787, 0, "t");
    (1788, 0, "e");
    (1789, 0, "_");
    (1790, 0, "a");
    (1791, 0, "u");
    (1792, 0, "d");
    (1793, 0, "i");
    (1794, 0, "o");
    (1781, 14, "complete_audio");
    (1795, 0, ".");
    (1796, 0, "p");
    (1797, 0, "l");
    (1798, 0, "a");
    (1799, 0, "y");
    (1800, 0, "(");
    (1801, 0, ")");
    (1779, 2, "\t");
    (1978, 7, "r");
    (1881, 7, "r");
    (1973, 0, "o");
    (1882, 0, "o");
    (1975, 0, "u");
    (1883, 0, "u");
    (1977, 0, "n");
    (1884, 0, "n");
    (1979, 0, "d");
    (1885, 0, "d");
    (1981, 0, "_");
    (1886, 0, "_");
    (1983, 0, "s");
    (1887, 0, "s");
    (1985, 0, "r");
    (1888, 0, "r");
    (1987, 0, "c");
    (1889, 0, "c");
    (1989, 0, "\n\t\t\t");
    (1890, 0, "\n\t\t\t");
    (1997, 0, "c");
    (1894, 0, "c");
    (1999, 0, "o");
    (1895, 0, "o");
    (2001, 0, "m");
    (1896, 0, "m");
    (2003, 0, "p");
    (1897, 0, "p");
    (2005, 0, "l");
    (1898, 0, "l");
    (2007, 0, "e");
    (1899, 0, "e");
    (2009, 0, "t");
    (1900, 0, "t");
    (2011, 0, "e");
    (1901, 0, "e");
    (2013, 0, "_");
    (1902, 0, "_");
    (2015, 0, "a");
    (1903, 0, "a");
    (2017, 0, "u");
    (1904, 0, "u");
    (2019, 0, "d");
    (1905, 0, "d");
    (2021, 0, "i");
    (1906, 0, "i");
    (2023, 0, "o");
    (1907, 0, "o");
    (2011, 14, "complete_audio");
    (1894, 14, "complete_audio");
    (2025, 0, ".");
    (1908, 0, ".");
    (2027, 0, "s");
    (1909, 0, "s");
    (2029, 0, "r");
    (1910, 0, "r");
    (2031, 0, "c");
    (1911, 0, "c");
    (2033, 0, " ");
    (1912, 0, " ");
    (2035, 0, "=");
    (1913, 0, "=");
    (2037, 0, " ");
    (1914, 0, " ");
    (2039, 0, "c");
    (1915, 0, "c");
    (2041, 0, "o");
    (1916, 0, "o");
    (2043, 0, "m");
    (1917, 0, "m");
    (2045, 0, "p");
    (1918, 0, "p");
    (2047, 0, "l");
    (1919, 0, "l");
    (2049, 0, "e");
    (1920, 0, "e");
    (2051, 0, "t");
    (1921, 0, "t");
    (2053, 0, "e");
    (1922, 0, "e");
    (2055, 0, "_");
    (1923, 0, "_");
    (2057, 0, "s");
    (1924, 0, "s");
    (2049, 10, "complete_src");
    (1915, 10, "complete_src");
    (1585, 0, "\n\t");
    (1587, 0, "/");
    (1588, 0, "/");
    (1589, 0, " ");
    (1590, 0, "T");
    (1591, 0, "h");
    (1592, 0, "i");
    (1593, 0, "s");
    (1594, 0, " ");
    (1595, 0, "u");
    (1596, 0, "g");
    (1597, 0, "l");
    (1598, 0, "y");
    (1599, 0, " ");
    (1600, 0, "m");
    (1601, 0, "o");
    (1602, 0, "n");
    (1603, 0, "s");
    (1604, 0, "t");
    (1605, 0, "r");
    (1606, 0, "o");
    (1607, 0, "s");
    (1608, 0, "i");
    (1609, 0, "t");
    (1610, 0, "y");
    (1611, 0, " ");
    (1612, 0, "b");
    (1613, 0, "r");
    (1614, 0, "o");
    (1615, 0, "u");
    (1616, 0, "g");
    (1617, 0, "h");
    (1618, 0, "t");
    (1619, 0, " ");
    (1620, 0, "t");
    (1621, 0, "o");
    (1622, 0, " ");
    (1623, 0, "y");
    (1624, 0, "o");
    (1625, 0, "u");
    (1626, 0, " ");
    (1627, 0, "b");
    (1628, 0, "y");
    (1629, 0, " ");
    (1630, 0, "i");
    (1631, 0, "O");
    (1632, 0, "S");
    (1633, 0, " ");
    (1634, 0, "S");
    (1635, 0, "a");
    (1636, 0, "f");
    (1637, 0, "a");
    (1638, 0, "r");
    (1639, 0, "i");
    (1640, 0, ".");
    (1641, 0, " ");
    (1642, 0, "T");
    (1643, 0, "h");
    (1644, 0, "i");
    (1645, 0, "s");
    (1646, 0, " ");
    (1647, 0, "i");
    (1647, 1, "");
    (1647, 0, "s");
    (1648, 0, "e");
    (1649, 0, "e");
    (1650, 0, "m");
    (1651, 0, "s");
    (1652, 0, " ");
    (1653, 0, "t");
    (1654, 0, "o");
    (1655, 0, " ");
    (1656, 0, "t");
    (1656, 1, "");
    (1656, 0, "b");
    (1657, 0, "e");
    (1658, 0, " ");
    (1659, 0, "t");
    (1660, 0, "h");
    (1661, 0, "e");
    (1662, 0, " ");
    (1663, 0, "o");
    (1664, 0, "n");
    (1665, 0, "l");
    (1666, 0, "y");
    (1667, 0, " ");
    (1668, 0, "w");
    (1669, 0, "a");
    (1670, 0, "y");
    (1671, 0, " ");
    (1672, 0, "t");
    (1673, 0, "o");
    (1674, 0, " ");
    (1675, 0, "b");
    (1676, 0, "l");
    (1677, 0, "e");
    (1678, 0, "s");
    (1679, 0, "s");
    (1680, 0, " ");
    (1681, 0, "t");
    (1682, 0, "h");
    (1683, 0, "e");
    (1684, 0, " ");
    (1685, 0, "a");
    (1686, 0, "u");
    (1687, 0, "d");
    (1688, 0, "i");
    (1689, 0, "o");
    (1690, 0, " ");
    (1691, 0, "o");
    (1692, 0, "b");
    (1693, 0, "j");
    (1694, 0, "e");
    (1695, 0, "c");
    (1696, 0, "t");
    (1697, 0, "s");
    (1698, 0, " ");
    (1699, 0, "t");
    (1700, 0, "o");
    (1701, 0, " ");
    (1702, 0, "b");
    (1703, 0, "e");
    (1704, 0, " ");
    (1705, 0, "a");
    (1706, 0, "b");
    (1707, 0, "l");
    (1708, 0, "e");
    (1709, 0, " ");
    (1710, 0, "t");
    (1711, 0, "o");
    (1712, 0, " ");
    (1713, 0, "p");
    (1714, 0, "l");
    (1715, 0, "a");
    (1716, 0, "y");
    (1717, 0, " ");
    (1718, 0, "d");
    (1719, 0, "u");
    (1720, 0, "r");
    (1721, 0, "i");
    (1722, 0, "n");
    (1723, 0, "g");
    (1724, 0, " ");
    (1725, 0, "t");
    (1726, 0, "h");
    (1727, 0, "e");
    (1728, 0, " ");
    (1729, 0, "g");
    (1730, 0, "a");
    (1731, 0, "m");
    (1732, 0, "e");
    (1733, 0, ".");
    (1734, 0, " ");
    (1735, 0, ":");
    (1736, 0, "/");
    (1737, 0, "\n\t");
    (18568, 8, "</style>");
    (1642, 1, "");
    (1642, 0, "\n\t");
    (1644, 0, "/");
    (1645, 0, "/");
    (1646, 0, " ");
    (1647, 0, "t");
    (1647, 1, "");
    (1647, 0, "T");
    (1695, 1, "");
    (1695, 0, "\n\t");
    (1697, 0, "/");
    (1698, 0, "/");
    (1699, 0, " ");
    (16369, 0, " */");
    (16355, 0, "/* ");
    (16372, 3, "");
    (16355, 3, "");
    (16355, 0, "m");
    (16356, 0, "i");
    (16357, 0, "n");
    (16358, 0, "-");
    (16124, 0, "\n\t");
    (16126, 0, "f");
    (16127, 0, "o");
    (16128, 0, "n");
    (16129, 0, "t");
    (16130, 0, "-");
    (16131, 0, "s");
    (16132, 0, "i");
    (16133, 0, "z");
    (16134, 0, "e");
    (16135, 0, ":");
    (16136, 0, " ");
    (16137, 0, "6");
    (16138, 0, "0");
    (16139, 0, "%");
    (16140, 0, ";");
    (16137, 1, "");
    (16137, 0, "1");
    (16138, 0, "0");
    (16138, 1, "");
    (16138, 0, "2");
    (16138, 1, "");
    (16138, 0, "5");
    (16138, 1, "");
    (16138, 0, "2");
    (16138, 1, "");
    (16138, 0, "3");
    (16035, 0, " */");
    (16019, 0, "/* ");
    (16038, 3, "");
    (16019, 3, "");
    (16029, 5, "a");
    (16030, 0, "b");
    (16031, 0, "s");
    (16032, 0, "o");
    (16033, 0, "l");
    (16034, 0, "u");
    (16029, 6, "absolute");
    (16226, 0, ".");
    (16227, 0, "5");
    (16227, 1, "");
    (16226, 1, "");
    (16225, 1, "");
    (16225, 0, "3");
    (16230, 0, " ");
    (16231, 0, "2");
    (16232, 0, "e");
    (16233, 0, "m");
    (16234, 0, " ");
    (16235, 0, "0");
    (16212, 0, ":");
    (16213, 0, "n");
    (16214, 0, "o");
    (16215, 0, "t");
    (16216, 0, "(");
    (16217, 0, ":");
    (16218, 0, "e");
    (16219, 0, "m");
    (16220, 0, "p");
    (16221, 0, "t");
    (16222, 0, "y");
    (16223, 0, ")");
    (17451, 224, "");
    (16390, 0, ":");
    (16391, 0, "e");
    (16392, 0, "m");
    (16393, 0, "p");
    (16394, 0, "t");
    (16395, 0, "y");
    (16400, 4, "");
    (16375, 0, " */");
    (16359, 0, "/* ");
    (16378, 3, "");
    (16359, 3, "");
    (16377, 0, " */");
    (16353, 0, "/* ");
    (16404, 0, "\n\t");
    (16406, 0, "n");
    (16406, 1, "");
    (16405, 1, "");
    (16404, 1, "");
    (16416, 1, "");
    (16416, 0, "2");
    (16040, 3, "b");
    (16041, 0, "o");
    (16042, 0, "t");
    (16043, 0, "t");
    (16044, 0, "o");
    (16045, 0, "m");
    (5676, 9, "");
    (9300, 9, "");
    (3409, 11, "w");
    (3410, 0, "i");
    (3411, 0, "l");
    (3412, 0, "l");
    (3409, 10, "s");
    (3410, 0, "t");
    (3411, 0, "a");
    (3412, 0, "r");
    (3413, 0, "t");
    (3414, 0, "i");
    (3415, 0, "n");
    (3416, 0, "g");
    (3417, 0, ".");
    (3418, 0, ".");
    (3419, 0, ".");
    (1535, 0, "\n");
    (1536, 0, "\n");
    (1537, 0, "w");
    (1538, 0, "i");
    (1539, 0, "n");
    (1540, 0, "d");
    (1541, 0, "o");
    (1542, 0, "w");
    (1543, 0, ".");
    (1544, 0, "o");
    (1545, 0, "n");
    (1546, 0, "c");
    (1547, 0, "l");
    (1548, 0, "i");
    (1549, 0, "c");
    (1550, 0, "k");
    (1551, 0, " ");
    (1552, 0, "=");
    (1553, 0, " ");
    (1554, 0, "(");
    (1555, 0, ")");
    (1556, 0, " ");
    (1557, 0, "=");
    (1558, 0, ">");
    (1559, 0, " ");
    (1560, 0, "{");
    (1561, 0, "\n\t");
    (1563, 0, "\n\t");
    (1562, 1, "");
    (1563, 1, "}");
    (1562, 0, "\t");
    (1563, 0, "c");
    (1564, 0, "o");
    (1565, 0, "n");
    (1566, 0, "s");
    (1567, 0, "o");
    (1568, 0, "e");
    (1569, 0, ".");
    (1569, 1, "");
    (1568, 1, "");
    (1568, 0, "l");
    (1569, 0, "e");
    (1570, 0, ".");
    (1571, 0, "l");
    (1572, 0, "o");
    (1573, 0, "g");
    (1574, 0, "(");
    (1575, 0, "'");
    (1576, 0, "o");
    (1577, 0, "n");
    (1578, 0, "c");
    (1579, 0, "l");
    (1580, 0, "i");
    (1581, 0, "c");
    (1582, 0, "k");
    (1583, 0, "\"");
    (1583, 1, "");
    (1583, 0, "'");
    (1584, 0, ")");
    (1537, 6, "d");
    (1538, 0, "o");
    (1539, 0, "c");
    (1540, 0, "u");
    (1541, 0, "m");
    (1542, 0, "e");
    (1543, 0, "n");
    (1544, 0, "t");
    (1565, 22, "t");
    (1566, 0, "e");
    (1567, 0, "s");
    (1568, 0, "t");
    (1569, 0, "_");
    (1570, 0, "a");
    (1571, 0, "u");
    (1572, 0, "d");
    (1573, 0, "i");
    (1574, 0, "o");
    (1575, 0, "(");
    (1576, 0, ")");
    (1565, 0, "i");
    (1566, 0, "f");
    (1567, 0, " ");
    (1568, 0, "(");
    (1569, 0, "!");
    (1570, 0, "a");
    (1571, 0, "u");
    (1572, 0, "d");
    (1573, 0, "i");
    (1574, 0, "o");
    (1575, 0, ")");
    (1575, 1, "");
    (1575, 0, "_");
    (1576, 0, "w");
    (1577, 0, "o");
    (1578, 0, "r");
    (1579, 0, "k");
    (1580, 0, "s");
    (1581, 0, ")");
    (1582, 0, " ");
    (1563, 0, "\n\t");
    (1565, 0, "/");
    (1566, 0, "/");
    (1567, 0, " ");
    (1564, 4, "");
    (1563, 1, "");
    (1536, 61, "");
    (2297, 1, "");
    ( 2362,
      0,
      "\ndocument.onclick = () => {\n\tif (!audio_works) test_audio()\n}" );
    (2361, 1, "");
  |]
